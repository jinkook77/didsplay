
AVRASM ver. 2.1.30  D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm Fri Jan 03 09:26:02 2020

D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1101): warning: Register r4 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1102): warning: Register r3 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1103): warning: Register r5 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1104): warning: Register r6 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1105): warning: Register r7 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1106): warning: Register r8 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1107): warning: Register r9 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1108): warning: Register r10 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1109): warning: Register r11 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1110): warning: Register r12 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1111): warning: Register r13 already defined by the .DEF directive
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1112): warning: Register r14 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.35 Advanced
                 ;(C) Copyright 1998-2019 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _command=R4
                 	.DEF _fnd_data=R3
                 	.DEF _count_temp=R5
                 	.DEF _count_temp_msb=R6
                 	.DEF _send_process_count=R7
                 	.DEF _send_process_count_msb=R8
                 	.DEF _digit_num=R9
                 	.DEF _digit_num_msb=R10
                 	.DEF _digit=R11
                 	.DEF _digit_msb=R12
                 	.DEF _temp_a=R13
                 	.DEF _temp_a_msb=R14
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0b16 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 00d0 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0721 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0a38 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00007b 0000      	.DW  0x0000
                 
                 _0x3:
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1193): warning: .cseg .db misalignment - padding zero byte
00007c 00ff      	.DB  0xFF
                 _0x4:
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1195): warning: .cseg .db misalignment - padding zero byte
00007d 00ff      	.DB  0xFF
                 _0x5:
D:\191226 - ÇÑÈ­Å»·¹½º\DISPLAY 191222\Debug\List\DISPLAY.asm(1197): warning: .cseg .db misalignment - padding zero byte
00007e 0001      	.DB  0x1
                 
                 __GLOBAL_INI_TBL:
00007f 0001      	.DW  0x01
000080 0002      	.DW  0x02
000081 00f6      	.DW  __REG_BIT_VARS*2
                 
000082 0001      	.DW  0x01
000083 0b54      	.DW  _temp_control_1_old
000084 00f8      	.DW  _0x3*2
                 
000085 0001      	.DW  0x01
000086 0b55      	.DW  _temp_control_2_old
000087 00fa      	.DW  _0x4*2
                 
000088 0001      	.DW  0x01
000089 0b8d      	.DW  _ge_data_kind
00008a 00fc      	.DW  _0x5*2
                 
                 _0xFFFFFFFF:
00008b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00008c 94f8      	CLI
00008d 27ee      	CLR  R30
00008e bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00008f e0f1      	LDI  R31,1
000090 bff5      	OUT  MCUCR,R31
000091 bfe5      	OUT  MCUCR,R30
000092 93e0 0074 	STS  XMCRA,R30
000094 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000096 e08d      	LDI  R24,(14-2)+1
000097 e0a2      	LDI  R26,2
000098 27bb      	CLR  R27
                 __CLEAR_REG:
000099 93ed      	ST   X+,R30
00009a 958a      	DEC  R24
00009b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00009c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009d e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009e e0a0      	LDI  R26,LOW(__SRAM_START)
00009f e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a0 93ed      	ST   X+,R30
0000a1 9701      	SBIW R24,1
0000a2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a3 efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a4 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000a5 9185      	LPM  R24,Z+
0000a6 9195      	LPM  R25,Z+
0000a7 9700      	SBIW R24,0
0000a8 f061      	BREQ __GLOBAL_INI_END
0000a9 91a5      	LPM  R26,Z+
0000aa 91b5      	LPM  R27,Z+
0000ab 9005      	LPM  R0,Z+
0000ac 9015      	LPM  R1,Z+
0000ad 01bf      	MOVW R22,R30
0000ae 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000af 9005      	LPM  R0,Z+
0000b0 920d      	ST   X+,R0
0000b1 9701      	SBIW R24,1
0000b2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b3 01fb      	MOVW R30,R22
0000b4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000b5 bf8b      	OUT  RAMPZ,R24
                 
0000b6 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000b7 e0e0      	LDI  R30,__GPIOR0_INIT
0000b8 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000b9 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ba bfed      	OUT  SPL,R30
0000bb e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000bc bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000bd e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000be e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000bf 940c 16ed 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                 ;//*******************************************************
                 ;//This program was created by the CodeWizardAVR V3.35
                 ;//Automatic Program Generator
                 ;//Copyright 1998-2019 Pavel Haiduc, HP InfoTech s.r.l.
                 ;//http://www.hpinfotech.com
                 ;//
                 ;//Project :
                 ;//Version :
                 ;//Date    : 2019-08-15                                                3Author  :
                 ;//Company :
                 ;//Comments:
                 ;//
                 ;//
                 ;//Chip type               : ATmega2560
                 ;//Program type            : Application
                 ;//AVR Core Clock frequency: 11.059200 MHz
                 ;//Memory model            : Small
                 ;//External RAM size       : 0
                 ;//Data Stack size         : 2048
                 ;//*******************************************************/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ; // Bit-Banged I2C Bus functions
                 ;#include <i2c.h>
                 ;
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;
                 ;
                 ;//PORT DEFINE
                 ;#define DT_NORMAL PORTA.4
                 ;#define DT_ERR PORTA.5
                 ;#define GE_NORMAL PORTA.6
                 ;#define GE_ERR PORTA.7
                 ;#define BAT_RUN_1 PORTE.4
                 ;#define BAT_RUN_2 PORTE.5
                 ;#define BAT_ERR_1 PORTE.6
                 ;#define BAT_ERR_2 PORTE.7
                 ;
                 ;//TEST LED
                 ;#define TEST_LED_1 PORTC.5
                 ;#define TEST_LED_2 PORTC.6
                 ;
                 ;//BUZZER
                 ;#define BUZZER_HIGH PORTB.5
                 ;#define BUZZER_STOP PINB.4
                 ;
                 ;
                 ;// BUZZER STOP KEY
                 ;#define BUZZER_STOP_KEY PINB.4
                 ;
                 ;//ADDRESS
                 ;#define ADDRESS_0 (PINJ & 0X08) == 0X08
                 ;#define ADDRESS_1 (PINJ & 0X04) == 0X04
                 ;#define ADDRESS_2 (PINJ & 0X02) == 0X02
                 ;#define ADDRESS_3 (PINJ & 0X01) == 0X01
                 ;
                 ;//FND
                 ;#define LED_DIN PORTC.4
                 ;#define LED_CLK PORTC.3
                 ;#define LED_LOAD PORTC.2
                 ;#define LED_LOAD_A PORTC.1
                 ;#define LED_LOAD_B PORTC.0
                 ;
                 ;//RE_DE
                 ;#define RE_DE0 PORTE.2
                 ;#define RE_DE1 PORTE.3
                 ;
                 ;//LAN
                 ;#define LAN_RESET PORTD.0
                 ;#define LAN_STS PIND.1
                 ;#define LAN_CTS PIND.5
                 ;#define LAN_ISP PORTD.4
                 ;#define LAN_RTS PIND.6
                 ;#define LAN_TSP PIND.7
                 ;
                 ;// HOT SWAP
                 ;#define DIS_HOT_SWAP PINB.0
                 ;
                 ;
                 ;//VALUE DEFIEN
                 ;#define ON 1
                 ;#define OFF 0
                 ;
                 ;#define ERR 1
                 ;#define NOR 0
                 ;
                 ;
                 ;#define buzzer_err_delay 3000 //ºÎÀú ¿ï¸®´Â µô·¹ÀÌ ½Ã°£ Ã³¸®
                 ;
                 ;// Declare your global variables here
                 ;char command;
                 ;char fnd_data;
                 ;int count_temp;
                 ;int send_process_count;
                 ;int digit_num;
                 ;int digit;
                 ;
                 ;//timer
                 ;int temp_a;
                 ;int temp_b;
                 ;int temp_c;
                 ;int temp_out_to_pc_count;
                 ;int temp_out_pbit_count;
                 ;// µ¥ÀÌÅÍ º¯¼ö
                 ;int bat_volt_1;
                 ;int bat_volt_2;
                 ;
                 ;// rtcº¯¼ö
                 ;//unsigned char week_day,day,month,year;
                 ;unsigned char year;
                 ;unsigned char month;
                 ;unsigned char week;
                 ;unsigned char day;
                 ;unsigned char hour;
                 ;unsigned char minute;
                 ;unsigned char sec;
                 ;
                 ;//time
                 ;eeprom unsigned char keep_year @0x02;
                 ;eeprom unsigned char keep_month @0x04;
                 ;eeprom unsigned char keep_day @0x06;
                 ;eeprom unsigned char keep_hour @0x07;
                 ;eeprom unsigned char keep_minute @0x09;
                 ;eeprom unsigned char keep_sec @0x0b;
                 ;
                 ;
                 ;
                 ;//¹öÆÛ
                 ;unsigned int voltage_1;
                 ;unsigned int currunt_1;
                 ;unsigned int voltage_2;
                 ;unsigned int currunt_2;
                 ;
                 ;
                 ;//Àü¾Ð
                 ;unsigned int voltage_ch1_1;
                 ;unsigned int voltage_ch2_1;
                 ;unsigned int voltage_ch3_1;
                 ;unsigned int voltage_ch4_1;
                 ;unsigned int voltage_ch5_1;
                 ;unsigned int voltage_ch6_1;
                 ;unsigned int voltage_ch7_1;
                 ;
                 ;unsigned int voltage_m48_1;
                 ;unsigned int voltage_fan_1;
                 ;
                 ;//Àü·ù
                 ;unsigned int currunt_ch1_1;
                 ;unsigned int currunt_ch2_1;
                 ;unsigned int currunt_ch3_1;
                 ;unsigned int currunt_ch4_1;
                 ;unsigned int currunt_ch5_1;
                 ;unsigned int currunt_ch6_1;
                 ;unsigned int currunt_ch7_1;
                 ;
                 ;unsigned int voltage_m24_1;
                 ;unsigned int currunt_fan_1;
                 ;
                 ;//Àü¾Ð
                 ;unsigned int voltage_ch1_2;
                 ;unsigned int voltage_ch2_2;
                 ;unsigned int voltage_ch3_2;
                 ;unsigned int voltage_ch4_2;
                 ;unsigned int voltage_ch5_2;
                 ;unsigned int voltage_ch6_2;
                 ;unsigned int voltage_ch7_2;
                 ;
                 ;unsigned int voltage_m48_2;
                 ;unsigned int voltage_fan_2;
                 ;
                 ;//Àü·ù
                 ;unsigned int currunt_ch1_2;
                 ;unsigned int currunt_ch2_2;
                 ;unsigned int currunt_ch3_2;
                 ;unsigned int currunt_ch4_2;
                 ;unsigned int currunt_ch5_2;
                 ;unsigned int currunt_ch6_2;
                 ;unsigned int currunt_ch7_2;
                 ;
                 ;unsigned int voltage_m24_2;
                 ;unsigned int currunt_fan_2;
                 ;
                 ;//div  48v
                 ;unsigned int div_48v;
                 ;unsigned char ac48_ovp = 0;
                 ;unsigned char ac48_lvp = 0;
                 ;unsigned char dc48_ovp = 0;
                 ;unsigned char dc48_lvp = 0;
                 ;unsigned char deiver_48_err = 0;
                 ;
                 ;
                 ;// buzzer
                 ;bit buzzer_on;
                 ;unsigned int buzzer_count = 0;
                 ;unsigned char data_buffer1_temp[92] = "";
                 ;unsigned char data_buffer2_temp[92] = "";
                 ;unsigned char data_buffer_ge_temp[10] = "";
                 ;//battery 1
                 ;unsigned char batt_level_1 = 0;
                 ;unsigned char err_main_1 = 0;
                 ;unsigned char err1_1 = 0;
                 ;unsigned char err2_1 = 0;
                 ;unsigned char status_1 = 0;
                 ;
                 ;//battery 2
                 ;unsigned char batt_level_2 = 0;
                 ;unsigned char err_main_2 = 0;
                 ;unsigned char err1_2 = 0;
                 ;unsigned char err2_2 = 0;
                 ;unsigned char status_2 = 0;
                 ;
                 ;//battery data
                 ;//unsigned char batt_record_data = 0;
                 ;
                 ;//GENERATOR
                 ;unsigned char CRC_H = 0;
                 ;unsigned char CRC_L = 0;
                 ;unsigned char ge_voltage_h  = 0;
                 ;unsigned char ge_voltage_l = 0;
                 ;unsigned char ge_currunt_h  = 0;
                 ;unsigned char ge_currunt_l = 0;
                 ;unsigned char ge_err_data  = 0;
                 ;unsigned int voltage_ge = 0;
                 ;unsigned int currunt_ge = 0;
                 ;unsigned char ge_err_act = 0;
                 ;unsigned char ge_err_latch = 0;
                 ;
                 ;//pc transmmit confirm
                 ;bit send_to_pc_active;
                 ;
                 ;
                 ;//BIT RESULT
                 ;unsigned char pobit_result = 0;
                 ;unsigned char pbit_result = 0;
                 ;
                 ;//
                 ;unsigned char batt_charge_1 = 0;
                 ;unsigned char batt_charge_2 = 0;
                 ;unsigned char batt_discharge_1 = 0;
                 ;unsigned char batt_discharge_2 = 0;
                 ;unsigned char err_fan_1 = 0;
                 ;unsigned char err_fan_2 = 0;
                 ;
                 ;//battery
                 ;bit batt_link_err_act_1 = 0;
                 ;bit batt_link_err_act_2 = 0;
                 ;bit batt_run_act_1 = 0;
                 ;bit batt_run_act_2 = 0;
                 ;
                 ;//½Ã°£ ±â·Ï ÇÑ¹ø¸¸ Ã³¸®
                 ;unsigned char time_data_get_act = 0;
                 ;
                 ;//hot swap
                 ;bit dt_err_act;
                 ;unsigned char led_flash = 0;
                 ;// ½Ã°£¸í·É ÀÔ·Â
                 ;unsigned char time_data_get = 0;
                 ;
                 ;//control temp
                 ;unsigned char temp_control_1 = 0;
                 ;unsigned char temp_control_2 = 0;
                 ;unsigned char temp_control_1_ = 0;
                 ;unsigned char temp_control_2_ = 0;
                 ;
                 ;unsigned char temp_control_1_old = 0xff;
                 
                 	.DSEG
                 ;unsigned char temp_control_2_old = 0xff;
                 ;
                 ;unsigned char temp_control_sel = 0;
                 ;
                 ;//send to div µ¥ÀÌÅÍ Àü¼Û ½Ç½Ã
                 ;unsigned char send_to_div_act = 0;
                 ;unsigned char send_to_div_info_act = 0;
                 ;
                 ;//ºÎÀú ÇÑ¹ø¸¸ ¿ï¸²
                 ;unsigned char dt_err_act_buzzer = 0;
                 ;unsigned char ge_err_act_buzzer = 0;
                 ;unsigned char batt_err_1_act = 0;
                 ;unsigned char batt_err_2_act = 0;
                 ;unsigned char batt_err_1_act_buzzer = 0;
                 ;unsigned char batt_err_2_act_buzzer = 0;
                 ;unsigned char power_link1_err_act_buzzer = 0;
                 ;unsigned char power_link2_err_act_buzzer = 0;
                 ;
                 ;// switch _status
                 ;unsigned char sw_status = 0;
                 ;
                 ;//power_link for div
                 ;unsigned char power_link_1 = 0;;
                 ;unsigned char power_link_2 = 0;
                 ;unsigned char power_link1_err = 0;
                 ;unsigned char power_link2_err = 0;
                 ;
                 ;// Åë½Å´ÜÀý Ä«¿îÆ®
                 ;unsigned int loss_count_a, loss_count_ge = 0;
                 ;bit comm_err = 0;
                 ;bit comm_ge_err = 0;
                 ;const int loss_active_delay_time = 40;//40 //30; //10
                 ;const int loss_ge_active_delay_time = 20;//¹ßÀü±â ¸µÅ© ¿¡·¯ Ã³¸®
                 ;//unsigned char comm_err_temp = 0;
                 ;//unsigned int comm_err_count = 0;
                 ;//unsigned char error_item = 0;
                 ;
                 ;//detail error
                 ;unsigned int link_err_detail;
                 ;unsigned char div_err_detail = 0;
                 ;unsigned char power_1_err_detail = 0;
                 ;unsigned char power_2_err_detail = 0;
                 ;unsigned char bat_1_err_detail = 0;
                 ;unsigned char bat_2_err_detail = 0;
                 ;unsigned char gen_err_detail = 0;
                 ;
                 ;unsigned char power_1_err = 0;
                 ;unsigned char power_2_err = 0;
                 ;
                 ;unsigned char err_bat1_temp = 0;
                 ;unsigned char err_bat2_temp = 0;
                 ;unsigned char err_bat1_volt = 0;
                 ;unsigned char err_bat2_volt = 0;
                 ;unsigned char err_bat1_curr = 0;
                 ;unsigned char err_bat2_curr = 0;
                 ;
                 ;// message_count
                 ;unsigned char Common_CheckLink_number = 0;
                 ;unsigned char Distributor_ShutdownErroResponse_number = 0;
                 ;//unsigned char Distributor_PoBITResponse_number = 0;
                 ;unsigned char Distributor_BITBetailResponse_number = 0;
                 ;unsigned char Distributor_PBIT_number = 0;
                 ;unsigned char Distributor_TimeSyncAck_number = 0;
                 ;unsigned char Distributor_ShutdownResponse_number = 0;
                 ;//unsigned char Distributor_PoBITResponse = 0;
                 ;unsigned char PoBITResult_number = 0;
                 ;unsigned char PoBITResult_number_ack = 0;
                 ;unsigned char Distributor_devicestatus_number = 0;
                 ;
                 ;unsigned char Common_CHeckLink_act = 0;
                 ;unsigned char Distributor_PBIT_act = 0;
                 ;unsigned char Distributor_ShutdownResponse_act = 0;
                 ;unsigned char Distributor_ShutdownErroResponse_act = 0;
                 ;unsigned char Distributor_TimeSyncAck_act = 0;
                 ;//unsigned char Distributor_PoBITResponse_act_pre = 0;
                 ;unsigned char Distributor_BITDetailResponse_act = 0;
                 ;unsigned char Distributor_PoBIT_act = 0;
                 ;unsigned char Distributor_PoBIT_act_pre = 0;
                 ;unsigned char send_to_ge_active = 0;//485 ¹ßÀü±â¿Í Åë½Å
                 ;unsigned char po_bit_recive_data_detail = 0; //¼ö½Åµ¥ÀÌÅÍ
                 ;//unsigned char po_bit_set_recive_data = 0;
                 ;
                 ;unsigned char ge_data_kind = 1;
                 ;
                 ;//ÃÊ±â ºÎÀú ¾È¿ï¸®°Ô Ã³¸®
                 ;#define mode_change_count_max 80    //10
                 ;unsigned char mode_change_and_init = 0;
                 ;unsigned char mode_change_count = 0;
                 ;unsigned char buzzer_out_wait = 0;
                 ;unsigned char init_mod_switch = 0;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 8
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;volatile unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;volatile unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;volatile unsigned char rx_counter0=0;
                 ;#else
                 ;volatile unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;void buzzer_clear_all(void)
                 ; 0000 0181 {
                 
                 	.CSEG
                 _buzzer_clear_all:
                 ; .FSTART _buzzer_clear_all
                 ; 0000 0182     dt_err_act_buzzer = OFF;
0000c1 e0e0      	LDI  R30,LOW(0)
0000c2 93e0 0b59 	STS  _dt_err_act_buzzer,R30
                 ; 0000 0183     ge_err_act_buzzer = OFF;
0000c4 93e0 0b5a 	STS  _ge_err_act_buzzer,R30
                 ; 0000 0184     batt_err_1_act_buzzer = OFF;
0000c6 93e0 0b5d 	STS  _batt_err_1_act_buzzer,R30
                 ; 0000 0185     batt_err_2_act_buzzer = OFF;
0000c8 93e0 0b5e 	STS  _batt_err_2_act_buzzer,R30
                 ; 0000 0186     power_link1_err_act_buzzer = OFF;
0000ca 93e0 0b5f 	STS  _power_link1_err_act_buzzer,R30
                 ; 0000 0187     power_link2_err_act_buzzer = OFF;
0000cc 93e0 0b60 	STS  _power_link2_err_act_buzzer,R30
                 ; 0000 0188     buzzer_on = OFF;
0000ce 98f0      	CBI  0x1E,0
                 ; 0000 0189 }
0000cf 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void data_clear()
                 ; 0000 018D {
                 ; 0000 018E          voltage_ch1_2 = 0;
                 ; 0000 018F          currunt_ch1_2 = 0;
                 ; 0000 0190          voltage_ch2_2 = 0;
                 ; 0000 0191          currunt_ch2_2 = 0;
                 ; 0000 0192          voltage_ch3_2 = 0;
                 ; 0000 0193          currunt_ch3_2 = 0;
                 ; 0000 0194          voltage_ch4_2 = 0;
                 ; 0000 0195          currunt_ch4_2 = 0;
                 ; 0000 0196          voltage_ch5_2 = 0;
                 ; 0000 0197          currunt_ch5_2 = 0;
                 ; 0000 0198          voltage_ch6_2 = 0;
                 ; 0000 0199          currunt_ch6_2 = 0;
                 ; 0000 019A          voltage_ch7_2 = 0;
                 ; 0000 019B          currunt_ch7_2 = 0;
                 ; 0000 019C 
                 ; 0000 019D          voltage_m48_2 = 0;
                 ; 0000 019E          voltage_m24_2 = 0;
                 ; 0000 019F 
                 ; 0000 01A0          voltage_fan_2 = 0;
                 ; 0000 01A1          currunt_fan_2 = 0;
                 ; 0000 01A2 
                 ; 0000 01A3          batt_level_2 = 0;
                 ; 0000 01A4          err_main_2 = 0;
                 ; 0000 01A5          err1_2 = 0;
                 ; 0000 01A6          err2_2 = 0;
                 ; 0000 01A7          status_2 = 0;
                 ; 0000 01A8 
                 ; 0000 01A9          voltage_ch1_1 = 0;
                 ; 0000 01AA          currunt_ch1_1 = 0;
                 ; 0000 01AB          voltage_ch2_1 = 0;
                 ; 0000 01AC          currunt_ch2_1 = 0;
                 ; 0000 01AD          voltage_ch3_1 = 0;
                 ; 0000 01AE          currunt_ch3_1 = 0;
                 ; 0000 01AF          voltage_ch4_1 = 0;
                 ; 0000 01B0          currunt_ch4_1 = 0;
                 ; 0000 01B1          voltage_ch5_1 = 0;
                 ; 0000 01B2          currunt_ch5_1 = 0;
                 ; 0000 01B3          voltage_ch6_1 = 0;
                 ; 0000 01B4          currunt_ch6_1 = 0;
                 ; 0000 01B5          voltage_ch7_1 = 0;
                 ; 0000 01B6          currunt_ch7_1 = 0;
                 ; 0000 01B7 
                 ; 0000 01B8          voltage_m48_1 = 0;
                 ; 0000 01B9          voltage_m24_1 = 0;
                 ; 0000 01BA 
                 ; 0000 01BB          voltage_fan_1 = 0;
                 ; 0000 01BC          currunt_fan_1 = 0;
                 ; 0000 01BD 
                 ; 0000 01BE          batt_level_1 = 0;
                 ; 0000 01BF          err_main_1 = 0;
                 ; 0000 01C0          err1_1 = 0;
                 ; 0000 01C1          err2_1 = 0;
                 ; 0000 01C2          status_1 = 0;
                 ; 0000 01C3 }
                 ;
                 ;
                 ;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0000 01CA {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0000d0 940e 1aac 	CALL SUBOPT_0x0
                 ; 0000 01CB unsigned char status;
                 ; 0000 01CC char data;
                 ; 0000 01CD status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
0000d2 9110 00c0 	LDS  R17,192
                 ; 0000 01CE data=UDR0;
0000d4 9100 00c6 	LDS  R16,198
                 ; 0000 01CF if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0000d6 2fe1      	MOV  R30,R17
0000d7 71ec      	ANDI R30,LOW(0x1C)
0000d8 f4e9      	BRNE _0x8
                 ; 0000 01D0    {
                 ; 0000 01D1    rx_buffer0[rx_wr_index0++]=data;
0000d9 91e0 0b9a 	LDS  R30,_rx_wr_index0
0000db 5fef      	SUBI R30,-LOW(1)
0000dc 93e0 0b9a 	STS  _rx_wr_index0,R30
0000de 50e1      	SUBI R30,LOW(1)
0000df e0f0      	LDI  R31,0
0000e0 56ee      	SUBI R30,LOW(-_rx_buffer0)
0000e1 4ff4      	SBCI R31,HIGH(-_rx_buffer0)
0000e2 8300      	ST   Z,R16
                 ; 0000 01D2 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 01D3    // special case for receiver buffer size=256
                 ; 0000 01D4    if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 01D5 #else
                 ; 0000 01D6    if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0000e3 91a0 0b9a 	LDS  R26,_rx_wr_index0
0000e5 30a8      	CPI  R26,LOW(0x8)
0000e6 f419      	BRNE _0x9
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 93e0 0b9a 	STS  _rx_wr_index0,R30
                 ; 0000 01D7    if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x9:
0000ea 91a0 0b9c 	LDS  R26,_rx_counter0
0000ec 5faf      	SUBI R26,-LOW(1)
0000ed 93a0 0b9c 	STS  _rx_counter0,R26
0000ef 30a8      	CPI  R26,LOW(0x8)
0000f0 f429      	BRNE _0xA
                 ; 0000 01D8       {
                 ; 0000 01D9       rx_counter0=0;
0000f1 e0e0      	LDI  R30,LOW(0)
0000f2 93e0 0b9c 	STS  _rx_counter0,R30
                 ; 0000 01DA       rx_buffer_overflow0=1;
0000f4 9468      	SET
0000f5 f821      	BLD  R2,1
                 ; 0000 01DB       }
                 ; 0000 01DC #endif
                 ; 0000 01DD    }
                 _0xA:
                 ; 0000 01DE 
                 ; 0000 01DF 
                 ; 0000 01E0 
                 ; 0000 01E1   if(data == 0x0a )
                 _0x8:
0000f6 300a      	CPI  R16,10
0000f7 f009      	BREQ PC+2
0000f8 c4b9      	RJMP _0xB
                 ; 0000 01E2    {
                 ; 0000 01E3        //½ÃÇè¿ë »èÁ¦¿ä¸Á
                 ; 0000 01E4 //       if(data_buffer2_temp[5] == 0x7f && data_buffer2_temp[4] == 0x77 && data_buffer2_temp[0] == 0x0d)
                 ; 0000 01E5 //       {
                 ; 0000 01E6 //        voltage_1 = data_buffer2_temp[3];
                 ; 0000 01E7 //        voltage_2 = data_buffer2_temp[2];
                 ; 0000 01E8 //
                 ; 0000 01E9 //       }
                 ; 0000 01EA 
                 ; 0000 01EB 
                 ; 0000 01EC        //Ã¤³Î»óÅÂ ¹× ¿¡·¯Á¤º¸ ¿äÃ»
                 ; 0000 01ED      if(data_buffer2_temp[91] == 0x7f && data_buffer2_temp[90] == 0xfe && data_buffer2_temp[0] == 0x0d)      // data_buf ...
                +
0000f9 91a0 0b23+LDS R26 , _data_buffer2_temp + ( 91 )
                 	__GETB2MN _data_buffer2_temp,91
0000fb 37af      	CPI  R26,LOW(0x7F)
0000fc f441      	BRNE _0xD
                +
0000fd 91a0 0b22+LDS R26 , _data_buffer2_temp + ( 90 )
                 	__GETB2MN _data_buffer2_temp,90
0000ff 3fae      	CPI  R26,LOW(0xFE)
000100 f421      	BRNE _0xD
000101 91a0 0ac8 	LDS  R26,_data_buffer2_temp
000103 30ad      	CPI  R26,LOW(0xD)
000104 f009      	BREQ _0xE
                 _0xD:
000105 c4ab      	RJMP _0xC
                 _0xE:
                 ; 0000 01EE       {
                 ; 0000 01EF          //Àü¿ø¹Ý #2
                 ; 0000 01F0          voltage_ch1_2 = (data_buffer2_temp[89] * 256) + data_buffer2_temp[88];   //v ch1
                +
000106 91a0 0b21+LDS R26 , _data_buffer2_temp + ( 89 )
                 	__GETB2MN _data_buffer2_temp,89
000108 940e 1abc 	CALL SUBOPT_0x1
                +
00010a 91e0 0b20+LDS R30 , _data_buffer2_temp + ( 88 )
                 	__GETB1MN _data_buffer2_temp,88
00010c e0f0      	LDI  R31,0
00010d 0fea      	ADD  R30,R26
00010e 1ffb      	ADC  R31,R27
00010f 93e0 0a3f 	STS  _voltage_ch1_2,R30
000111 93f0 0a40 	STS  _voltage_ch1_2+1,R31
                 ; 0000 01F1          currunt_ch1_2 = (data_buffer2_temp[87] * 256) + data_buffer2_temp[86];
                +
000113 91a0 0b1f+LDS R26 , _data_buffer2_temp + ( 87 )
                 	__GETB2MN _data_buffer2_temp,87
000115 940e 1abc 	CALL SUBOPT_0x1
                +
000117 91e0 0b1e+LDS R30 , _data_buffer2_temp + ( 86 )
                 	__GETB1MN _data_buffer2_temp,86
000119 e0f0      	LDI  R31,0
00011a 0fea      	ADD  R30,R26
00011b 1ffb      	ADC  R31,R27
00011c 93e0 0a51 	STS  _currunt_ch1_2,R30
00011e 93f0 0a52 	STS  _currunt_ch1_2+1,R31
                 ; 0000 01F2          voltage_ch2_2 = (data_buffer2_temp[85] * 256) + data_buffer2_temp[84];   //v ch2
                +
000120 91a0 0b1d+LDS R26 , _data_buffer2_temp + ( 85 )
                 	__GETB2MN _data_buffer2_temp,85
000122 940e 1abc 	CALL SUBOPT_0x1
                +
000124 91e0 0b1c+LDS R30 , _data_buffer2_temp + ( 84 )
                 	__GETB1MN _data_buffer2_temp,84
000126 e0f0      	LDI  R31,0
000127 0fea      	ADD  R30,R26
000128 1ffb      	ADC  R31,R27
000129 93e0 0a41 	STS  _voltage_ch2_2,R30
00012b 93f0 0a42 	STS  _voltage_ch2_2+1,R31
                 ; 0000 01F3          currunt_ch2_2 = (data_buffer2_temp[83] * 256) + data_buffer2_temp[82];
                +
00012d 91a0 0b1b+LDS R26 , _data_buffer2_temp + ( 83 )
                 	__GETB2MN _data_buffer2_temp,83
00012f 940e 1abc 	CALL SUBOPT_0x1
                +
000131 91e0 0b1a+LDS R30 , _data_buffer2_temp + ( 82 )
                 	__GETB1MN _data_buffer2_temp,82
000133 e0f0      	LDI  R31,0
000134 0fea      	ADD  R30,R26
000135 1ffb      	ADC  R31,R27
000136 93e0 0a53 	STS  _currunt_ch2_2,R30
000138 93f0 0a54 	STS  _currunt_ch2_2+1,R31
                 ; 0000 01F4          voltage_ch3_2 = (data_buffer2_temp[81] * 256) + data_buffer2_temp[80];   //v ch3
                +
00013a 91a0 0b19+LDS R26 , _data_buffer2_temp + ( 81 )
                 	__GETB2MN _data_buffer2_temp,81
00013c 940e 1abc 	CALL SUBOPT_0x1
                +
00013e 91e0 0b18+LDS R30 , _data_buffer2_temp + ( 80 )
                 	__GETB1MN _data_buffer2_temp,80
000140 e0f0      	LDI  R31,0
000141 0fea      	ADD  R30,R26
000142 1ffb      	ADC  R31,R27
000143 93e0 0a43 	STS  _voltage_ch3_2,R30
000145 93f0 0a44 	STS  _voltage_ch3_2+1,R31
                 ; 0000 01F5          currunt_ch3_2 = (data_buffer2_temp[79] * 256) + data_buffer2_temp[78];
                +
000147 91a0 0b17+LDS R26 , _data_buffer2_temp + ( 79 )
                 	__GETB2MN _data_buffer2_temp,79
000149 940e 1abc 	CALL SUBOPT_0x1
                +
00014b 91e0 0b16+LDS R30 , _data_buffer2_temp + ( 78 )
                 	__GETB1MN _data_buffer2_temp,78
00014d e0f0      	LDI  R31,0
00014e 0fea      	ADD  R30,R26
00014f 1ffb      	ADC  R31,R27
000150 93e0 0a55 	STS  _currunt_ch3_2,R30
000152 93f0 0a56 	STS  _currunt_ch3_2+1,R31
                 ; 0000 01F6          voltage_ch4_2 = (data_buffer2_temp[77] * 256) + data_buffer2_temp[76];   //v ch4
                +
000154 91a0 0b15+LDS R26 , _data_buffer2_temp + ( 77 )
                 	__GETB2MN _data_buffer2_temp,77
000156 940e 1abc 	CALL SUBOPT_0x1
                +
000158 91e0 0b14+LDS R30 , _data_buffer2_temp + ( 76 )
                 	__GETB1MN _data_buffer2_temp,76
00015a e0f0      	LDI  R31,0
00015b 0fea      	ADD  R30,R26
00015c 1ffb      	ADC  R31,R27
00015d 93e0 0a45 	STS  _voltage_ch4_2,R30
00015f 93f0 0a46 	STS  _voltage_ch4_2+1,R31
                 ; 0000 01F7          currunt_ch4_2 = (data_buffer2_temp[75] * 256) + data_buffer2_temp[74];
                +
000161 91a0 0b13+LDS R26 , _data_buffer2_temp + ( 75 )
                 	__GETB2MN _data_buffer2_temp,75
000163 940e 1abc 	CALL SUBOPT_0x1
                +
000165 91e0 0b12+LDS R30 , _data_buffer2_temp + ( 74 )
                 	__GETB1MN _data_buffer2_temp,74
000167 e0f0      	LDI  R31,0
000168 0fea      	ADD  R30,R26
000169 1ffb      	ADC  R31,R27
00016a 93e0 0a57 	STS  _currunt_ch4_2,R30
00016c 93f0 0a58 	STS  _currunt_ch4_2+1,R31
                 ; 0000 01F8          voltage_ch5_2 = (data_buffer2_temp[73] * 256) + data_buffer2_temp[72];   //v ch5
                +
00016e 91a0 0b11+LDS R26 , _data_buffer2_temp + ( 73 )
                 	__GETB2MN _data_buffer2_temp,73
000170 940e 1abc 	CALL SUBOPT_0x1
                +
000172 91e0 0b10+LDS R30 , _data_buffer2_temp + ( 72 )
                 	__GETB1MN _data_buffer2_temp,72
000174 e0f0      	LDI  R31,0
000175 0fea      	ADD  R30,R26
000176 1ffb      	ADC  R31,R27
000177 93e0 0a47 	STS  _voltage_ch5_2,R30
000179 93f0 0a48 	STS  _voltage_ch5_2+1,R31
                 ; 0000 01F9          currunt_ch5_2 = (data_buffer2_temp[71] * 256) + data_buffer2_temp[70];
                +
00017b 91a0 0b0f+LDS R26 , _data_buffer2_temp + ( 71 )
                 	__GETB2MN _data_buffer2_temp,71
00017d 940e 1abc 	CALL SUBOPT_0x1
                +
00017f 91e0 0b0e+LDS R30 , _data_buffer2_temp + ( 70 )
                 	__GETB1MN _data_buffer2_temp,70
000181 e0f0      	LDI  R31,0
000182 0fea      	ADD  R30,R26
000183 1ffb      	ADC  R31,R27
000184 93e0 0a59 	STS  _currunt_ch5_2,R30
000186 93f0 0a5a 	STS  _currunt_ch5_2+1,R31
                 ; 0000 01FA          voltage_ch6_2 = (data_buffer2_temp[69] * 256) + data_buffer2_temp[68];   //v ch6
                +
000188 91a0 0b0d+LDS R26 , _data_buffer2_temp + ( 69 )
                 	__GETB2MN _data_buffer2_temp,69
00018a 940e 1abc 	CALL SUBOPT_0x1
                +
00018c 91e0 0b0c+LDS R30 , _data_buffer2_temp + ( 68 )
                 	__GETB1MN _data_buffer2_temp,68
00018e e0f0      	LDI  R31,0
00018f 0fea      	ADD  R30,R26
000190 1ffb      	ADC  R31,R27
000191 93e0 0a49 	STS  _voltage_ch6_2,R30
000193 93f0 0a4a 	STS  _voltage_ch6_2+1,R31
                 ; 0000 01FB          currunt_ch6_2 = (data_buffer2_temp[67] * 256) + data_buffer2_temp[66];
                +
000195 91a0 0b0b+LDS R26 , _data_buffer2_temp + ( 67 )
                 	__GETB2MN _data_buffer2_temp,67
000197 940e 1abc 	CALL SUBOPT_0x1
                +
000199 91e0 0b0a+LDS R30 , _data_buffer2_temp + ( 66 )
                 	__GETB1MN _data_buffer2_temp,66
00019b e0f0      	LDI  R31,0
00019c 0fea      	ADD  R30,R26
00019d 1ffb      	ADC  R31,R27
00019e 93e0 0a5b 	STS  _currunt_ch6_2,R30
0001a0 93f0 0a5c 	STS  _currunt_ch6_2+1,R31
                 ; 0000 01FC          voltage_ch7_2 = (data_buffer2_temp[65] * 256) + data_buffer2_temp[64];   //v ch7
                +
0001a2 91a0 0b09+LDS R26 , _data_buffer2_temp + ( 65 )
                 	__GETB2MN _data_buffer2_temp,65
0001a4 940e 1abc 	CALL SUBOPT_0x1
                +
0001a6 91e0 0b08+LDS R30 , _data_buffer2_temp + ( 64 )
                 	__GETB1MN _data_buffer2_temp,64
0001a8 e0f0      	LDI  R31,0
0001a9 0fea      	ADD  R30,R26
0001aa 1ffb      	ADC  R31,R27
0001ab 93e0 0a4b 	STS  _voltage_ch7_2,R30
0001ad 93f0 0a4c 	STS  _voltage_ch7_2+1,R31
                 ; 0000 01FD          currunt_ch7_2 = (data_buffer2_temp[63] * 256) + data_buffer2_temp[62];
                +
0001af 91a0 0b07+LDS R26 , _data_buffer2_temp + ( 63 )
                 	__GETB2MN _data_buffer2_temp,63
0001b1 940e 1abc 	CALL SUBOPT_0x1
                +
0001b3 91e0 0b06+LDS R30 , _data_buffer2_temp + ( 62 )
                 	__GETB1MN _data_buffer2_temp,62
0001b5 e0f0      	LDI  R31,0
0001b6 0fea      	ADD  R30,R26
0001b7 1ffb      	ADC  R31,R27
0001b8 93e0 0a5d 	STS  _currunt_ch7_2,R30
0001ba 93f0 0a5e 	STS  _currunt_ch7_2+1,R31
                 ; 0000 01FE          voltage_m48_2 = (data_buffer2_temp[61] * 256) + data_buffer2_temp[60];
                +
0001bc 91a0 0b05+LDS R26 , _data_buffer2_temp + ( 61 )
                 	__GETB2MN _data_buffer2_temp,61
0001be 940e 1abc 	CALL SUBOPT_0x1
                +
0001c0 91e0 0b04+LDS R30 , _data_buffer2_temp + ( 60 )
                 	__GETB1MN _data_buffer2_temp,60
0001c2 e0f0      	LDI  R31,0
0001c3 0fea      	ADD  R30,R26
0001c4 1ffb      	ADC  R31,R27
0001c5 93e0 0a4d 	STS  _voltage_m48_2,R30
0001c7 93f0 0a4e 	STS  _voltage_m48_2+1,R31
                 ; 0000 01FF          voltage_m24_2 = (data_buffer2_temp[59] * 256) + data_buffer2_temp[58];
                +
0001c9 91a0 0b03+LDS R26 , _data_buffer2_temp + ( 59 )
                 	__GETB2MN _data_buffer2_temp,59
0001cb 940e 1abc 	CALL SUBOPT_0x1
                +
0001cd 91e0 0b02+LDS R30 , _data_buffer2_temp + ( 58 )
                 	__GETB1MN _data_buffer2_temp,58
0001cf e0f0      	LDI  R31,0
0001d0 0fea      	ADD  R30,R26
0001d1 1ffb      	ADC  R31,R27
0001d2 93e0 0a5f 	STS  _voltage_m24_2,R30
0001d4 93f0 0a60 	STS  _voltage_m24_2+1,R31
                 ; 0000 0200          voltage_fan_2 = (data_buffer2_temp[57] * 256) + data_buffer2_temp[56];
                +
0001d6 91a0 0b01+LDS R26 , _data_buffer2_temp + ( 57 )
                 	__GETB2MN _data_buffer2_temp,57
0001d8 940e 1abc 	CALL SUBOPT_0x1
                +
0001da 91e0 0b00+LDS R30 , _data_buffer2_temp + ( 56 )
                 	__GETB1MN _data_buffer2_temp,56
0001dc e0f0      	LDI  R31,0
0001dd 0fea      	ADD  R30,R26
0001de 1ffb      	ADC  R31,R27
0001df 93e0 0a4f 	STS  _voltage_fan_2,R30
0001e1 93f0 0a50 	STS  _voltage_fan_2+1,R31
                 ; 0000 0201          currunt_fan_2 = (data_buffer2_temp[55] * 256) + data_buffer2_temp[54];
                +
0001e3 91a0 0aff+LDS R26 , _data_buffer2_temp + ( 55 )
                 	__GETB2MN _data_buffer2_temp,55
0001e5 940e 1abc 	CALL SUBOPT_0x1
                +
0001e7 91e0 0afe+LDS R30 , _data_buffer2_temp + ( 54 )
                 	__GETB1MN _data_buffer2_temp,54
0001e9 e0f0      	LDI  R31,0
0001ea 0fea      	ADD  R30,R26
0001eb 1ffb      	ADC  R31,R27
0001ec 93e0 0a61 	STS  _currunt_fan_2,R30
0001ee 93f0 0a62 	STS  _currunt_fan_2+1,R31
                 ; 0000 0202 
                 ; 0000 0203          batt_level_2 = data_buffer2_temp[53];
                +
0001f0 91e0 0afd+LDS R30 , _data_buffer2_temp + ( 53 )
                 	__GETB1MN _data_buffer2_temp,53
0001f2 93e0 0b33 	STS  _batt_level_2,R30
                 ; 0000 0204          err_main_2 = data_buffer2_temp[52];
                +
0001f4 91e0 0afc+LDS R30 , _data_buffer2_temp + ( 52 )
                 	__GETB1MN _data_buffer2_temp,52
0001f6 93e0 0b34 	STS  _err_main_2,R30
                 ; 0000 0205          if((err_main_2 & 0x20)==0x20){err_bat2_temp = ERR;}else{err_bat2_temp = NOR;}
0001f8 72e0      	ANDI R30,LOW(0x20)
0001f9 32e0      	CPI  R30,LOW(0x20)
0001fa f411      	BRNE _0xF
0001fb e0e1      	LDI  R30,LOW(1)
0001fc c001      	RJMP _0x3C1
                 _0xF:
0001fd e0e0      	LDI  R30,LOW(0)
                 _0x3C1:
0001fe 93e0 0b75 	STS  _err_bat2_temp,R30
                 ; 0000 0206          if((err_main_2 & 0x10)==0x10){err_bat2_volt = ERR;}else{err_bat2_volt = NOR;}
000200 91e0 0b34 	LDS  R30,_err_main_2
000202 71e0      	ANDI R30,LOW(0x10)
000203 31e0      	CPI  R30,LOW(0x10)
000204 f411      	BRNE _0x11
000205 e0e1      	LDI  R30,LOW(1)
000206 c001      	RJMP _0x3C2
                 _0x11:
000207 e0e0      	LDI  R30,LOW(0)
                 _0x3C2:
000208 93e0 0b77 	STS  _err_bat2_volt,R30
                 ; 0000 0207          if((err_main_2 & 0x08)==0x08){err_bat2_curr = ERR;}else{err_bat2_curr = NOR;}
00020a 91e0 0b34 	LDS  R30,_err_main_2
00020c 70e8      	ANDI R30,LOW(0x8)
00020d 30e8      	CPI  R30,LOW(0x8)
00020e f411      	BRNE _0x13
00020f e0e1      	LDI  R30,LOW(1)
000210 c001      	RJMP _0x3C3
                 _0x13:
000211 e0e0      	LDI  R30,LOW(0)
                 _0x3C3:
000212 93e0 0b79 	STS  _err_bat2_curr,R30
                 ; 0000 0208          if((err_main_2 & 0x40)==0x40){batt_link_err_act_2 = ON;}else{batt_link_err_act_2 = OFF;}
000214 91e0 0b34 	LDS  R30,_err_main_2
000216 74e0      	ANDI R30,LOW(0x40)
000217 34e0      	CPI  R30,LOW(0x40)
000218 f411      	BRNE _0x15
000219 9af3      	SBI  0x1E,3
00021a c001      	RJMP _0x18
                 _0x15:
00021b 98f3      	CBI  0x1E,3
                 _0x18:
                 ; 0000 0209          if((err_main_2 & 0x04)==0x04){batt_charge_2 = ON;}else{batt_charge_2 = OFF;}
00021c 91e0 0b34 	LDS  R30,_err_main_2
00021e 70e4      	ANDI R30,LOW(0x4)
00021f 30e4      	CPI  R30,LOW(0x4)
000220 f411      	BRNE _0x1B
000221 e0e1      	LDI  R30,LOW(1)
000222 c001      	RJMP _0x3C4
                 _0x1B:
000223 e0e0      	LDI  R30,LOW(0)
                 _0x3C4:
000224 93e0 0b48 	STS  _batt_charge_2,R30
                 ; 0000 020A          if((err_main_2 & 0x02)==0x02){batt_discharge_2 = ON;}else{batt_discharge_2 = OFF;}
000226 91e0 0b34 	LDS  R30,_err_main_2
000228 70e2      	ANDI R30,LOW(0x2)
000229 30e2      	CPI  R30,LOW(0x2)
00022a f411      	BRNE _0x1D
00022b e0e1      	LDI  R30,LOW(1)
00022c c001      	RJMP _0x3C5
                 _0x1D:
00022d e0e0      	LDI  R30,LOW(0)
                 _0x3C5:
00022e 93e0 0b4a 	STS  _batt_discharge_2,R30
                 ; 0000 020B          if((batt_discharge_2 == ON)&&(batt_charge_2 == OFF)){batt_run_act_2 = ON;}else{batt_run_act_2 = OFF;}
000230 91a0 0b4a 	LDS  R26,_batt_discharge_2
000232 30a1      	CPI  R26,LOW(0x1)
000233 f421      	BRNE _0x20
000234 91a0 0b48 	LDS  R26,_batt_charge_2
000236 30a0      	CPI  R26,LOW(0x0)
000237 f009      	BREQ _0x21
                 _0x20:
000238 c002      	RJMP _0x1F
                 _0x21:
000239 9af5      	SBI  0x1E,5
00023a c001      	RJMP _0x24
                 _0x1F:
00023b 98f5      	CBI  0x1E,5
                 _0x24:
                 ; 0000 020C 
                 ; 0000 020D          //******************************
                 ; 0000 020E          //
                 ; 0000 020F          if(batt_link_err_act_2 == ON){batt_level_2 = 0;}
00023c 9bf3      	SBIS 0x1E,3
00023d c003      	RJMP _0x27
00023e e0e0      	LDI  R30,LOW(0)
00023f 93e0 0b33 	STS  _batt_level_2,R30
                 ; 0000 0210          //
                 ; 0000 0211          //******************************
                 ; 0000 0212 
                 ; 0000 0213 
                 ; 0000 0214          if((err_main_2 & 0x01)==0x01){err_fan_2 = ON;}else{err_fan_2 = OFF;}
                 _0x27:
000241 91e0 0b34 	LDS  R30,_err_main_2
000243 70e1      	ANDI R30,LOW(0x1)
000244 30e1      	CPI  R30,LOW(0x1)
000245 f411      	BRNE _0x28
000246 e0e1      	LDI  R30,LOW(1)
000247 c001      	RJMP _0x3C6
                 _0x28:
000248 e0e0      	LDI  R30,LOW(0)
                 _0x3C6:
000249 93e0 0b4c 	STS  _err_fan_2,R30
                 ; 0000 0215 
                 ; 0000 0216          err1_2 = data_buffer2_temp[51];
                +
00024b 91e0 0afb+LDS R30 , _data_buffer2_temp + ( 51 )
                 	__GETB1MN _data_buffer2_temp,51
00024d 93e0 0b35 	STS  _err1_2,R30
                 ; 0000 0217          err2_2 = data_buffer2_temp[50];
                +
00024f 91e0 0afa+LDS R30 , _data_buffer2_temp + ( 50 )
                 	__GETB1MN _data_buffer2_temp,50
000251 93e0 0b36 	STS  _err2_2,R30
                 ; 0000 0218          if((err1_2 != 0x00)||(err2_2 != 0x00)){power_2_err = 0x01;}else{power_2_err = 0x00;}
000253 91a0 0b35 	LDS  R26,_err1_2
000255 30a0      	CPI  R26,LOW(0x0)
000256 f421      	BRNE _0x2B
000257 91a0 0b36 	LDS  R26,_err2_2
000259 30a0      	CPI  R26,LOW(0x0)
00025a f011      	BREQ _0x2A
                 _0x2B:
00025b e0e1      	LDI  R30,LOW(1)
00025c c001      	RJMP _0x3C7
                 _0x2A:
00025d e0e0      	LDI  R30,LOW(0)
                 _0x3C7:
00025e 93e0 0b73 	STS  _power_2_err,R30
                 ; 0000 0219          status_2 = data_buffer2_temp[49];
                +
000260 91e0 0af9+LDS R30 , _data_buffer2_temp + ( 49 )
                 	__GETB1MN _data_buffer2_temp,49
000262 93e0 0b37 	STS  _status_2,R30
                 ; 0000 021A 
                 ; 0000 021B          power_link_2 = data_buffer2_temp[48];
                +
000264 91e0 0af8+LDS R30 , _data_buffer2_temp + ( 48 )
                 	__GETB1MN _data_buffer2_temp,48
000266 93e0 0b63 	STS  _power_link_2,R30
                 ; 0000 021C          if((power_link_2 & 0x80) == 0x80)
000268 78e0      	ANDI R30,LOW(0x80)
000269 38e0      	CPI  R30,LOW(0x80)
00026a f431      	BRNE _0x2E
                 ; 0000 021D          {
                 ; 0000 021E           power_link2_err = 0;
00026b e0e0      	LDI  R30,LOW(0)
00026c 93e0 0b65 	STS  _power_link2_err,R30
                 ; 0000 021F           power_link2_err_act_buzzer = OFF;
00026e 93e0 0b60 	STS  _power_link2_err_act_buzzer,R30
                 ; 0000 0220          }
                 ; 0000 0221          else
000270 c00f      	RJMP _0x2F
                 _0x2E:
                 ; 0000 0222          {
                 ; 0000 0223           if((power_link2_err == 0)&&(power_link2_err_act_buzzer == OFF)) {power_link2_err_act_buzzer = ON;}
000271 91a0 0b65 	LDS  R26,_power_link2_err
000273 30a0      	CPI  R26,LOW(0x0)
000274 f421      	BRNE _0x31
000275 91a0 0b60 	LDS  R26,_power_link2_err_act_buzzer
000277 30a0      	CPI  R26,LOW(0x0)
000278 f009      	BREQ _0x32
                 _0x31:
000279 c003      	RJMP _0x30
                 _0x32:
00027a e0e1      	LDI  R30,LOW(1)
00027b 93e0 0b60 	STS  _power_link2_err_act_buzzer,R30
                 ; 0000 0224           power_link2_err = 1;
                 _0x30:
00027d e0e1      	LDI  R30,LOW(1)
00027e 93e0 0b65 	STS  _power_link2_err,R30
                 ; 0000 0225          }
                 _0x2F:
                 ; 0000 0226 //         if(ADDRESS_0)
                 ; 0000 0227 //         {
                 ; 0000 0228 //             voltage_1  = voltage_m24_2;
                 ; 0000 0229 //             currunt_1  = currunt_ch1_2 + currunt_ch2_2 + currunt_ch3_2 + currunt_ch4_2 + currunt_ch5_2 + currunt_ch6_ ...
                 ; 0000 022A //             bat_volt_1 = batt_level_2;
                 ; 0000 022B //         }
                 ; 0000 022C //         else
                 ; 0000 022D //         {
                 ; 0000 022E //             rtc_get_time(&hour,&minute,&sec);
                 ; 0000 022F //             //rtc_get_date(&week,&day,&month,&year);
                 ; 0000 0230 //             voltage_1  = hour;
                 ; 0000 0231 //             currunt_1  = minute;
                 ; 0000 0232 //             bat_volt_1 = sec;
                 ; 0000 0233 //         }
                 ; 0000 0234 
                 ; 0000 0235 
                 ; 0000 0236          //Àü¿ø¹Ý #1
                 ; 0000 0237          voltage_ch1_1 = (data_buffer2_temp[47] * 256) + data_buffer2_temp[46];   //v ch1
                +
000280 91a0 0af7+LDS R26 , _data_buffer2_temp + ( 47 )
                 	__GETB2MN _data_buffer2_temp,47
000282 940e 1abc 	CALL SUBOPT_0x1
                +
000284 91e0 0af6+LDS R30 , _data_buffer2_temp + ( 46 )
                 	__GETB1MN _data_buffer2_temp,46
000286 e0f0      	LDI  R31,0
000287 0fea      	ADD  R30,R26
000288 1ffb      	ADC  R31,R27
000289 93e0 0a1b 	STS  _voltage_ch1_1,R30
00028b 93f0 0a1c 	STS  _voltage_ch1_1+1,R31
                 ; 0000 0238          currunt_ch1_1 = (data_buffer2_temp[45] * 256) + data_buffer2_temp[44];
                +
00028d 91a0 0af5+LDS R26 , _data_buffer2_temp + ( 45 )
                 	__GETB2MN _data_buffer2_temp,45
00028f 940e 1abc 	CALL SUBOPT_0x1
                +
000291 91e0 0af4+LDS R30 , _data_buffer2_temp + ( 44 )
                 	__GETB1MN _data_buffer2_temp,44
000293 e0f0      	LDI  R31,0
000294 0fea      	ADD  R30,R26
000295 1ffb      	ADC  R31,R27
000296 93e0 0a2d 	STS  _currunt_ch1_1,R30
000298 93f0 0a2e 	STS  _currunt_ch1_1+1,R31
                 ; 0000 0239          voltage_ch2_1 = (data_buffer2_temp[43] * 256) + data_buffer2_temp[42];   //v ch2
                +
00029a 91a0 0af3+LDS R26 , _data_buffer2_temp + ( 43 )
                 	__GETB2MN _data_buffer2_temp,43
00029c 940e 1abc 	CALL SUBOPT_0x1
                +
00029e 91e0 0af2+LDS R30 , _data_buffer2_temp + ( 42 )
                 	__GETB1MN _data_buffer2_temp,42
0002a0 e0f0      	LDI  R31,0
0002a1 0fea      	ADD  R30,R26
0002a2 1ffb      	ADC  R31,R27
0002a3 93e0 0a1d 	STS  _voltage_ch2_1,R30
0002a5 93f0 0a1e 	STS  _voltage_ch2_1+1,R31
                 ; 0000 023A          currunt_ch2_1 = (data_buffer2_temp[41] * 256) + data_buffer2_temp[40];
                +
0002a7 91a0 0af1+LDS R26 , _data_buffer2_temp + ( 41 )
                 	__GETB2MN _data_buffer2_temp,41
0002a9 940e 1abc 	CALL SUBOPT_0x1
                +
0002ab 91e0 0af0+LDS R30 , _data_buffer2_temp + ( 40 )
                 	__GETB1MN _data_buffer2_temp,40
0002ad e0f0      	LDI  R31,0
0002ae 0fea      	ADD  R30,R26
0002af 1ffb      	ADC  R31,R27
0002b0 93e0 0a2f 	STS  _currunt_ch2_1,R30
0002b2 93f0 0a30 	STS  _currunt_ch2_1+1,R31
                 ; 0000 023B          voltage_ch3_1 = (data_buffer2_temp[39] * 256) + data_buffer2_temp[38];   //v ch3
                +
0002b4 91a0 0aef+LDS R26 , _data_buffer2_temp + ( 39 )
                 	__GETB2MN _data_buffer2_temp,39
0002b6 940e 1abc 	CALL SUBOPT_0x1
                +
0002b8 91e0 0aee+LDS R30 , _data_buffer2_temp + ( 38 )
                 	__GETB1MN _data_buffer2_temp,38
0002ba e0f0      	LDI  R31,0
0002bb 0fea      	ADD  R30,R26
0002bc 1ffb      	ADC  R31,R27
0002bd 93e0 0a1f 	STS  _voltage_ch3_1,R30
0002bf 93f0 0a20 	STS  _voltage_ch3_1+1,R31
                 ; 0000 023C          currunt_ch3_1 = (data_buffer2_temp[37] * 256) + data_buffer2_temp[36];
                +
0002c1 91a0 0aed+LDS R26 , _data_buffer2_temp + ( 37 )
                 	__GETB2MN _data_buffer2_temp,37
0002c3 940e 1abc 	CALL SUBOPT_0x1
                +
0002c5 91e0 0aec+LDS R30 , _data_buffer2_temp + ( 36 )
                 	__GETB1MN _data_buffer2_temp,36
0002c7 e0f0      	LDI  R31,0
0002c8 0fea      	ADD  R30,R26
0002c9 1ffb      	ADC  R31,R27
0002ca 93e0 0a31 	STS  _currunt_ch3_1,R30
0002cc 93f0 0a32 	STS  _currunt_ch3_1+1,R31
                 ; 0000 023D          voltage_ch4_1 = (data_buffer2_temp[35] * 256) + data_buffer2_temp[34];   //v ch4
                +
0002ce 91a0 0aeb+LDS R26 , _data_buffer2_temp + ( 35 )
                 	__GETB2MN _data_buffer2_temp,35
0002d0 940e 1abc 	CALL SUBOPT_0x1
                +
0002d2 91e0 0aea+LDS R30 , _data_buffer2_temp + ( 34 )
                 	__GETB1MN _data_buffer2_temp,34
0002d4 e0f0      	LDI  R31,0
0002d5 0fea      	ADD  R30,R26
0002d6 1ffb      	ADC  R31,R27
0002d7 93e0 0a21 	STS  _voltage_ch4_1,R30
0002d9 93f0 0a22 	STS  _voltage_ch4_1+1,R31
                 ; 0000 023E          currunt_ch4_1 = (data_buffer2_temp[33] * 256) + data_buffer2_temp[32];
                +
0002db 91a0 0ae9+LDS R26 , _data_buffer2_temp + ( 33 )
                 	__GETB2MN _data_buffer2_temp,33
0002dd 940e 1abc 	CALL SUBOPT_0x1
                +
0002df 91e0 0ae8+LDS R30 , _data_buffer2_temp + ( 32 )
                 	__GETB1MN _data_buffer2_temp,32
0002e1 e0f0      	LDI  R31,0
0002e2 0fea      	ADD  R30,R26
0002e3 1ffb      	ADC  R31,R27
0002e4 93e0 0a33 	STS  _currunt_ch4_1,R30
0002e6 93f0 0a34 	STS  _currunt_ch4_1+1,R31
                 ; 0000 023F          voltage_ch5_1 = (data_buffer2_temp[31] * 256) + data_buffer2_temp[30];   //v ch5
                +
0002e8 91a0 0ae7+LDS R26 , _data_buffer2_temp + ( 31 )
                 	__GETB2MN _data_buffer2_temp,31
0002ea 940e 1abc 	CALL SUBOPT_0x1
                +
0002ec 91e0 0ae6+LDS R30 , _data_buffer2_temp + ( 30 )
                 	__GETB1MN _data_buffer2_temp,30
0002ee e0f0      	LDI  R31,0
0002ef 0fea      	ADD  R30,R26
0002f0 1ffb      	ADC  R31,R27
0002f1 93e0 0a23 	STS  _voltage_ch5_1,R30
0002f3 93f0 0a24 	STS  _voltage_ch5_1+1,R31
                 ; 0000 0240          currunt_ch5_1 = (data_buffer2_temp[29] * 256) + data_buffer2_temp[28];
                +
0002f5 91a0 0ae5+LDS R26 , _data_buffer2_temp + ( 29 )
                 	__GETB2MN _data_buffer2_temp,29
0002f7 940e 1abc 	CALL SUBOPT_0x1
                +
0002f9 91e0 0ae4+LDS R30 , _data_buffer2_temp + ( 28 )
                 	__GETB1MN _data_buffer2_temp,28
0002fb e0f0      	LDI  R31,0
0002fc 0fea      	ADD  R30,R26
0002fd 1ffb      	ADC  R31,R27
0002fe 93e0 0a35 	STS  _currunt_ch5_1,R30
000300 93f0 0a36 	STS  _currunt_ch5_1+1,R31
                 ; 0000 0241          voltage_ch6_1 = (data_buffer2_temp[27] * 256) + data_buffer2_temp[26];   //v ch6
                +
000302 91a0 0ae3+LDS R26 , _data_buffer2_temp + ( 27 )
                 	__GETB2MN _data_buffer2_temp,27
000304 940e 1abc 	CALL SUBOPT_0x1
                +
000306 91e0 0ae2+LDS R30 , _data_buffer2_temp + ( 26 )
                 	__GETB1MN _data_buffer2_temp,26
000308 e0f0      	LDI  R31,0
000309 0fea      	ADD  R30,R26
00030a 1ffb      	ADC  R31,R27
00030b 93e0 0a25 	STS  _voltage_ch6_1,R30
00030d 93f0 0a26 	STS  _voltage_ch6_1+1,R31
                 ; 0000 0242          currunt_ch6_1 = (data_buffer2_temp[25] * 256) + data_buffer2_temp[24];
                +
00030f 91a0 0ae1+LDS R26 , _data_buffer2_temp + ( 25 )
                 	__GETB2MN _data_buffer2_temp,25
000311 940e 1abc 	CALL SUBOPT_0x1
                +
000313 91e0 0ae0+LDS R30 , _data_buffer2_temp + ( 24 )
                 	__GETB1MN _data_buffer2_temp,24
000315 e0f0      	LDI  R31,0
000316 0fea      	ADD  R30,R26
000317 1ffb      	ADC  R31,R27
000318 93e0 0a37 	STS  _currunt_ch6_1,R30
00031a 93f0 0a38 	STS  _currunt_ch6_1+1,R31
                 ; 0000 0243          voltage_ch7_1 = (data_buffer2_temp[23] * 256) + data_buffer2_temp[22];   //v ch7
                +
00031c 91a0 0adf+LDS R26 , _data_buffer2_temp + ( 23 )
                 	__GETB2MN _data_buffer2_temp,23
00031e 940e 1abc 	CALL SUBOPT_0x1
                +
000320 91e0 0ade+LDS R30 , _data_buffer2_temp + ( 22 )
                 	__GETB1MN _data_buffer2_temp,22
000322 e0f0      	LDI  R31,0
000323 0fea      	ADD  R30,R26
000324 1ffb      	ADC  R31,R27
000325 93e0 0a27 	STS  _voltage_ch7_1,R30
000327 93f0 0a28 	STS  _voltage_ch7_1+1,R31
                 ; 0000 0244          currunt_ch7_1 = (data_buffer2_temp[21] * 256) + data_buffer2_temp[20];
                +
000329 91a0 0add+LDS R26 , _data_buffer2_temp + ( 21 )
                 	__GETB2MN _data_buffer2_temp,21
00032b 940e 1abc 	CALL SUBOPT_0x1
                +
00032d 91e0 0adc+LDS R30 , _data_buffer2_temp + ( 20 )
                 	__GETB1MN _data_buffer2_temp,20
00032f e0f0      	LDI  R31,0
000330 0fea      	ADD  R30,R26
000331 1ffb      	ADC  R31,R27
000332 93e0 0a39 	STS  _currunt_ch7_1,R30
000334 93f0 0a3a 	STS  _currunt_ch7_1+1,R31
                 ; 0000 0245          voltage_m48_1 = (data_buffer2_temp[19] * 256) + data_buffer2_temp[18];
                +
000336 91a0 0adb+LDS R26 , _data_buffer2_temp + ( 19 )
                 	__GETB2MN _data_buffer2_temp,19
000338 940e 1abc 	CALL SUBOPT_0x1
                +
00033a 91e0 0ada+LDS R30 , _data_buffer2_temp + ( 18 )
                 	__GETB1MN _data_buffer2_temp,18
00033c e0f0      	LDI  R31,0
00033d 0fea      	ADD  R30,R26
00033e 1ffb      	ADC  R31,R27
00033f 93e0 0a29 	STS  _voltage_m48_1,R30
000341 93f0 0a2a 	STS  _voltage_m48_1+1,R31
                 ; 0000 0246          voltage_m24_1 = (data_buffer2_temp[17] * 256) + data_buffer2_temp[16];
                +
000343 91a0 0ad9+LDS R26 , _data_buffer2_temp + ( 17 )
                 	__GETB2MN _data_buffer2_temp,17
000345 940e 1abc 	CALL SUBOPT_0x1
                +
000347 91e0 0ad8+LDS R30 , _data_buffer2_temp + ( 16 )
                 	__GETB1MN _data_buffer2_temp,16
000349 e0f0      	LDI  R31,0
00034a 0fea      	ADD  R30,R26
00034b 1ffb      	ADC  R31,R27
00034c 93e0 0a3b 	STS  _voltage_m24_1,R30
00034e 93f0 0a3c 	STS  _voltage_m24_1+1,R31
                 ; 0000 0247          voltage_fan_1 = (data_buffer2_temp[15] * 256) + data_buffer2_temp[14];
                +
000350 91a0 0ad7+LDS R26 , _data_buffer2_temp + ( 15 )
                 	__GETB2MN _data_buffer2_temp,15
000352 940e 1abc 	CALL SUBOPT_0x1
                +
000354 91e0 0ad6+LDS R30 , _data_buffer2_temp + ( 14 )
                 	__GETB1MN _data_buffer2_temp,14
000356 e0f0      	LDI  R31,0
000357 0fea      	ADD  R30,R26
000358 1ffb      	ADC  R31,R27
000359 93e0 0a2b 	STS  _voltage_fan_1,R30
00035b 93f0 0a2c 	STS  _voltage_fan_1+1,R31
                 ; 0000 0248          currunt_fan_1 = (data_buffer2_temp[13] * 256) + data_buffer2_temp[12];
                +
00035d 91a0 0ad5+LDS R26 , _data_buffer2_temp + ( 13 )
                 	__GETB2MN _data_buffer2_temp,13
00035f 940e 1abc 	CALL SUBOPT_0x1
                +
000361 91e0 0ad4+LDS R30 , _data_buffer2_temp + ( 12 )
                 	__GETB1MN _data_buffer2_temp,12
000363 e0f0      	LDI  R31,0
000364 0fea      	ADD  R30,R26
000365 1ffb      	ADC  R31,R27
000366 93e0 0a3d 	STS  _currunt_fan_1,R30
000368 93f0 0a3e 	STS  _currunt_fan_1+1,R31
                 ; 0000 0249 
                 ; 0000 024A          batt_level_1 = data_buffer2_temp[11];
                +
00036a 91e0 0ad3+LDS R30 , _data_buffer2_temp + ( 11 )
                 	__GETB1MN _data_buffer2_temp,11
00036c 93e0 0b2e 	STS  _batt_level_1,R30
                 ; 0000 024B          err_main_1 = data_buffer2_temp[10];
                +
00036e 91e0 0ad2+LDS R30 , _data_buffer2_temp + ( 10 )
                 	__GETB1MN _data_buffer2_temp,10
000370 93e0 0b2f 	STS  _err_main_1,R30
                 ; 0000 024C 
                 ; 0000 024D          if((err_main_1 & 0x40)==0x40){batt_link_err_act_1 = ERR;}else{batt_link_err_act_1 = NOR;}
000372 74e0      	ANDI R30,LOW(0x40)
000373 34e0      	CPI  R30,LOW(0x40)
000374 f411      	BRNE _0x33
000375 9af2      	SBI  0x1E,2
000376 c001      	RJMP _0x36
                 _0x33:
000377 98f2      	CBI  0x1E,2
                 _0x36:
                 ; 0000 024E          if((err_main_1 & 0x20)==0x20){err_bat1_temp = ERR;}else{err_bat1_temp = NOR;}
000378 91e0 0b2f 	LDS  R30,_err_main_1
00037a 72e0      	ANDI R30,LOW(0x20)
00037b 32e0      	CPI  R30,LOW(0x20)
00037c f411      	BRNE _0x39
00037d e0e1      	LDI  R30,LOW(1)
00037e c001      	RJMP _0x3C8
                 _0x39:
00037f e0e0      	LDI  R30,LOW(0)
                 _0x3C8:
000380 93e0 0b74 	STS  _err_bat1_temp,R30
                 ; 0000 024F          if((err_main_1 & 0x10)==0x10){err_bat1_volt = ERR;}else{err_bat1_volt = NOR;}
000382 91e0 0b2f 	LDS  R30,_err_main_1
000384 71e0      	ANDI R30,LOW(0x10)
000385 31e0      	CPI  R30,LOW(0x10)
000386 f411      	BRNE _0x3B
000387 e0e1      	LDI  R30,LOW(1)
000388 c001      	RJMP _0x3C9
                 _0x3B:
000389 e0e0      	LDI  R30,LOW(0)
                 _0x3C9:
00038a 93e0 0b76 	STS  _err_bat1_volt,R30
                 ; 0000 0250          if((err_main_1 & 0x08)==0x08){err_bat1_curr = ERR;}else{err_bat1_curr = NOR;}
00038c 91e0 0b2f 	LDS  R30,_err_main_1
00038e 70e8      	ANDI R30,LOW(0x8)
00038f 30e8      	CPI  R30,LOW(0x8)
000390 f411      	BRNE _0x3D
000391 e0e1      	LDI  R30,LOW(1)
000392 c001      	RJMP _0x3CA
                 _0x3D:
000393 e0e0      	LDI  R30,LOW(0)
                 _0x3CA:
000394 93e0 0b78 	STS  _err_bat1_curr,R30
                 ; 0000 0251          if((err_main_1 & 0x04)==0x04){batt_charge_1 = ON;}else{batt_charge_1 = OFF;}
000396 91e0 0b2f 	LDS  R30,_err_main_1
000398 70e4      	ANDI R30,LOW(0x4)
000399 30e4      	CPI  R30,LOW(0x4)
00039a f411      	BRNE _0x3F
00039b e0e1      	LDI  R30,LOW(1)
00039c c001      	RJMP _0x3CB
                 _0x3F:
00039d e0e0      	LDI  R30,LOW(0)
                 _0x3CB:
00039e 93e0 0b47 	STS  _batt_charge_1,R30
                 ; 0000 0252          if((err_main_1 & 0x02)==0x02){batt_discharge_1 = ON;}else{batt_discharge_1 = OFF;}
0003a0 91e0 0b2f 	LDS  R30,_err_main_1
0003a2 70e2      	ANDI R30,LOW(0x2)
0003a3 30e2      	CPI  R30,LOW(0x2)
0003a4 f411      	BRNE _0x41
0003a5 e0e1      	LDI  R30,LOW(1)
0003a6 c001      	RJMP _0x3CC
                 _0x41:
0003a7 e0e0      	LDI  R30,LOW(0)
                 _0x3CC:
0003a8 93e0 0b49 	STS  _batt_discharge_1,R30
                 ; 0000 0253 
                 ; 0000 0254          //******************************
                 ; 0000 0255          //
                 ; 0000 0256          if(batt_link_err_act_1 == ERR){batt_level_1 = 0;}
0003aa 9bf2      	SBIS 0x1E,2
0003ab c003      	RJMP _0x43
0003ac e0e0      	LDI  R30,LOW(0)
0003ad 93e0 0b2e 	STS  _batt_level_1,R30
                 ; 0000 0257          //
                 ; 0000 0258          //****
                 ; 0000 0259 
                 ; 0000 025A 
                 ; 0000 025B 
                 ; 0000 025C          if((batt_discharge_1 == ON)&&(batt_charge_1 == OFF)){batt_run_act_1 = ON;}else{batt_run_act_1 = OFF;}
                 _0x43:
0003af 91a0 0b49 	LDS  R26,_batt_discharge_1
0003b1 30a1      	CPI  R26,LOW(0x1)
0003b2 f421      	BRNE _0x45
0003b3 91a0 0b47 	LDS  R26,_batt_charge_1
0003b5 30a0      	CPI  R26,LOW(0x0)
0003b6 f009      	BREQ _0x46
                 _0x45:
0003b7 c002      	RJMP _0x44
                 _0x46:
0003b8 9af4      	SBI  0x1E,4
0003b9 c001      	RJMP _0x49
                 _0x44:
0003ba 98f4      	CBI  0x1E,4
                 _0x49:
                 ; 0000 025D 
                 ; 0000 025E          if((err_main_1 & 0x01)==0x01){err_fan_1 = ON;}else{err_fan_1 = OFF;}
0003bb 91e0 0b2f 	LDS  R30,_err_main_1
0003bd 70e1      	ANDI R30,LOW(0x1)
0003be 30e1      	CPI  R30,LOW(0x1)
0003bf f411      	BRNE _0x4C
0003c0 e0e1      	LDI  R30,LOW(1)
0003c1 c001      	RJMP _0x3CD
                 _0x4C:
0003c2 e0e0      	LDI  R30,LOW(0)
                 _0x3CD:
0003c3 93e0 0b4b 	STS  _err_fan_1,R30
                 ; 0000 025F 
                 ; 0000 0260          err1_1 = data_buffer2_temp[9];
                +
0003c5 91e0 0ad1+LDS R30 , _data_buffer2_temp + ( 9 )
                 	__GETB1MN _data_buffer2_temp,9
0003c7 93e0 0b30 	STS  _err1_1,R30
                 ; 0000 0261          err2_1 = data_buffer2_temp[8];
                +
0003c9 91e0 0ad0+LDS R30 , _data_buffer2_temp + ( 8 )
                 	__GETB1MN _data_buffer2_temp,8
0003cb 93e0 0b31 	STS  _err2_1,R30
                 ; 0000 0262          if((err1_1 != 0x00)||(err2_1 != 0x00)){power_1_err = 0x01;}else{power_1_err = 0x00;}
0003cd 91a0 0b30 	LDS  R26,_err1_1
0003cf 30a0      	CPI  R26,LOW(0x0)
0003d0 f421      	BRNE _0x4F
0003d1 91a0 0b31 	LDS  R26,_err2_1
0003d3 30a0      	CPI  R26,LOW(0x0)
0003d4 f011      	BREQ _0x4E
                 _0x4F:
0003d5 e0e1      	LDI  R30,LOW(1)
0003d6 c001      	RJMP _0x3CE
                 _0x4E:
0003d7 e0e0      	LDI  R30,LOW(0)
                 _0x3CE:
0003d8 93e0 0b72 	STS  _power_1_err,R30
                 ; 0000 0263          status_1 = data_buffer2_temp[7];
                +
0003da 91e0 0acf+LDS R30 , _data_buffer2_temp + ( 7 )
                 	__GETB1MN _data_buffer2_temp,7
0003dc 93e0 0b32 	STS  _status_1,R30
                 ; 0000 0264 
                 ; 0000 0265          power_link_1 = data_buffer2_temp[6];
                +
0003de 91e0 0ace+LDS R30 , _data_buffer2_temp + ( 6 )
                 	__GETB1MN _data_buffer2_temp,6
0003e0 93e0 0b62 	STS  _power_link_1,R30
                 ; 0000 0266 
                 ; 0000 0267          if((power_link_1 & 0x80) == 0x80)
0003e2 78e0      	ANDI R30,LOW(0x80)
0003e3 38e0      	CPI  R30,LOW(0x80)
0003e4 f421      	BRNE _0x52
                 ; 0000 0268          {
                 ; 0000 0269           power_link1_err_act_buzzer = OFF;
0003e5 e0e0      	LDI  R30,LOW(0)
0003e6 93e0 0b5f 	STS  _power_link1_err_act_buzzer,R30
                 ; 0000 026A           power_link1_err = 0;
0003e8 c00d      	RJMP _0x3CF
                 ; 0000 026B          }
                 ; 0000 026C          else
                 _0x52:
                 ; 0000 026D          {
                 ; 0000 026E           if((power_link1_err == 0)&&(power_link1_err_act_buzzer == OFF)) {power_link1_err_act_buzzer = ON;}
0003e9 91a0 0b64 	LDS  R26,_power_link1_err
0003eb 30a0      	CPI  R26,LOW(0x0)
0003ec f421      	BRNE _0x55
0003ed 91a0 0b5f 	LDS  R26,_power_link1_err_act_buzzer
0003ef 30a0      	CPI  R26,LOW(0x0)
0003f0 f009      	BREQ _0x56
                 _0x55:
0003f1 c003      	RJMP _0x54
                 _0x56:
0003f2 e0e1      	LDI  R30,LOW(1)
0003f3 93e0 0b5f 	STS  _power_link1_err_act_buzzer,R30
                 ; 0000 026F           power_link1_err = 1;
                 _0x54:
0003f5 e0e1      	LDI  R30,LOW(1)
                 _0x3CF:
0003f6 93e0 0b64 	STS  _power_link1_err,R30
                 ; 0000 0270          }
                 ; 0000 0271         //devive info
                 ; 0000 0272         if((data_buffer2_temp[5] & 0x80) == 0x80){ac48_ovp = ERR;}else{ac48_ovp = NOR;}
                +
0003f8 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
0003fa 78e0      	ANDI R30,LOW(0x80)
0003fb 38e0      	CPI  R30,LOW(0x80)
0003fc f411      	BRNE _0x57
0003fd e0e1      	LDI  R30,LOW(1)
0003fe c001      	RJMP _0x3D0
                 _0x57:
0003ff e0e0      	LDI  R30,LOW(0)
                 _0x3D0:
000400 93e0 0a65 	STS  _ac48_ovp,R30
                 ; 0000 0273         if((data_buffer2_temp[5] & 0x40) == 0x40){ac48_lvp = ERR;}else{ac48_lvp = NOR;}
                +
000402 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
000404 74e0      	ANDI R30,LOW(0x40)
000405 34e0      	CPI  R30,LOW(0x40)
000406 f411      	BRNE _0x59
000407 e0e1      	LDI  R30,LOW(1)
000408 c001      	RJMP _0x3D1
                 _0x59:
000409 e0e0      	LDI  R30,LOW(0)
                 _0x3D1:
00040a 93e0 0a66 	STS  _ac48_lvp,R30
                 ; 0000 0274         if((data_buffer2_temp[5] & 0x20) == 0x20){dc48_ovp = ERR;}else{dc48_ovp = NOR;}
                +
00040c 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
00040e 72e0      	ANDI R30,LOW(0x20)
00040f 32e0      	CPI  R30,LOW(0x20)
000410 f411      	BRNE _0x5B
000411 e0e1      	LDI  R30,LOW(1)
000412 c001      	RJMP _0x3D2
                 _0x5B:
000413 e0e0      	LDI  R30,LOW(0)
                 _0x3D2:
000414 93e0 0a67 	STS  _dc48_ovp,R30
                 ; 0000 0275         if((data_buffer2_temp[5] & 0x10) == 0x10){dc48_lvp = ERR;}else{dc48_lvp = NOR;}
                +
000416 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
000418 71e0      	ANDI R30,LOW(0x10)
000419 31e0      	CPI  R30,LOW(0x10)
00041a f411      	BRNE _0x5D
00041b e0e1      	LDI  R30,LOW(1)
00041c c001      	RJMP _0x3D3
                 _0x5D:
00041d e0e0      	LDI  R30,LOW(0)
                 _0x3D3:
00041e 93e0 0a68 	STS  _dc48_lvp,R30
                 ; 0000 0276 
                 ; 0000 0277        if((ac48_ovp == ERR)||(ac48_lvp == ERR)||(dc48_ovp == ERR)||(dc48_lvp == ERR)){deiver_48_err = ERR;}else{deiver_4 ...
000420 91a0 0a65 	LDS  R26,_ac48_ovp
000422 30a1      	CPI  R26,LOW(0x1)
000423 f061      	BREQ _0x60
000424 91a0 0a66 	LDS  R26,_ac48_lvp
000426 30a1      	CPI  R26,LOW(0x1)
000427 f041      	BREQ _0x60
000428 91a0 0a67 	LDS  R26,_dc48_ovp
00042a 30a1      	CPI  R26,LOW(0x1)
00042b f021      	BREQ _0x60
00042c 91a0 0a68 	LDS  R26,_dc48_lvp
00042e 30a1      	CPI  R26,LOW(0x1)
00042f f411      	BRNE _0x5F
                 _0x60:
000430 e0e1      	LDI  R30,LOW(1)
000431 c001      	RJMP _0x3D4
                 _0x5F:
000432 e0e0      	LDI  R30,LOW(0)
                 _0x3D4:
000433 93e0 0a69 	STS  _deiver_48_err,R30
                 ; 0000 0278 
                 ; 0000 0279         if((data_buffer2_temp[5] & 0x08) == 0x08)
                +
000435 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
000437 70e8      	ANDI R30,LOW(0x8)
000438 30e8      	CPI  R30,LOW(0x8)
000439 f449      	BRNE _0x63
                 ; 0000 027A         {
                 ; 0000 027B          if(time_data_get_act == 0){time_data_get = 1;}
00043a 91e0 0b4d 	LDS  R30,_time_data_get_act
00043c 30e0      	CPI  R30,0
00043d f419      	BRNE _0x64
00043e e0e1      	LDI  R30,LOW(1)
00043f 93e0 0b4f 	STS  _time_data_get,R30
                 ; 0000 027C          time_data_get_act = 1;
                 _0x64:
000441 e0e1      	LDI  R30,LOW(1)
000442 c003      	RJMP _0x3D5
                 ; 0000 027D         }
                 ; 0000 027E         else
                 _0x63:
                 ; 0000 027F         {
                 ; 0000 0280           time_data_get = 0;
000443 e0e0      	LDI  R30,LOW(0)
000444 93e0 0b4f 	STS  _time_data_get,R30
                 ; 0000 0281           time_data_get_act = 0;
                 _0x3D5:
000446 93e0 0b4d 	STS  _time_data_get_act,R30
                 ; 0000 0282         }
                 ; 0000 0283 
                 ; 0000 0284          //switch
                 ; 0000 0285          sw_status = data_buffer2_temp[4];
                +
000448 91e0 0acc+LDS R30 , _data_buffer2_temp + ( 4 )
                 	__GETB1MN _data_buffer2_temp,4
00044a 93e0 0b61 	STS  _sw_status,R30
                 ; 0000 0286 
                 ; 0000 0287          //ºÐ¹è¹Ý 48V
                 ; 0000 0288          div_48v = (data_buffer2_temp[3] * 256) + data_buffer2_temp[2];
                +
00044c 91a0 0acb+LDS R26 , _data_buffer2_temp + ( 3 )
                 	__GETB2MN _data_buffer2_temp,3
00044e 940e 1abc 	CALL SUBOPT_0x1
                +
000450 91e0 0aca+LDS R30 , _data_buffer2_temp + ( 2 )
                 	__GETB1MN _data_buffer2_temp,2
000452 e0f0      	LDI  R31,0
000453 0fea      	ADD  R30,R26
000454 1ffb      	ADC  R31,R27
000455 93e0 0a63 	STS  _div_48v,R30
000457 93f0 0a64 	STS  _div_48v+1,R31
                 ; 0000 0289 
                 ; 0000 028A           if(ADDRESS_0)
000459 91e0 0103 	LDS  R30,259
00045b 70e8      	ANDI R30,LOW(0x8)
00045c 30e8      	CPI  R30,LOW(0x8)
00045d f009      	BREQ PC+2
00045e c03f      	RJMP _0x66
                 ; 0000 028B          {
                 ; 0000 028C             if(DT_ERR == ERR)
00045f 9b15      	SBIS 0x2,5
000460 c003      	RJMP _0x67
                 ; 0000 028D             {
                 ; 0000 028E                 voltage_1 = 0;
000461 940e 1ac3 	CALL SUBOPT_0x2
                 ; 0000 028F                 currunt_1 = 0;
                 ; 0000 0290                 bat_volt_1 = 0;
                 ; 0000 0291             }
                 ; 0000 0292             else
000463 c039      	RJMP _0x68
                 _0x67:
                 ; 0000 0293             {
                 ; 0000 0294              voltage_1  = voltage_m24_2;//(ge_rx_data_h*256)+ge_rx_data_l;//
000464 91e0 0a5f 	LDS  R30,_voltage_m24_2
000466 91f0 0a60 	LDS  R31,_voltage_m24_2+1
000468 93e0 0a13 	STS  _voltage_1,R30
00046a 93f0 0a14 	STS  _voltage_1+1,R31
                 ; 0000 0295              //currunt_1  = currunt_ch1_1 + currunt_ch2_1 + currunt_ch3_1 + currunt_ch4_1 + currunt_ch3_2 + currunt_ch4_ ...
                 ; 0000 0296              //currunt_1  =  (currunt_ch1_2 + currunt_ch2_2+ currunt_ch3_2 + currunt_ch4_2+currunt_ch5_2 + currunt_ch6_2 ...
                 ; 0000 0297              currunt_1  =  (currunt_ch1_2 + currunt_ch2_2+ currunt_ch3_2 + currunt_ch4_2+currunt_ch5_2 + currunt_ch6_2+  ...
00046c 91e0 0a53 	LDS  R30,_currunt_ch2_2
00046e 91f0 0a54 	LDS  R31,_currunt_ch2_2+1
000470 91a0 0a51 	LDS  R26,_currunt_ch1_2
000472 91b0 0a52 	LDS  R27,_currunt_ch1_2+1
000474 0fea      	ADD  R30,R26
000475 1ffb      	ADC  R31,R27
000476 91a0 0a55 	LDS  R26,_currunt_ch3_2
000478 91b0 0a56 	LDS  R27,_currunt_ch3_2+1
00047a 0fea      	ADD  R30,R26
00047b 1ffb      	ADC  R31,R27
00047c 91a0 0a57 	LDS  R26,_currunt_ch4_2
00047e 91b0 0a58 	LDS  R27,_currunt_ch4_2+1
000480 0fea      	ADD  R30,R26
000481 1ffb      	ADC  R31,R27
000482 91a0 0a59 	LDS  R26,_currunt_ch5_2
000484 91b0 0a5a 	LDS  R27,_currunt_ch5_2+1
000486 0fea      	ADD  R30,R26
000487 1ffb      	ADC  R31,R27
000488 91a0 0a5b 	LDS  R26,_currunt_ch6_2
00048a 91b0 0a5c 	LDS  R27,_currunt_ch6_2+1
00048c 0fea      	ADD  R30,R26
00048d 1ffb      	ADC  R31,R27
00048e 91a0 0a5d 	LDS  R26,_currunt_ch7_2
000490 91b0 0a5e 	LDS  R27,_currunt_ch7_2+1
000492 0fea      	ADD  R30,R26
000493 1ffb      	ADC  R31,R27
000494 940e 1ad1 	CALL SUBOPT_0x3
                 ; 0000 0298              bat_volt_1 = batt_level_2;
000496 91e0 0b33 	LDS  R30,_batt_level_2
000498 e0f0      	LDI  R31,0
000499 93e0 0a08 	STS  _bat_volt_1,R30
00049b 93f0 0a09 	STS  _bat_volt_1+1,R31
                 ; 0000 0299             }
                 _0x68:
                 ; 0000 029A          }
                 ; 0000 029B          else
00049d c015      	RJMP _0x69
                 _0x66:
                 ; 0000 029C          {
                 ; 0000 029D              rtc_get_time(&hour,&minute,&sec);
00049e 940e 1ad6 	CALL SUBOPT_0x4
                 ; 0000 029E              //rtc_get_date(&week,&day,&month,&year);
                 ; 0000 029F              voltage_1  = hour;
0004a0 91e0 0a10 	LDS  R30,_hour
0004a2 e0f0      	LDI  R31,0
0004a3 93e0 0a13 	STS  _voltage_1,R30
0004a5 93f0 0a14 	STS  _voltage_1+1,R31
                 ; 0000 02A0              currunt_1  = minute;
0004a7 91e0 0a11 	LDS  R30,_minute
0004a9 e0f0      	LDI  R31,0
0004aa 940e 1ad1 	CALL SUBOPT_0x3
                 ; 0000 02A1              bat_volt_1 = sec;
0004ac 91e0 0a12 	LDS  R30,_sec
0004ae e0f0      	LDI  R31,0
0004af 93e0 0a08 	STS  _bat_volt_1,R30
0004b1 93f0 0a09 	STS  _bat_volt_1+1,R31
                 ; 0000 02A2          }
                 _0x69:
                 ; 0000 02A3 
                 ; 0000 02A4 
                 ; 0000 02A5          if(ADDRESS_0)
0004b3 91e0 0103 	LDS  R30,259
0004b5 70e8      	ANDI R30,LOW(0x8)
0004b6 30e8      	CPI  R30,LOW(0x8)
0004b7 f009      	BREQ PC+2
0004b8 c03f      	RJMP _0x6A
                 ; 0000 02A6          {
                 ; 0000 02A7             if(DT_ERR == ERR)
0004b9 9b15      	SBIS 0x2,5
0004ba c003      	RJMP _0x6B
                 ; 0000 02A8             {
                 ; 0000 02A9                 voltage_2 = 0;
0004bb 940e 1ae2 	CALL SUBOPT_0x5
                 ; 0000 02AA                 currunt_2 = 0;
                 ; 0000 02AB                 bat_volt_2 = 0;
                 ; 0000 02AC             }
                 ; 0000 02AD             else
0004bd c039      	RJMP _0x6C
                 _0x6B:
                 ; 0000 02AE             {
                 ; 0000 02AF                 voltage_2  = voltage_m24_1;//(ge_rx_data_err1 * 256)+ge_rx_data_err2; //sw_status;
0004be 91e0 0a3b 	LDS  R30,_voltage_m24_1
0004c0 91f0 0a3c 	LDS  R31,_voltage_m24_1+1
0004c2 93e0 0a17 	STS  _voltage_2,R30
0004c4 93f0 0a18 	STS  _voltage_2+1,R31
                 ; 0000 02B0                 //currunt_2  = currunt_ch1_2 + currunt_ch2_2+ currunt_ch5_2 + currunt_ch6_2+ currunt_ch5_1 + currunt_ch6 ...
                 ; 0000 02B1                 //currunt_2  = (currunt_ch1_1 + currunt_ch2_1 + currunt_ch3_1 + currunt_ch4_1  +currunt_ch5_1 + currunt_ ...
                 ; 0000 02B2                 currunt_2  = (currunt_ch1_1 + currunt_ch2_1 + currunt_ch3_1 + currunt_ch4_1  +currunt_ch5_1 + currunt_ch ...
0004c6 91e0 0a2f 	LDS  R30,_currunt_ch2_1
0004c8 91f0 0a30 	LDS  R31,_currunt_ch2_1+1
0004ca 91a0 0a2d 	LDS  R26,_currunt_ch1_1
0004cc 91b0 0a2e 	LDS  R27,_currunt_ch1_1+1
0004ce 0fea      	ADD  R30,R26
0004cf 1ffb      	ADC  R31,R27
0004d0 91a0 0a31 	LDS  R26,_currunt_ch3_1
0004d2 91b0 0a32 	LDS  R27,_currunt_ch3_1+1
0004d4 0fea      	ADD  R30,R26
0004d5 1ffb      	ADC  R31,R27
0004d6 91a0 0a33 	LDS  R26,_currunt_ch4_1
0004d8 91b0 0a34 	LDS  R27,_currunt_ch4_1+1
0004da 0fea      	ADD  R30,R26
0004db 1ffb      	ADC  R31,R27
0004dc 91a0 0a35 	LDS  R26,_currunt_ch5_1
0004de 91b0 0a36 	LDS  R27,_currunt_ch5_1+1
0004e0 0fea      	ADD  R30,R26
0004e1 1ffb      	ADC  R31,R27
0004e2 91a0 0a37 	LDS  R26,_currunt_ch6_1
0004e4 91b0 0a38 	LDS  R27,_currunt_ch6_1+1
0004e6 0fea      	ADD  R30,R26
0004e7 1ffb      	ADC  R31,R27
0004e8 91a0 0a39 	LDS  R26,_currunt_ch7_1
0004ea 91b0 0a3a 	LDS  R27,_currunt_ch7_1+1
0004ec 0fea      	ADD  R30,R26
0004ed 1ffb      	ADC  R31,R27
0004ee 940e 1af0 	CALL SUBOPT_0x6
                 ; 0000 02B3                 bat_volt_2 = batt_level_1;
0004f0 91e0 0b2e 	LDS  R30,_batt_level_1
0004f2 e0f0      	LDI  R31,0
0004f3 93e0 0a0a 	STS  _bat_volt_2,R30
0004f5 93f0 0a0b 	STS  _bat_volt_2+1,R31
                 ; 0000 02B4             }
                 _0x6C:
                 ; 0000 02B5          }
                 ; 0000 02B6          else
0004f7 c015      	RJMP _0x6D
                 _0x6A:
                 ; 0000 02B7          {
                 ; 0000 02B8             //rtc_get_time(&hour,&minute,&sec);
                 ; 0000 02B9             rtc_get_date(&week,&day,&month,&year);
0004f8 940e 1af5 	CALL SUBOPT_0x7
                 ; 0000 02BA             voltage_2  = year;
0004fa 91e0 0a0c 	LDS  R30,_year
0004fc e0f0      	LDI  R31,0
0004fd 93e0 0a17 	STS  _voltage_2,R30
0004ff 93f0 0a18 	STS  _voltage_2+1,R31
                 ; 0000 02BB             currunt_2  = month;
000501 91e0 0a0d 	LDS  R30,_month
000503 e0f0      	LDI  R31,0
000504 940e 1af0 	CALL SUBOPT_0x6
                 ; 0000 02BC             bat_volt_2 = day;
000506 91e0 0a0f 	LDS  R30,_day
000508 e0f0      	LDI  R31,0
000509 93e0 0a0a 	STS  _bat_volt_2,R30
00050b 93f0 0a0b 	STS  _bat_volt_2+1,R31
                 ; 0000 02BD          }
                 _0x6D:
                 ; 0000 02BE 
                 ; 0000 02BF 
                 ; 0000 02C0          data_buffer2_temp[91] = '';
00050d e0e0      	LDI  R30,LOW(0)
                +
00050e 93e0 0b23+STS _data_buffer2_temp + ( 91 ) , R30
                 	__PUTB1MN _data_buffer2_temp,91
                 ; 0000 02C1          data_buffer2_temp[90] = '';
                +
000510 93e0 0b22+STS _data_buffer2_temp + ( 90 ) , R30
                 	__PUTB1MN _data_buffer2_temp,90
                 ; 0000 02C2          data_buffer2_temp[89] = '';
                +
000512 93e0 0b21+STS _data_buffer2_temp + ( 89 ) , R30
                 	__PUTB1MN _data_buffer2_temp,89
                 ; 0000 02C3          data_buffer2_temp[88] = '';
                +
000514 93e0 0b20+STS _data_buffer2_temp + ( 88 ) , R30
                 	__PUTB1MN _data_buffer2_temp,88
                 ; 0000 02C4          data_buffer2_temp[87] = '';
                +
000516 93e0 0b1f+STS _data_buffer2_temp + ( 87 ) , R30
                 	__PUTB1MN _data_buffer2_temp,87
                 ; 0000 02C5          data_buffer2_temp[86] = '';
                +
000518 93e0 0b1e+STS _data_buffer2_temp + ( 86 ) , R30
                 	__PUTB1MN _data_buffer2_temp,86
                 ; 0000 02C6          data_buffer2_temp[85] = '';
                +
00051a 93e0 0b1d+STS _data_buffer2_temp + ( 85 ) , R30
                 	__PUTB1MN _data_buffer2_temp,85
                 ; 0000 02C7          data_buffer2_temp[84] = '';
                +
00051c 93e0 0b1c+STS _data_buffer2_temp + ( 84 ) , R30
                 	__PUTB1MN _data_buffer2_temp,84
                 ; 0000 02C8          data_buffer2_temp[83] = '';
                +
00051e 93e0 0b1b+STS _data_buffer2_temp + ( 83 ) , R30
                 	__PUTB1MN _data_buffer2_temp,83
                 ; 0000 02C9          data_buffer2_temp[82] = '';
                +
000520 93e0 0b1a+STS _data_buffer2_temp + ( 82 ) , R30
                 	__PUTB1MN _data_buffer2_temp,82
                 ; 0000 02CA          data_buffer2_temp[81] = '';
                +
000522 93e0 0b19+STS _data_buffer2_temp + ( 81 ) , R30
                 	__PUTB1MN _data_buffer2_temp,81
                 ; 0000 02CB          data_buffer2_temp[80] = '';
                +
000524 93e0 0b18+STS _data_buffer2_temp + ( 80 ) , R30
                 	__PUTB1MN _data_buffer2_temp,80
                 ; 0000 02CC          data_buffer2_temp[79] = '';
                +
000526 93e0 0b17+STS _data_buffer2_temp + ( 79 ) , R30
                 	__PUTB1MN _data_buffer2_temp,79
                 ; 0000 02CD          data_buffer2_temp[78] = '';
                +
000528 93e0 0b16+STS _data_buffer2_temp + ( 78 ) , R30
                 	__PUTB1MN _data_buffer2_temp,78
                 ; 0000 02CE          data_buffer2_temp[77] = '';
                +
00052a 93e0 0b15+STS _data_buffer2_temp + ( 77 ) , R30
                 	__PUTB1MN _data_buffer2_temp,77
                 ; 0000 02CF          data_buffer2_temp[76] = '';
                +
00052c 93e0 0b14+STS _data_buffer2_temp + ( 76 ) , R30
                 	__PUTB1MN _data_buffer2_temp,76
                 ; 0000 02D0          data_buffer2_temp[75] = '';
                +
00052e 93e0 0b13+STS _data_buffer2_temp + ( 75 ) , R30
                 	__PUTB1MN _data_buffer2_temp,75
                 ; 0000 02D1          data_buffer2_temp[74] = '';
                +
000530 93e0 0b12+STS _data_buffer2_temp + ( 74 ) , R30
                 	__PUTB1MN _data_buffer2_temp,74
                 ; 0000 02D2          data_buffer2_temp[73] = '';
                +
000532 93e0 0b11+STS _data_buffer2_temp + ( 73 ) , R30
                 	__PUTB1MN _data_buffer2_temp,73
                 ; 0000 02D3          data_buffer2_temp[72] = '';
                +
000534 93e0 0b10+STS _data_buffer2_temp + ( 72 ) , R30
                 	__PUTB1MN _data_buffer2_temp,72
                 ; 0000 02D4          data_buffer2_temp[71] = '';
                +
000536 93e0 0b0f+STS _data_buffer2_temp + ( 71 ) , R30
                 	__PUTB1MN _data_buffer2_temp,71
                 ; 0000 02D5          data_buffer2_temp[70] = '';
                +
000538 93e0 0b0e+STS _data_buffer2_temp + ( 70 ) , R30
                 	__PUTB1MN _data_buffer2_temp,70
                 ; 0000 02D6          data_buffer2_temp[69] = '';
                +
00053a 93e0 0b0d+STS _data_buffer2_temp + ( 69 ) , R30
                 	__PUTB1MN _data_buffer2_temp,69
                 ; 0000 02D7          data_buffer2_temp[68] = '';
                +
00053c 93e0 0b0c+STS _data_buffer2_temp + ( 68 ) , R30
                 	__PUTB1MN _data_buffer2_temp,68
                 ; 0000 02D8          data_buffer2_temp[67] = '';
                +
00053e 93e0 0b0b+STS _data_buffer2_temp + ( 67 ) , R30
                 	__PUTB1MN _data_buffer2_temp,67
                 ; 0000 02D9          data_buffer2_temp[66] = '';
                +
000540 93e0 0b0a+STS _data_buffer2_temp + ( 66 ) , R30
                 	__PUTB1MN _data_buffer2_temp,66
                 ; 0000 02DA          data_buffer2_temp[65] = '';
                +
000542 93e0 0b09+STS _data_buffer2_temp + ( 65 ) , R30
                 	__PUTB1MN _data_buffer2_temp,65
                 ; 0000 02DB          data_buffer2_temp[64] = '';
                +
000544 93e0 0b08+STS _data_buffer2_temp + ( 64 ) , R30
                 	__PUTB1MN _data_buffer2_temp,64
                 ; 0000 02DC          data_buffer2_temp[63] = '';
                +
000546 93e0 0b07+STS _data_buffer2_temp + ( 63 ) , R30
                 	__PUTB1MN _data_buffer2_temp,63
                 ; 0000 02DD          data_buffer2_temp[62] = '';
                +
000548 93e0 0b06+STS _data_buffer2_temp + ( 62 ) , R30
                 	__PUTB1MN _data_buffer2_temp,62
                 ; 0000 02DE          data_buffer2_temp[61] = '';
                +
00054a 93e0 0b05+STS _data_buffer2_temp + ( 61 ) , R30
                 	__PUTB1MN _data_buffer2_temp,61
                 ; 0000 02DF          data_buffer2_temp[60] = '';
                +
00054c 93e0 0b04+STS _data_buffer2_temp + ( 60 ) , R30
                 	__PUTB1MN _data_buffer2_temp,60
                 ; 0000 02E0          data_buffer2_temp[59] = '';
                +
00054e 93e0 0b03+STS _data_buffer2_temp + ( 59 ) , R30
                 	__PUTB1MN _data_buffer2_temp,59
                 ; 0000 02E1          data_buffer2_temp[58] = '';
                +
000550 93e0 0b02+STS _data_buffer2_temp + ( 58 ) , R30
                 	__PUTB1MN _data_buffer2_temp,58
                 ; 0000 02E2          data_buffer2_temp[57] = '';
                +
000552 93e0 0b01+STS _data_buffer2_temp + ( 57 ) , R30
                 	__PUTB1MN _data_buffer2_temp,57
                 ; 0000 02E3          data_buffer2_temp[56] = '';
                +
000554 93e0 0b00+STS _data_buffer2_temp + ( 56 ) , R30
                 	__PUTB1MN _data_buffer2_temp,56
                 ; 0000 02E4          data_buffer2_temp[55] = '';
                +
000556 93e0 0aff+STS _data_buffer2_temp + ( 55 ) , R30
                 	__PUTB1MN _data_buffer2_temp,55
                 ; 0000 02E5          data_buffer2_temp[54] = '';
                +
000558 93e0 0afe+STS _data_buffer2_temp + ( 54 ) , R30
                 	__PUTB1MN _data_buffer2_temp,54
                 ; 0000 02E6          data_buffer2_temp[53] = '';
                +
00055a 93e0 0afd+STS _data_buffer2_temp + ( 53 ) , R30
                 	__PUTB1MN _data_buffer2_temp,53
                 ; 0000 02E7          data_buffer2_temp[52] = '';
                +
00055c 93e0 0afc+STS _data_buffer2_temp + ( 52 ) , R30
                 	__PUTB1MN _data_buffer2_temp,52
                 ; 0000 02E8          data_buffer2_temp[51] = '';
                +
00055e 93e0 0afb+STS _data_buffer2_temp + ( 51 ) , R30
                 	__PUTB1MN _data_buffer2_temp,51
                 ; 0000 02E9          data_buffer2_temp[50] = '';
                +
000560 93e0 0afa+STS _data_buffer2_temp + ( 50 ) , R30
                 	__PUTB1MN _data_buffer2_temp,50
                 ; 0000 02EA          data_buffer2_temp[49] = '';
                +
000562 93e0 0af9+STS _data_buffer2_temp + ( 49 ) , R30
                 	__PUTB1MN _data_buffer2_temp,49
                 ; 0000 02EB          data_buffer2_temp[48] = '';
                +
000564 93e0 0af8+STS _data_buffer2_temp + ( 48 ) , R30
                 	__PUTB1MN _data_buffer2_temp,48
                 ; 0000 02EC          data_buffer2_temp[47] = '';
                +
000566 93e0 0af7+STS _data_buffer2_temp + ( 47 ) , R30
                 	__PUTB1MN _data_buffer2_temp,47
                 ; 0000 02ED          data_buffer2_temp[46] = '';
                +
000568 93e0 0af6+STS _data_buffer2_temp + ( 46 ) , R30
                 	__PUTB1MN _data_buffer2_temp,46
                 ; 0000 02EE          data_buffer2_temp[45] = '';
                +
00056a 93e0 0af5+STS _data_buffer2_temp + ( 45 ) , R30
                 	__PUTB1MN _data_buffer2_temp,45
                 ; 0000 02EF          data_buffer2_temp[44] = '';
                +
00056c 93e0 0af4+STS _data_buffer2_temp + ( 44 ) , R30
                 	__PUTB1MN _data_buffer2_temp,44
                 ; 0000 02F0          data_buffer2_temp[43] = '';
                +
00056e 93e0 0af3+STS _data_buffer2_temp + ( 43 ) , R30
                 	__PUTB1MN _data_buffer2_temp,43
                 ; 0000 02F1          data_buffer2_temp[42] = '';
                +
000570 93e0 0af2+STS _data_buffer2_temp + ( 42 ) , R30
                 	__PUTB1MN _data_buffer2_temp,42
                 ; 0000 02F2          data_buffer2_temp[41] = '';
                +
000572 93e0 0af1+STS _data_buffer2_temp + ( 41 ) , R30
                 	__PUTB1MN _data_buffer2_temp,41
                 ; 0000 02F3          data_buffer2_temp[40] = '';
                +
000574 93e0 0af0+STS _data_buffer2_temp + ( 40 ) , R30
                 	__PUTB1MN _data_buffer2_temp,40
                 ; 0000 02F4          data_buffer2_temp[39] = '';
                +
000576 93e0 0aef+STS _data_buffer2_temp + ( 39 ) , R30
                 	__PUTB1MN _data_buffer2_temp,39
                 ; 0000 02F5          data_buffer2_temp[38] = '';
                +
000578 93e0 0aee+STS _data_buffer2_temp + ( 38 ) , R30
                 	__PUTB1MN _data_buffer2_temp,38
                 ; 0000 02F6          data_buffer2_temp[37] = '';
                +
00057a 93e0 0aed+STS _data_buffer2_temp + ( 37 ) , R30
                 	__PUTB1MN _data_buffer2_temp,37
                 ; 0000 02F7          data_buffer2_temp[36] = '';
                +
00057c 93e0 0aec+STS _data_buffer2_temp + ( 36 ) , R30
                 	__PUTB1MN _data_buffer2_temp,36
                 ; 0000 02F8          data_buffer2_temp[35] = '';
                +
00057e 93e0 0aeb+STS _data_buffer2_temp + ( 35 ) , R30
                 	__PUTB1MN _data_buffer2_temp,35
                 ; 0000 02F9          data_buffer2_temp[34] = '';
                +
000580 93e0 0aea+STS _data_buffer2_temp + ( 34 ) , R30
                 	__PUTB1MN _data_buffer2_temp,34
                 ; 0000 02FA          data_buffer2_temp[33] = '';
                +
000582 93e0 0ae9+STS _data_buffer2_temp + ( 33 ) , R30
                 	__PUTB1MN _data_buffer2_temp,33
                 ; 0000 02FB          data_buffer2_temp[32] = '';
                +
000584 93e0 0ae8+STS _data_buffer2_temp + ( 32 ) , R30
                 	__PUTB1MN _data_buffer2_temp,32
                 ; 0000 02FC          data_buffer2_temp[31] = '';
                +
000586 93e0 0ae7+STS _data_buffer2_temp + ( 31 ) , R30
                 	__PUTB1MN _data_buffer2_temp,31
                 ; 0000 02FD          data_buffer2_temp[30] = '';
                +
000588 93e0 0ae6+STS _data_buffer2_temp + ( 30 ) , R30
                 	__PUTB1MN _data_buffer2_temp,30
                 ; 0000 02FE          data_buffer2_temp[29] = '';
                +
00058a 93e0 0ae5+STS _data_buffer2_temp + ( 29 ) , R30
                 	__PUTB1MN _data_buffer2_temp,29
                 ; 0000 02FF          data_buffer2_temp[28] = '';
                +
00058c 93e0 0ae4+STS _data_buffer2_temp + ( 28 ) , R30
                 	__PUTB1MN _data_buffer2_temp,28
                 ; 0000 0300          data_buffer2_temp[27] = '';
                +
00058e 93e0 0ae3+STS _data_buffer2_temp + ( 27 ) , R30
                 	__PUTB1MN _data_buffer2_temp,27
                 ; 0000 0301          data_buffer2_temp[26] = '';
                +
000590 93e0 0ae2+STS _data_buffer2_temp + ( 26 ) , R30
                 	__PUTB1MN _data_buffer2_temp,26
                 ; 0000 0302          data_buffer2_temp[25] = '';
                +
000592 93e0 0ae1+STS _data_buffer2_temp + ( 25 ) , R30
                 	__PUTB1MN _data_buffer2_temp,25
                 ; 0000 0303          data_buffer2_temp[24] = '';
                +
000594 93e0 0ae0+STS _data_buffer2_temp + ( 24 ) , R30
                 	__PUTB1MN _data_buffer2_temp,24
                 ; 0000 0304          data_buffer2_temp[23] = '';
                +
000596 93e0 0adf+STS _data_buffer2_temp + ( 23 ) , R30
                 	__PUTB1MN _data_buffer2_temp,23
                 ; 0000 0305          data_buffer2_temp[22] = '';
                +
000598 93e0 0ade+STS _data_buffer2_temp + ( 22 ) , R30
                 	__PUTB1MN _data_buffer2_temp,22
                 ; 0000 0306          data_buffer2_temp[21] = '';
                +
00059a 93e0 0add+STS _data_buffer2_temp + ( 21 ) , R30
                 	__PUTB1MN _data_buffer2_temp,21
                 ; 0000 0307          data_buffer2_temp[20] = '';
                +
00059c 93e0 0adc+STS _data_buffer2_temp + ( 20 ) , R30
                 	__PUTB1MN _data_buffer2_temp,20
                 ; 0000 0308          data_buffer2_temp[19] = '';
                +
00059e 93e0 0adb+STS _data_buffer2_temp + ( 19 ) , R30
                 	__PUTB1MN _data_buffer2_temp,19
                 ; 0000 0309          data_buffer2_temp[18] = '';
                +
0005a0 93e0 0ada+STS _data_buffer2_temp + ( 18 ) , R30
                 	__PUTB1MN _data_buffer2_temp,18
                 ; 0000 030A          data_buffer2_temp[17] = '';
                +
0005a2 93e0 0ad9+STS _data_buffer2_temp + ( 17 ) , R30
                 	__PUTB1MN _data_buffer2_temp,17
                 ; 0000 030B          data_buffer2_temp[16] = '';
                +
0005a4 93e0 0ad8+STS _data_buffer2_temp + ( 16 ) , R30
                 	__PUTB1MN _data_buffer2_temp,16
                 ; 0000 030C          data_buffer2_temp[15] = '';
                +
0005a6 93e0 0ad7+STS _data_buffer2_temp + ( 15 ) , R30
                 	__PUTB1MN _data_buffer2_temp,15
                 ; 0000 030D          data_buffer2_temp[14] = '';
                +
0005a8 93e0 0ad6+STS _data_buffer2_temp + ( 14 ) , R30
                 	__PUTB1MN _data_buffer2_temp,14
                 ; 0000 030E          data_buffer2_temp[13] = '';
0005aa 940e 1b05 	CALL SUBOPT_0x8
                 ; 0000 030F          data_buffer2_temp[12] = '';
                 ; 0000 0310          data_buffer2_temp[11] = '';
                 ; 0000 0311          data_buffer2_temp[10] = '';
                 ; 0000 0312          data_buffer2_temp[9] = '';
                 ; 0000 0313          data_buffer2_temp[8] = '';
                 ; 0000 0314          data_buffer2_temp[7] = '';
                 ; 0000 0315          data_buffer2_temp[6] = '';
                 ; 0000 0316          data_buffer2_temp[5] = '';
                 ; 0000 0317          data_buffer2_temp[4] = '';
                 ; 0000 0318          data_buffer2_temp[3] = '';
                 ; 0000 0319          data_buffer2_temp[2] = '';
                 ; 0000 031A          data_buffer2_temp[1] = '';
                 ; 0000 031B          data_buffer2_temp[0] = '';
                 ; 0000 031C         loss_count_a=0;
0005ac e0e0      	LDI  R30,LOW(0)
0005ad 93e0 0b66 	STS  _loss_count_a,R30
0005af 93e0 0b67 	STS  _loss_count_a+1,R30
                 ; 0000 031D        }
                 ; 0000 031E        // loss_count_a=0;
                 ; 0000 031F    }
                 _0xC:
                 ; 0000 0320    else
0005b1 c16e      	RJMP _0x6E
                 _0xB:
                 ; 0000 0321    {
                 ; 0000 0322          data_buffer2_temp[91] = data_buffer2_temp[90];
                +
0005b2 91e0 0b22+LDS R30 , _data_buffer2_temp + ( 90 )
                 	__GETB1MN _data_buffer2_temp,90
                +
0005b4 93e0 0b23+STS _data_buffer2_temp + ( 91 ) , R30
                 	__PUTB1MN _data_buffer2_temp,91
                 ; 0000 0323          data_buffer2_temp[90] = data_buffer2_temp[89];
                +
0005b6 91e0 0b21+LDS R30 , _data_buffer2_temp + ( 89 )
                 	__GETB1MN _data_buffer2_temp,89
                +
0005b8 93e0 0b22+STS _data_buffer2_temp + ( 90 ) , R30
                 	__PUTB1MN _data_buffer2_temp,90
                 ; 0000 0324          data_buffer2_temp[89] = data_buffer2_temp[88];
                +
0005ba 91e0 0b20+LDS R30 , _data_buffer2_temp + ( 88 )
                 	__GETB1MN _data_buffer2_temp,88
                +
0005bc 93e0 0b21+STS _data_buffer2_temp + ( 89 ) , R30
                 	__PUTB1MN _data_buffer2_temp,89
                 ; 0000 0325          data_buffer2_temp[88] = data_buffer2_temp[87];
                +
0005be 91e0 0b1f+LDS R30 , _data_buffer2_temp + ( 87 )
                 	__GETB1MN _data_buffer2_temp,87
                +
0005c0 93e0 0b20+STS _data_buffer2_temp + ( 88 ) , R30
                 	__PUTB1MN _data_buffer2_temp,88
                 ; 0000 0326          data_buffer2_temp[87] = data_buffer2_temp[86];
                +
0005c2 91e0 0b1e+LDS R30 , _data_buffer2_temp + ( 86 )
                 	__GETB1MN _data_buffer2_temp,86
                +
0005c4 93e0 0b1f+STS _data_buffer2_temp + ( 87 ) , R30
                 	__PUTB1MN _data_buffer2_temp,87
                 ; 0000 0327          data_buffer2_temp[86] = data_buffer2_temp[85];
                +
0005c6 91e0 0b1d+LDS R30 , _data_buffer2_temp + ( 85 )
                 	__GETB1MN _data_buffer2_temp,85
                +
0005c8 93e0 0b1e+STS _data_buffer2_temp + ( 86 ) , R30
                 	__PUTB1MN _data_buffer2_temp,86
                 ; 0000 0328          data_buffer2_temp[85] = data_buffer2_temp[84];
                +
0005ca 91e0 0b1c+LDS R30 , _data_buffer2_temp + ( 84 )
                 	__GETB1MN _data_buffer2_temp,84
                +
0005cc 93e0 0b1d+STS _data_buffer2_temp + ( 85 ) , R30
                 	__PUTB1MN _data_buffer2_temp,85
                 ; 0000 0329          data_buffer2_temp[84] = data_buffer2_temp[83];
                +
0005ce 91e0 0b1b+LDS R30 , _data_buffer2_temp + ( 83 )
                 	__GETB1MN _data_buffer2_temp,83
                +
0005d0 93e0 0b1c+STS _data_buffer2_temp + ( 84 ) , R30
                 	__PUTB1MN _data_buffer2_temp,84
                 ; 0000 032A          data_buffer2_temp[83] = data_buffer2_temp[82];
                +
0005d2 91e0 0b1a+LDS R30 , _data_buffer2_temp + ( 82 )
                 	__GETB1MN _data_buffer2_temp,82
                +
0005d4 93e0 0b1b+STS _data_buffer2_temp + ( 83 ) , R30
                 	__PUTB1MN _data_buffer2_temp,83
                 ; 0000 032B          data_buffer2_temp[82] = data_buffer2_temp[81];
                +
0005d6 91e0 0b19+LDS R30 , _data_buffer2_temp + ( 81 )
                 	__GETB1MN _data_buffer2_temp,81
                +
0005d8 93e0 0b1a+STS _data_buffer2_temp + ( 82 ) , R30
                 	__PUTB1MN _data_buffer2_temp,82
                 ; 0000 032C          data_buffer2_temp[81] = data_buffer2_temp[80];
                +
0005da 91e0 0b18+LDS R30 , _data_buffer2_temp + ( 80 )
                 	__GETB1MN _data_buffer2_temp,80
                +
0005dc 93e0 0b19+STS _data_buffer2_temp + ( 81 ) , R30
                 	__PUTB1MN _data_buffer2_temp,81
                 ; 0000 032D          data_buffer2_temp[80] = data_buffer2_temp[79];
                +
0005de 91e0 0b17+LDS R30 , _data_buffer2_temp + ( 79 )
                 	__GETB1MN _data_buffer2_temp,79
                +
0005e0 93e0 0b18+STS _data_buffer2_temp + ( 80 ) , R30
                 	__PUTB1MN _data_buffer2_temp,80
                 ; 0000 032E          data_buffer2_temp[79] = data_buffer2_temp[78];
                +
0005e2 91e0 0b16+LDS R30 , _data_buffer2_temp + ( 78 )
                 	__GETB1MN _data_buffer2_temp,78
                +
0005e4 93e0 0b17+STS _data_buffer2_temp + ( 79 ) , R30
                 	__PUTB1MN _data_buffer2_temp,79
                 ; 0000 032F          data_buffer2_temp[78] = data_buffer2_temp[77];
                +
0005e6 91e0 0b15+LDS R30 , _data_buffer2_temp + ( 77 )
                 	__GETB1MN _data_buffer2_temp,77
                +
0005e8 93e0 0b16+STS _data_buffer2_temp + ( 78 ) , R30
                 	__PUTB1MN _data_buffer2_temp,78
                 ; 0000 0330          data_buffer2_temp[77] = data_buffer2_temp[76];
                +
0005ea 91e0 0b14+LDS R30 , _data_buffer2_temp + ( 76 )
                 	__GETB1MN _data_buffer2_temp,76
                +
0005ec 93e0 0b15+STS _data_buffer2_temp + ( 77 ) , R30
                 	__PUTB1MN _data_buffer2_temp,77
                 ; 0000 0331          data_buffer2_temp[76] = data_buffer2_temp[75];
                +
0005ee 91e0 0b13+LDS R30 , _data_buffer2_temp + ( 75 )
                 	__GETB1MN _data_buffer2_temp,75
                +
0005f0 93e0 0b14+STS _data_buffer2_temp + ( 76 ) , R30
                 	__PUTB1MN _data_buffer2_temp,76
                 ; 0000 0332          data_buffer2_temp[75] = data_buffer2_temp[74];
                +
0005f2 91e0 0b12+LDS R30 , _data_buffer2_temp + ( 74 )
                 	__GETB1MN _data_buffer2_temp,74
                +
0005f4 93e0 0b13+STS _data_buffer2_temp + ( 75 ) , R30
                 	__PUTB1MN _data_buffer2_temp,75
                 ; 0000 0333          data_buffer2_temp[74] = data_buffer2_temp[73];
                +
0005f6 91e0 0b11+LDS R30 , _data_buffer2_temp + ( 73 )
                 	__GETB1MN _data_buffer2_temp,73
                +
0005f8 93e0 0b12+STS _data_buffer2_temp + ( 74 ) , R30
                 	__PUTB1MN _data_buffer2_temp,74
                 ; 0000 0334          data_buffer2_temp[73] = data_buffer2_temp[72];
                +
0005fa 91e0 0b10+LDS R30 , _data_buffer2_temp + ( 72 )
                 	__GETB1MN _data_buffer2_temp,72
                +
0005fc 93e0 0b11+STS _data_buffer2_temp + ( 73 ) , R30
                 	__PUTB1MN _data_buffer2_temp,73
                 ; 0000 0335          data_buffer2_temp[72] = data_buffer2_temp[71];
                +
0005fe 91e0 0b0f+LDS R30 , _data_buffer2_temp + ( 71 )
                 	__GETB1MN _data_buffer2_temp,71
                +
000600 93e0 0b10+STS _data_buffer2_temp + ( 72 ) , R30
                 	__PUTB1MN _data_buffer2_temp,72
                 ; 0000 0336          data_buffer2_temp[71] = data_buffer2_temp[70];
                +
000602 91e0 0b0e+LDS R30 , _data_buffer2_temp + ( 70 )
                 	__GETB1MN _data_buffer2_temp,70
                +
000604 93e0 0b0f+STS _data_buffer2_temp + ( 71 ) , R30
                 	__PUTB1MN _data_buffer2_temp,71
                 ; 0000 0337          data_buffer2_temp[70] = data_buffer2_temp[69];
                +
000606 91e0 0b0d+LDS R30 , _data_buffer2_temp + ( 69 )
                 	__GETB1MN _data_buffer2_temp,69
                +
000608 93e0 0b0e+STS _data_buffer2_temp + ( 70 ) , R30
                 	__PUTB1MN _data_buffer2_temp,70
                 ; 0000 0338          data_buffer2_temp[69] = data_buffer2_temp[68];
                +
00060a 91e0 0b0c+LDS R30 , _data_buffer2_temp + ( 68 )
                 	__GETB1MN _data_buffer2_temp,68
                +
00060c 93e0 0b0d+STS _data_buffer2_temp + ( 69 ) , R30
                 	__PUTB1MN _data_buffer2_temp,69
                 ; 0000 0339          data_buffer2_temp[68] = data_buffer2_temp[67];
                +
00060e 91e0 0b0b+LDS R30 , _data_buffer2_temp + ( 67 )
                 	__GETB1MN _data_buffer2_temp,67
                +
000610 93e0 0b0c+STS _data_buffer2_temp + ( 68 ) , R30
                 	__PUTB1MN _data_buffer2_temp,68
                 ; 0000 033A          data_buffer2_temp[67] = data_buffer2_temp[66];
                +
000612 91e0 0b0a+LDS R30 , _data_buffer2_temp + ( 66 )
                 	__GETB1MN _data_buffer2_temp,66
                +
000614 93e0 0b0b+STS _data_buffer2_temp + ( 67 ) , R30
                 	__PUTB1MN _data_buffer2_temp,67
                 ; 0000 033B          data_buffer2_temp[66] = data_buffer2_temp[65];
                +
000616 91e0 0b09+LDS R30 , _data_buffer2_temp + ( 65 )
                 	__GETB1MN _data_buffer2_temp,65
                +
000618 93e0 0b0a+STS _data_buffer2_temp + ( 66 ) , R30
                 	__PUTB1MN _data_buffer2_temp,66
                 ; 0000 033C          data_buffer2_temp[65] = data_buffer2_temp[64];
                +
00061a 91e0 0b08+LDS R30 , _data_buffer2_temp + ( 64 )
                 	__GETB1MN _data_buffer2_temp,64
                +
00061c 93e0 0b09+STS _data_buffer2_temp + ( 65 ) , R30
                 	__PUTB1MN _data_buffer2_temp,65
                 ; 0000 033D          data_buffer2_temp[64] = data_buffer2_temp[63];
                +
00061e 91e0 0b07+LDS R30 , _data_buffer2_temp + ( 63 )
                 	__GETB1MN _data_buffer2_temp,63
                +
000620 93e0 0b08+STS _data_buffer2_temp + ( 64 ) , R30
                 	__PUTB1MN _data_buffer2_temp,64
                 ; 0000 033E          data_buffer2_temp[63] = data_buffer2_temp[62];
                +
000622 91e0 0b06+LDS R30 , _data_buffer2_temp + ( 62 )
                 	__GETB1MN _data_buffer2_temp,62
                +
000624 93e0 0b07+STS _data_buffer2_temp + ( 63 ) , R30
                 	__PUTB1MN _data_buffer2_temp,63
                 ; 0000 033F          data_buffer2_temp[62] = data_buffer2_temp[61];
                +
000626 91e0 0b05+LDS R30 , _data_buffer2_temp + ( 61 )
                 	__GETB1MN _data_buffer2_temp,61
                +
000628 93e0 0b06+STS _data_buffer2_temp + ( 62 ) , R30
                 	__PUTB1MN _data_buffer2_temp,62
                 ; 0000 0340          data_buffer2_temp[61] = data_buffer2_temp[60];
                +
00062a 91e0 0b04+LDS R30 , _data_buffer2_temp + ( 60 )
                 	__GETB1MN _data_buffer2_temp,60
                +
00062c 93e0 0b05+STS _data_buffer2_temp + ( 61 ) , R30
                 	__PUTB1MN _data_buffer2_temp,61
                 ; 0000 0341          data_buffer2_temp[60] = data_buffer2_temp[59];
                +
00062e 91e0 0b03+LDS R30 , _data_buffer2_temp + ( 59 )
                 	__GETB1MN _data_buffer2_temp,59
                +
000630 93e0 0b04+STS _data_buffer2_temp + ( 60 ) , R30
                 	__PUTB1MN _data_buffer2_temp,60
                 ; 0000 0342          data_buffer2_temp[59] = data_buffer2_temp[58];
                +
000632 91e0 0b02+LDS R30 , _data_buffer2_temp + ( 58 )
                 	__GETB1MN _data_buffer2_temp,58
                +
000634 93e0 0b03+STS _data_buffer2_temp + ( 59 ) , R30
                 	__PUTB1MN _data_buffer2_temp,59
                 ; 0000 0343          data_buffer2_temp[58] = data_buffer2_temp[57];
                +
000636 91e0 0b01+LDS R30 , _data_buffer2_temp + ( 57 )
                 	__GETB1MN _data_buffer2_temp,57
                +
000638 93e0 0b02+STS _data_buffer2_temp + ( 58 ) , R30
                 	__PUTB1MN _data_buffer2_temp,58
                 ; 0000 0344          data_buffer2_temp[57] = data_buffer2_temp[56];
                +
00063a 91e0 0b00+LDS R30 , _data_buffer2_temp + ( 56 )
                 	__GETB1MN _data_buffer2_temp,56
                +
00063c 93e0 0b01+STS _data_buffer2_temp + ( 57 ) , R30
                 	__PUTB1MN _data_buffer2_temp,57
                 ; 0000 0345          data_buffer2_temp[56] = data_buffer2_temp[55];
                +
00063e 91e0 0aff+LDS R30 , _data_buffer2_temp + ( 55 )
                 	__GETB1MN _data_buffer2_temp,55
                +
000640 93e0 0b00+STS _data_buffer2_temp + ( 56 ) , R30
                 	__PUTB1MN _data_buffer2_temp,56
                 ; 0000 0346          data_buffer2_temp[55] = data_buffer2_temp[54];
                +
000642 91e0 0afe+LDS R30 , _data_buffer2_temp + ( 54 )
                 	__GETB1MN _data_buffer2_temp,54
                +
000644 93e0 0aff+STS _data_buffer2_temp + ( 55 ) , R30
                 	__PUTB1MN _data_buffer2_temp,55
                 ; 0000 0347          data_buffer2_temp[54] = data_buffer2_temp[53];
                +
000646 91e0 0afd+LDS R30 , _data_buffer2_temp + ( 53 )
                 	__GETB1MN _data_buffer2_temp,53
                +
000648 93e0 0afe+STS _data_buffer2_temp + ( 54 ) , R30
                 	__PUTB1MN _data_buffer2_temp,54
                 ; 0000 0348          data_buffer2_temp[53] = data_buffer2_temp[52];
                +
00064a 91e0 0afc+LDS R30 , _data_buffer2_temp + ( 52 )
                 	__GETB1MN _data_buffer2_temp,52
                +
00064c 93e0 0afd+STS _data_buffer2_temp + ( 53 ) , R30
                 	__PUTB1MN _data_buffer2_temp,53
                 ; 0000 0349          data_buffer2_temp[52] = data_buffer2_temp[51];
                +
00064e 91e0 0afb+LDS R30 , _data_buffer2_temp + ( 51 )
                 	__GETB1MN _data_buffer2_temp,51
                +
000650 93e0 0afc+STS _data_buffer2_temp + ( 52 ) , R30
                 	__PUTB1MN _data_buffer2_temp,52
                 ; 0000 034A          data_buffer2_temp[51] = data_buffer2_temp[50];
                +
000652 91e0 0afa+LDS R30 , _data_buffer2_temp + ( 50 )
                 	__GETB1MN _data_buffer2_temp,50
                +
000654 93e0 0afb+STS _data_buffer2_temp + ( 51 ) , R30
                 	__PUTB1MN _data_buffer2_temp,51
                 ; 0000 034B          data_buffer2_temp[50] = data_buffer2_temp[49];
                +
000656 91e0 0af9+LDS R30 , _data_buffer2_temp + ( 49 )
                 	__GETB1MN _data_buffer2_temp,49
                +
000658 93e0 0afa+STS _data_buffer2_temp + ( 50 ) , R30
                 	__PUTB1MN _data_buffer2_temp,50
                 ; 0000 034C          data_buffer2_temp[49] = data_buffer2_temp[48];
                +
00065a 91e0 0af8+LDS R30 , _data_buffer2_temp + ( 48 )
                 	__GETB1MN _data_buffer2_temp,48
                +
00065c 93e0 0af9+STS _data_buffer2_temp + ( 49 ) , R30
                 	__PUTB1MN _data_buffer2_temp,49
                 ; 0000 034D          data_buffer2_temp[48] = data_buffer2_temp[47];
                +
00065e 91e0 0af7+LDS R30 , _data_buffer2_temp + ( 47 )
                 	__GETB1MN _data_buffer2_temp,47
                +
000660 93e0 0af8+STS _data_buffer2_temp + ( 48 ) , R30
                 	__PUTB1MN _data_buffer2_temp,48
                 ; 0000 034E          data_buffer2_temp[47] = data_buffer2_temp[46];
                +
000662 91e0 0af6+LDS R30 , _data_buffer2_temp + ( 46 )
                 	__GETB1MN _data_buffer2_temp,46
                +
000664 93e0 0af7+STS _data_buffer2_temp + ( 47 ) , R30
                 	__PUTB1MN _data_buffer2_temp,47
                 ; 0000 034F          data_buffer2_temp[46] = data_buffer2_temp[45];
                +
000666 91e0 0af5+LDS R30 , _data_buffer2_temp + ( 45 )
                 	__GETB1MN _data_buffer2_temp,45
                +
000668 93e0 0af6+STS _data_buffer2_temp + ( 46 ) , R30
                 	__PUTB1MN _data_buffer2_temp,46
                 ; 0000 0350          data_buffer2_temp[45] = data_buffer2_temp[44];
                +
00066a 91e0 0af4+LDS R30 , _data_buffer2_temp + ( 44 )
                 	__GETB1MN _data_buffer2_temp,44
                +
00066c 93e0 0af5+STS _data_buffer2_temp + ( 45 ) , R30
                 	__PUTB1MN _data_buffer2_temp,45
                 ; 0000 0351          data_buffer2_temp[44] = data_buffer2_temp[43];
                +
00066e 91e0 0af3+LDS R30 , _data_buffer2_temp + ( 43 )
                 	__GETB1MN _data_buffer2_temp,43
                +
000670 93e0 0af4+STS _data_buffer2_temp + ( 44 ) , R30
                 	__PUTB1MN _data_buffer2_temp,44
                 ; 0000 0352          data_buffer2_temp[43] = data_buffer2_temp[42];
                +
000672 91e0 0af2+LDS R30 , _data_buffer2_temp + ( 42 )
                 	__GETB1MN _data_buffer2_temp,42
                +
000674 93e0 0af3+STS _data_buffer2_temp + ( 43 ) , R30
                 	__PUTB1MN _data_buffer2_temp,43
                 ; 0000 0353          data_buffer2_temp[42] = data_buffer2_temp[41];
                +
000676 91e0 0af1+LDS R30 , _data_buffer2_temp + ( 41 )
                 	__GETB1MN _data_buffer2_temp,41
                +
000678 93e0 0af2+STS _data_buffer2_temp + ( 42 ) , R30
                 	__PUTB1MN _data_buffer2_temp,42
                 ; 0000 0354          data_buffer2_temp[41] = data_buffer2_temp[40];
                +
00067a 91e0 0af0+LDS R30 , _data_buffer2_temp + ( 40 )
                 	__GETB1MN _data_buffer2_temp,40
                +
00067c 93e0 0af1+STS _data_buffer2_temp + ( 41 ) , R30
                 	__PUTB1MN _data_buffer2_temp,41
                 ; 0000 0355          data_buffer2_temp[40] = data_buffer2_temp[39];
                +
00067e 91e0 0aef+LDS R30 , _data_buffer2_temp + ( 39 )
                 	__GETB1MN _data_buffer2_temp,39
                +
000680 93e0 0af0+STS _data_buffer2_temp + ( 40 ) , R30
                 	__PUTB1MN _data_buffer2_temp,40
                 ; 0000 0356          data_buffer2_temp[39] = data_buffer2_temp[38];
                +
000682 91e0 0aee+LDS R30 , _data_buffer2_temp + ( 38 )
                 	__GETB1MN _data_buffer2_temp,38
                +
000684 93e0 0aef+STS _data_buffer2_temp + ( 39 ) , R30
                 	__PUTB1MN _data_buffer2_temp,39
                 ; 0000 0357          data_buffer2_temp[38] = data_buffer2_temp[37];
                +
000686 91e0 0aed+LDS R30 , _data_buffer2_temp + ( 37 )
                 	__GETB1MN _data_buffer2_temp,37
                +
000688 93e0 0aee+STS _data_buffer2_temp + ( 38 ) , R30
                 	__PUTB1MN _data_buffer2_temp,38
                 ; 0000 0358          data_buffer2_temp[37] = data_buffer2_temp[36];
                +
00068a 91e0 0aec+LDS R30 , _data_buffer2_temp + ( 36 )
                 	__GETB1MN _data_buffer2_temp,36
                +
00068c 93e0 0aed+STS _data_buffer2_temp + ( 37 ) , R30
                 	__PUTB1MN _data_buffer2_temp,37
                 ; 0000 0359          data_buffer2_temp[36] = data_buffer2_temp[35];
                +
00068e 91e0 0aeb+LDS R30 , _data_buffer2_temp + ( 35 )
                 	__GETB1MN _data_buffer2_temp,35
                +
000690 93e0 0aec+STS _data_buffer2_temp + ( 36 ) , R30
                 	__PUTB1MN _data_buffer2_temp,36
                 ; 0000 035A          data_buffer2_temp[35] = data_buffer2_temp[34];
                +
000692 91e0 0aea+LDS R30 , _data_buffer2_temp + ( 34 )
                 	__GETB1MN _data_buffer2_temp,34
                +
000694 93e0 0aeb+STS _data_buffer2_temp + ( 35 ) , R30
                 	__PUTB1MN _data_buffer2_temp,35
                 ; 0000 035B          data_buffer2_temp[34] = data_buffer2_temp[33];
                +
000696 91e0 0ae9+LDS R30 , _data_buffer2_temp + ( 33 )
                 	__GETB1MN _data_buffer2_temp,33
                +
000698 93e0 0aea+STS _data_buffer2_temp + ( 34 ) , R30
                 	__PUTB1MN _data_buffer2_temp,34
                 ; 0000 035C          data_buffer2_temp[33] = data_buffer2_temp[32];
                +
00069a 91e0 0ae8+LDS R30 , _data_buffer2_temp + ( 32 )
                 	__GETB1MN _data_buffer2_temp,32
                +
00069c 93e0 0ae9+STS _data_buffer2_temp + ( 33 ) , R30
                 	__PUTB1MN _data_buffer2_temp,33
                 ; 0000 035D          data_buffer2_temp[32] = data_buffer2_temp[31];
                +
00069e 91e0 0ae7+LDS R30 , _data_buffer2_temp + ( 31 )
                 	__GETB1MN _data_buffer2_temp,31
                +
0006a0 93e0 0ae8+STS _data_buffer2_temp + ( 32 ) , R30
                 	__PUTB1MN _data_buffer2_temp,32
                 ; 0000 035E          data_buffer2_temp[31] = data_buffer2_temp[30];
                +
0006a2 91e0 0ae6+LDS R30 , _data_buffer2_temp + ( 30 )
                 	__GETB1MN _data_buffer2_temp,30
                +
0006a4 93e0 0ae7+STS _data_buffer2_temp + ( 31 ) , R30
                 	__PUTB1MN _data_buffer2_temp,31
                 ; 0000 035F          data_buffer2_temp[30] = data_buffer2_temp[29];
                +
0006a6 91e0 0ae5+LDS R30 , _data_buffer2_temp + ( 29 )
                 	__GETB1MN _data_buffer2_temp,29
                +
0006a8 93e0 0ae6+STS _data_buffer2_temp + ( 30 ) , R30
                 	__PUTB1MN _data_buffer2_temp,30
                 ; 0000 0360          data_buffer2_temp[29] = data_buffer2_temp[28];
                +
0006aa 91e0 0ae4+LDS R30 , _data_buffer2_temp + ( 28 )
                 	__GETB1MN _data_buffer2_temp,28
                +
0006ac 93e0 0ae5+STS _data_buffer2_temp + ( 29 ) , R30
                 	__PUTB1MN _data_buffer2_temp,29
                 ; 0000 0361          data_buffer2_temp[28] = data_buffer2_temp[27];
                +
0006ae 91e0 0ae3+LDS R30 , _data_buffer2_temp + ( 27 )
                 	__GETB1MN _data_buffer2_temp,27
                +
0006b0 93e0 0ae4+STS _data_buffer2_temp + ( 28 ) , R30
                 	__PUTB1MN _data_buffer2_temp,28
                 ; 0000 0362          data_buffer2_temp[27] = data_buffer2_temp[26];
                +
0006b2 91e0 0ae2+LDS R30 , _data_buffer2_temp + ( 26 )
                 	__GETB1MN _data_buffer2_temp,26
                +
0006b4 93e0 0ae3+STS _data_buffer2_temp + ( 27 ) , R30
                 	__PUTB1MN _data_buffer2_temp,27
                 ; 0000 0363          data_buffer2_temp[26] = data_buffer2_temp[25];
                +
0006b6 91e0 0ae1+LDS R30 , _data_buffer2_temp + ( 25 )
                 	__GETB1MN _data_buffer2_temp,25
                +
0006b8 93e0 0ae2+STS _data_buffer2_temp + ( 26 ) , R30
                 	__PUTB1MN _data_buffer2_temp,26
                 ; 0000 0364          data_buffer2_temp[25] = data_buffer2_temp[24];
                +
0006ba 91e0 0ae0+LDS R30 , _data_buffer2_temp + ( 24 )
                 	__GETB1MN _data_buffer2_temp,24
                +
0006bc 93e0 0ae1+STS _data_buffer2_temp + ( 25 ) , R30
                 	__PUTB1MN _data_buffer2_temp,25
                 ; 0000 0365          data_buffer2_temp[24] = data_buffer2_temp[23];
                +
0006be 91e0 0adf+LDS R30 , _data_buffer2_temp + ( 23 )
                 	__GETB1MN _data_buffer2_temp,23
                +
0006c0 93e0 0ae0+STS _data_buffer2_temp + ( 24 ) , R30
                 	__PUTB1MN _data_buffer2_temp,24
                 ; 0000 0366          data_buffer2_temp[23] = data_buffer2_temp[22];
                +
0006c2 91e0 0ade+LDS R30 , _data_buffer2_temp + ( 22 )
                 	__GETB1MN _data_buffer2_temp,22
                +
0006c4 93e0 0adf+STS _data_buffer2_temp + ( 23 ) , R30
                 	__PUTB1MN _data_buffer2_temp,23
                 ; 0000 0367          data_buffer2_temp[22] = data_buffer2_temp[21];
                +
0006c6 91e0 0add+LDS R30 , _data_buffer2_temp + ( 21 )
                 	__GETB1MN _data_buffer2_temp,21
                +
0006c8 93e0 0ade+STS _data_buffer2_temp + ( 22 ) , R30
                 	__PUTB1MN _data_buffer2_temp,22
                 ; 0000 0368          data_buffer2_temp[21] = data_buffer2_temp[20];
                +
0006ca 91e0 0adc+LDS R30 , _data_buffer2_temp + ( 20 )
                 	__GETB1MN _data_buffer2_temp,20
                +
0006cc 93e0 0add+STS _data_buffer2_temp + ( 21 ) , R30
                 	__PUTB1MN _data_buffer2_temp,21
                 ; 0000 0369          data_buffer2_temp[20] = data_buffer2_temp[19];
                +
0006ce 91e0 0adb+LDS R30 , _data_buffer2_temp + ( 19 )
                 	__GETB1MN _data_buffer2_temp,19
                +
0006d0 93e0 0adc+STS _data_buffer2_temp + ( 20 ) , R30
                 	__PUTB1MN _data_buffer2_temp,20
                 ; 0000 036A          data_buffer2_temp[19] = data_buffer2_temp[18];
                +
0006d2 91e0 0ada+LDS R30 , _data_buffer2_temp + ( 18 )
                 	__GETB1MN _data_buffer2_temp,18
                +
0006d4 93e0 0adb+STS _data_buffer2_temp + ( 19 ) , R30
                 	__PUTB1MN _data_buffer2_temp,19
                 ; 0000 036B          data_buffer2_temp[18] = data_buffer2_temp[17];
                +
0006d6 91e0 0ad9+LDS R30 , _data_buffer2_temp + ( 17 )
                 	__GETB1MN _data_buffer2_temp,17
                +
0006d8 93e0 0ada+STS _data_buffer2_temp + ( 18 ) , R30
                 	__PUTB1MN _data_buffer2_temp,18
                 ; 0000 036C          data_buffer2_temp[17] = data_buffer2_temp[16];
                +
0006da 91e0 0ad8+LDS R30 , _data_buffer2_temp + ( 16 )
                 	__GETB1MN _data_buffer2_temp,16
                +
0006dc 93e0 0ad9+STS _data_buffer2_temp + ( 17 ) , R30
                 	__PUTB1MN _data_buffer2_temp,17
                 ; 0000 036D          data_buffer2_temp[16] = data_buffer2_temp[15];
                +
0006de 91e0 0ad7+LDS R30 , _data_buffer2_temp + ( 15 )
                 	__GETB1MN _data_buffer2_temp,15
                +
0006e0 93e0 0ad8+STS _data_buffer2_temp + ( 16 ) , R30
                 	__PUTB1MN _data_buffer2_temp,16
                 ; 0000 036E          data_buffer2_temp[15] = data_buffer2_temp[14];
                +
0006e2 91e0 0ad6+LDS R30 , _data_buffer2_temp + ( 14 )
                 	__GETB1MN _data_buffer2_temp,14
                +
0006e4 93e0 0ad7+STS _data_buffer2_temp + ( 15 ) , R30
                 	__PUTB1MN _data_buffer2_temp,15
                 ; 0000 036F          data_buffer2_temp[14] = data_buffer2_temp[13];
                +
0006e6 91e0 0ad5+LDS R30 , _data_buffer2_temp + ( 13 )
                 	__GETB1MN _data_buffer2_temp,13
                +
0006e8 93e0 0ad6+STS _data_buffer2_temp + ( 14 ) , R30
                 	__PUTB1MN _data_buffer2_temp,14
                 ; 0000 0370          data_buffer2_temp[13] = data_buffer2_temp[12];
                +
0006ea 91e0 0ad4+LDS R30 , _data_buffer2_temp + ( 12 )
                 	__GETB1MN _data_buffer2_temp,12
                +
0006ec 93e0 0ad5+STS _data_buffer2_temp + ( 13 ) , R30
                 	__PUTB1MN _data_buffer2_temp,13
                 ; 0000 0371          data_buffer2_temp[12] = data_buffer2_temp[11];
                +
0006ee 91e0 0ad3+LDS R30 , _data_buffer2_temp + ( 11 )
                 	__GETB1MN _data_buffer2_temp,11
                +
0006f0 93e0 0ad4+STS _data_buffer2_temp + ( 12 ) , R30
                 	__PUTB1MN _data_buffer2_temp,12
                 ; 0000 0372          data_buffer2_temp[11] = data_buffer2_temp[10];
                +
0006f2 91e0 0ad2+LDS R30 , _data_buffer2_temp + ( 10 )
                 	__GETB1MN _data_buffer2_temp,10
                +
0006f4 93e0 0ad3+STS _data_buffer2_temp + ( 11 ) , R30
                 	__PUTB1MN _data_buffer2_temp,11
                 ; 0000 0373          data_buffer2_temp[10] = data_buffer2_temp[9];
                +
0006f6 91e0 0ad1+LDS R30 , _data_buffer2_temp + ( 9 )
                 	__GETB1MN _data_buffer2_temp,9
                +
0006f8 93e0 0ad2+STS _data_buffer2_temp + ( 10 ) , R30
                 	__PUTB1MN _data_buffer2_temp,10
                 ; 0000 0374          data_buffer2_temp[9] = data_buffer2_temp[8];
                +
0006fa 91e0 0ad0+LDS R30 , _data_buffer2_temp + ( 8 )
                 	__GETB1MN _data_buffer2_temp,8
                +
0006fc 93e0 0ad1+STS _data_buffer2_temp + ( 9 ) , R30
                 	__PUTB1MN _data_buffer2_temp,9
                 ; 0000 0375          data_buffer2_temp[8] = data_buffer2_temp[7];
                +
0006fe 91e0 0acf+LDS R30 , _data_buffer2_temp + ( 7 )
                 	__GETB1MN _data_buffer2_temp,7
                +
000700 93e0 0ad0+STS _data_buffer2_temp + ( 8 ) , R30
                 	__PUTB1MN _data_buffer2_temp,8
                 ; 0000 0376          data_buffer2_temp[7] = data_buffer2_temp[6];
                +
000702 91e0 0ace+LDS R30 , _data_buffer2_temp + ( 6 )
                 	__GETB1MN _data_buffer2_temp,6
                +
000704 93e0 0acf+STS _data_buffer2_temp + ( 7 ) , R30
                 	__PUTB1MN _data_buffer2_temp,7
                 ; 0000 0377          data_buffer2_temp[6] = data_buffer2_temp[5];
                +
000706 91e0 0acd+LDS R30 , _data_buffer2_temp + ( 5 )
                 	__GETB1MN _data_buffer2_temp,5
                +
000708 93e0 0ace+STS _data_buffer2_temp + ( 6 ) , R30
                 	__PUTB1MN _data_buffer2_temp,6
                 ; 0000 0378          data_buffer2_temp[5] = data_buffer2_temp[4];
                +
00070a 91e0 0acc+LDS R30 , _data_buffer2_temp + ( 4 )
                 	__GETB1MN _data_buffer2_temp,4
                +
00070c 93e0 0acd+STS _data_buffer2_temp + ( 5 ) , R30
                 	__PUTB1MN _data_buffer2_temp,5
                 ; 0000 0379          data_buffer2_temp[4] = data_buffer2_temp[3];
                +
00070e 91e0 0acb+LDS R30 , _data_buffer2_temp + ( 3 )
                 	__GETB1MN _data_buffer2_temp,3
                +
000710 93e0 0acc+STS _data_buffer2_temp + ( 4 ) , R30
                 	__PUTB1MN _data_buffer2_temp,4
                 ; 0000 037A          data_buffer2_temp[3] = data_buffer2_temp[2];
                +
000712 91e0 0aca+LDS R30 , _data_buffer2_temp + ( 2 )
                 	__GETB1MN _data_buffer2_temp,2
                +
000714 93e0 0acb+STS _data_buffer2_temp + ( 3 ) , R30
                 	__PUTB1MN _data_buffer2_temp,3
                 ; 0000 037B          data_buffer2_temp[2] = data_buffer2_temp[1];
                +
000716 91e0 0ac9+LDS R30 , _data_buffer2_temp + ( 1 )
                 	__GETB1MN _data_buffer2_temp,1
                +
000718 93e0 0aca+STS _data_buffer2_temp + ( 2 ) , R30
                 	__PUTB1MN _data_buffer2_temp,2
                 ; 0000 037C          data_buffer2_temp[1] = data_buffer2_temp[0];
00071a 91e0 0ac8 	LDS  R30,_data_buffer2_temp
                +
00071c 93e0 0ac9+STS _data_buffer2_temp + ( 1 ) , R30
                 	__PUTB1MN _data_buffer2_temp,1
                 ; 0000 037D          data_buffer2_temp[0] = data;
00071e 9300 0ac8 	STS  _data_buffer2_temp,R16
                 ; 0000 037E    }
                 _0x6E:
                 ; 0000 037F }
000720 c2fe      	RJMP _0x450
                 ; .FEND
                 ;
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 0385 {
                 ; 0000 0386 char data;
                 ; 0000 0387 while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 0388 data=rx_buffer0[rx_rd_index0++];
                 ; 0000 0389 #if RX_BUFFER_SIZE0 != 256
                 ; 0000 038A if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 038B #endif
                 ; 0000 038C #asm("cli")
                 ; 0000 038D --rx_counter0;
                 ; 0000 038E #asm("sei")
                 ; 0000 038F return data;
                 ; 0000 0390 }
                 ;#pragma used-
                 ;
                 ;// USART1 Receiver buffer
                 ;#define RX_BUFFER_SIZE1 8
                 ;char rx_buffer1[RX_BUFFER_SIZE1];
                 ;
                 ;#if RX_BUFFER_SIZE1 <= 256
                 ;unsigned char rx_wr_index1=0,rx_rd_index1=0;
                 ;#else
                 ;unsigned int rx_wr_index1=0,rx_rd_index1=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE1 < 256
                 ;unsigned char rx_counter1=0;
                 ;#else
                 ;unsigned int rx_counter1=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART1 Receiver buffer overflow
                 ;bit rx_buffer_overflow1;
                 ;
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0000 03A8 {
                 _usart1_rx_isr:
                 ; .FSTART _usart1_rx_isr
000721 940e 1aac 	CALL SUBOPT_0x0
                 ; 0000 03A9 unsigned char status;
                 ; 0000 03AA char data;
                 ; 0000 03AB status=UCSR1A;
                 ;	status -> R17
                 ;	data -> R16
000723 9110 00c8 	LDS  R17,200
                 ; 0000 03AC data=UDR1;
000725 9100 00ce 	LDS  R16,206
                 ; 0000 03AD if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000727 2fe1      	MOV  R30,R17
000728 71ec      	ANDI R30,LOW(0x1C)
000729 f4e9      	BRNE _0x73
                 ; 0000 03AE    {
                 ; 0000 03AF    rx_buffer1[rx_wr_index1++]=data;
00072a 91e0 0ba5 	LDS  R30,_rx_wr_index1
00072c 5fef      	SUBI R30,-LOW(1)
00072d 93e0 0ba5 	STS  _rx_wr_index1,R30
00072f 50e1      	SUBI R30,LOW(1)
000730 e0f0      	LDI  R31,0
000731 56e3      	SUBI R30,LOW(-_rx_buffer1)
000732 4ff4      	SBCI R31,HIGH(-_rx_buffer1)
000733 8300      	ST   Z,R16
                 ; 0000 03B0 #if RX_BUFFER_SIZE1 == 256
                 ; 0000 03B1    // special case for receiver buffer size=256
                 ; 0000 03B2    if (++rx_counter1 == 0) rx_buffer_overflow1=1;
                 ; 0000 03B3 #else
                 ; 0000 03B4    if (rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
000734 91a0 0ba5 	LDS  R26,_rx_wr_index1
000736 30a8      	CPI  R26,LOW(0x8)
000737 f419      	BRNE _0x74
000738 e0e0      	LDI  R30,LOW(0)
000739 93e0 0ba5 	STS  _rx_wr_index1,R30
                 ; 0000 03B5    if (++rx_counter1 == RX_BUFFER_SIZE1)
                 _0x74:
00073b 91a0 0ba7 	LDS  R26,_rx_counter1
00073d 5faf      	SUBI R26,-LOW(1)
00073e 93a0 0ba7 	STS  _rx_counter1,R26
000740 30a8      	CPI  R26,LOW(0x8)
000741 f429      	BRNE _0x75
                 ; 0000 03B6       {
                 ; 0000 03B7       rx_counter1=0;
000742 e0e0      	LDI  R30,LOW(0)
000743 93e0 0ba7 	STS  _rx_counter1,R30
                 ; 0000 03B8       rx_buffer_overflow1=1;
000745 9468      	SET
000746 f822      	BLD  R2,2
                 ; 0000 03B9       }
                 ; 0000 03BA #endif
                 ; 0000 03BB    }
                 _0x75:
                 ; 0000 03BC          data_buffer1_temp[91] = data_buffer1_temp[90];
                 _0x73:
                +
000747 91e0 0ac6+LDS R30 , _data_buffer1_temp + ( 90 )
                 	__GETB1MN _data_buffer1_temp,90
                +
000749 93e0 0ac7+STS _data_buffer1_temp + ( 91 ) , R30
                 	__PUTB1MN _data_buffer1_temp,91
                 ; 0000 03BD          data_buffer1_temp[90] = data_buffer1_temp[89];
                +
00074b 91e0 0ac5+LDS R30 , _data_buffer1_temp + ( 89 )
                 	__GETB1MN _data_buffer1_temp,89
                +
00074d 93e0 0ac6+STS _data_buffer1_temp + ( 90 ) , R30
                 	__PUTB1MN _data_buffer1_temp,90
                 ; 0000 03BE          data_buffer1_temp[89] = data_buffer1_temp[88];
                +
00074f 91e0 0ac4+LDS R30 , _data_buffer1_temp + ( 88 )
                 	__GETB1MN _data_buffer1_temp,88
                +
000751 93e0 0ac5+STS _data_buffer1_temp + ( 89 ) , R30
                 	__PUTB1MN _data_buffer1_temp,89
                 ; 0000 03BF          data_buffer1_temp[88] = data_buffer1_temp[87];
                +
000753 91e0 0ac3+LDS R30 , _data_buffer1_temp + ( 87 )
                 	__GETB1MN _data_buffer1_temp,87
                +
000755 93e0 0ac4+STS _data_buffer1_temp + ( 88 ) , R30
                 	__PUTB1MN _data_buffer1_temp,88
                 ; 0000 03C0          data_buffer1_temp[87] = data_buffer1_temp[86];
                +
000757 91e0 0ac2+LDS R30 , _data_buffer1_temp + ( 86 )
                 	__GETB1MN _data_buffer1_temp,86
                +
000759 93e0 0ac3+STS _data_buffer1_temp + ( 87 ) , R30
                 	__PUTB1MN _data_buffer1_temp,87
                 ; 0000 03C1          data_buffer1_temp[86] = data_buffer1_temp[85];
                +
00075b 91e0 0ac1+LDS R30 , _data_buffer1_temp + ( 85 )
                 	__GETB1MN _data_buffer1_temp,85
                +
00075d 93e0 0ac2+STS _data_buffer1_temp + ( 86 ) , R30
                 	__PUTB1MN _data_buffer1_temp,86
                 ; 0000 03C2          data_buffer1_temp[85] = data_buffer1_temp[84];
                +
00075f 91e0 0ac0+LDS R30 , _data_buffer1_temp + ( 84 )
                 	__GETB1MN _data_buffer1_temp,84
                +
000761 93e0 0ac1+STS _data_buffer1_temp + ( 85 ) , R30
                 	__PUTB1MN _data_buffer1_temp,85
                 ; 0000 03C3          data_buffer1_temp[84] = data_buffer1_temp[83];
                +
000763 91e0 0abf+LDS R30 , _data_buffer1_temp + ( 83 )
                 	__GETB1MN _data_buffer1_temp,83
                +
000765 93e0 0ac0+STS _data_buffer1_temp + ( 84 ) , R30
                 	__PUTB1MN _data_buffer1_temp,84
                 ; 0000 03C4          data_buffer1_temp[83] = data_buffer1_temp[82];
                +
000767 91e0 0abe+LDS R30 , _data_buffer1_temp + ( 82 )
                 	__GETB1MN _data_buffer1_temp,82
                +
000769 93e0 0abf+STS _data_buffer1_temp + ( 83 ) , R30
                 	__PUTB1MN _data_buffer1_temp,83
                 ; 0000 03C5          data_buffer1_temp[82] = data_buffer1_temp[81];
                +
00076b 91e0 0abd+LDS R30 , _data_buffer1_temp + ( 81 )
                 	__GETB1MN _data_buffer1_temp,81
                +
00076d 93e0 0abe+STS _data_buffer1_temp + ( 82 ) , R30
                 	__PUTB1MN _data_buffer1_temp,82
                 ; 0000 03C6          data_buffer1_temp[81] = data_buffer1_temp[80];
                +
00076f 91e0 0abc+LDS R30 , _data_buffer1_temp + ( 80 )
                 	__GETB1MN _data_buffer1_temp,80
                +
000771 93e0 0abd+STS _data_buffer1_temp + ( 81 ) , R30
                 	__PUTB1MN _data_buffer1_temp,81
                 ; 0000 03C7          data_buffer1_temp[80] = data_buffer1_temp[79];
                +
000773 91e0 0abb+LDS R30 , _data_buffer1_temp + ( 79 )
                 	__GETB1MN _data_buffer1_temp,79
                +
000775 93e0 0abc+STS _data_buffer1_temp + ( 80 ) , R30
                 	__PUTB1MN _data_buffer1_temp,80
                 ; 0000 03C8          data_buffer1_temp[79] = data_buffer1_temp[78];
                +
000777 91e0 0aba+LDS R30 , _data_buffer1_temp + ( 78 )
                 	__GETB1MN _data_buffer1_temp,78
                +
000779 93e0 0abb+STS _data_buffer1_temp + ( 79 ) , R30
                 	__PUTB1MN _data_buffer1_temp,79
                 ; 0000 03C9          data_buffer1_temp[78] = data_buffer1_temp[77];
                +
00077b 91e0 0ab9+LDS R30 , _data_buffer1_temp + ( 77 )
                 	__GETB1MN _data_buffer1_temp,77
                +
00077d 93e0 0aba+STS _data_buffer1_temp + ( 78 ) , R30
                 	__PUTB1MN _data_buffer1_temp,78
                 ; 0000 03CA          data_buffer1_temp[77] = data_buffer1_temp[76];
                +
00077f 91e0 0ab8+LDS R30 , _data_buffer1_temp + ( 76 )
                 	__GETB1MN _data_buffer1_temp,76
                +
000781 93e0 0ab9+STS _data_buffer1_temp + ( 77 ) , R30
                 	__PUTB1MN _data_buffer1_temp,77
                 ; 0000 03CB          data_buffer1_temp[76] = data_buffer1_temp[75];
                +
000783 91e0 0ab7+LDS R30 , _data_buffer1_temp + ( 75 )
                 	__GETB1MN _data_buffer1_temp,75
                +
000785 93e0 0ab8+STS _data_buffer1_temp + ( 76 ) , R30
                 	__PUTB1MN _data_buffer1_temp,76
                 ; 0000 03CC          data_buffer1_temp[75] = data_buffer1_temp[74];
                +
000787 91e0 0ab6+LDS R30 , _data_buffer1_temp + ( 74 )
                 	__GETB1MN _data_buffer1_temp,74
                +
000789 93e0 0ab7+STS _data_buffer1_temp + ( 75 ) , R30
                 	__PUTB1MN _data_buffer1_temp,75
                 ; 0000 03CD          data_buffer1_temp[74] = data_buffer1_temp[73];
                +
00078b 91e0 0ab5+LDS R30 , _data_buffer1_temp + ( 73 )
                 	__GETB1MN _data_buffer1_temp,73
                +
00078d 93e0 0ab6+STS _data_buffer1_temp + ( 74 ) , R30
                 	__PUTB1MN _data_buffer1_temp,74
                 ; 0000 03CE          data_buffer1_temp[73] = data_buffer1_temp[72];
                +
00078f 91e0 0ab4+LDS R30 , _data_buffer1_temp + ( 72 )
                 	__GETB1MN _data_buffer1_temp,72
                +
000791 93e0 0ab5+STS _data_buffer1_temp + ( 73 ) , R30
                 	__PUTB1MN _data_buffer1_temp,73
                 ; 0000 03CF          data_buffer1_temp[72] = data_buffer1_temp[71];
                +
000793 91e0 0ab3+LDS R30 , _data_buffer1_temp + ( 71 )
                 	__GETB1MN _data_buffer1_temp,71
                +
000795 93e0 0ab4+STS _data_buffer1_temp + ( 72 ) , R30
                 	__PUTB1MN _data_buffer1_temp,72
                 ; 0000 03D0          data_buffer1_temp[71] = data_buffer1_temp[70];
                +
000797 91e0 0ab2+LDS R30 , _data_buffer1_temp + ( 70 )
                 	__GETB1MN _data_buffer1_temp,70
                +
000799 93e0 0ab3+STS _data_buffer1_temp + ( 71 ) , R30
                 	__PUTB1MN _data_buffer1_temp,71
                 ; 0000 03D1          data_buffer1_temp[70] = data_buffer1_temp[69];
                +
00079b 91e0 0ab1+LDS R30 , _data_buffer1_temp + ( 69 )
                 	__GETB1MN _data_buffer1_temp,69
                +
00079d 93e0 0ab2+STS _data_buffer1_temp + ( 70 ) , R30
                 	__PUTB1MN _data_buffer1_temp,70
                 ; 0000 03D2          data_buffer1_temp[69] = data_buffer1_temp[68];
                +
00079f 91e0 0ab0+LDS R30 , _data_buffer1_temp + ( 68 )
                 	__GETB1MN _data_buffer1_temp,68
                +
0007a1 93e0 0ab1+STS _data_buffer1_temp + ( 69 ) , R30
                 	__PUTB1MN _data_buffer1_temp,69
                 ; 0000 03D3          data_buffer1_temp[68] = data_buffer1_temp[67];
                +
0007a3 91e0 0aaf+LDS R30 , _data_buffer1_temp + ( 67 )
                 	__GETB1MN _data_buffer1_temp,67
                +
0007a5 93e0 0ab0+STS _data_buffer1_temp + ( 68 ) , R30
                 	__PUTB1MN _data_buffer1_temp,68
                 ; 0000 03D4          data_buffer1_temp[67] = data_buffer1_temp[66];
                +
0007a7 91e0 0aae+LDS R30 , _data_buffer1_temp + ( 66 )
                 	__GETB1MN _data_buffer1_temp,66
                +
0007a9 93e0 0aaf+STS _data_buffer1_temp + ( 67 ) , R30
                 	__PUTB1MN _data_buffer1_temp,67
                 ; 0000 03D5          data_buffer1_temp[66] = data_buffer1_temp[65];
                +
0007ab 91e0 0aad+LDS R30 , _data_buffer1_temp + ( 65 )
                 	__GETB1MN _data_buffer1_temp,65
                +
0007ad 93e0 0aae+STS _data_buffer1_temp + ( 66 ) , R30
                 	__PUTB1MN _data_buffer1_temp,66
                 ; 0000 03D6          data_buffer1_temp[65] = data_buffer1_temp[64];
                +
0007af 91e0 0aac+LDS R30 , _data_buffer1_temp + ( 64 )
                 	__GETB1MN _data_buffer1_temp,64
                +
0007b1 93e0 0aad+STS _data_buffer1_temp + ( 65 ) , R30
                 	__PUTB1MN _data_buffer1_temp,65
                 ; 0000 03D7          data_buffer1_temp[64] = data_buffer1_temp[63];
                +
0007b3 91e0 0aab+LDS R30 , _data_buffer1_temp + ( 63 )
                 	__GETB1MN _data_buffer1_temp,63
                +
0007b5 93e0 0aac+STS _data_buffer1_temp + ( 64 ) , R30
                 	__PUTB1MN _data_buffer1_temp,64
                 ; 0000 03D8          data_buffer1_temp[63] = data_buffer1_temp[62];
                +
0007b7 91e0 0aaa+LDS R30 , _data_buffer1_temp + ( 62 )
                 	__GETB1MN _data_buffer1_temp,62
                +
0007b9 93e0 0aab+STS _data_buffer1_temp + ( 63 ) , R30
                 	__PUTB1MN _data_buffer1_temp,63
                 ; 0000 03D9          data_buffer1_temp[62] = data_buffer1_temp[61];
                +
0007bb 91e0 0aa9+LDS R30 , _data_buffer1_temp + ( 61 )
                 	__GETB1MN _data_buffer1_temp,61
                +
0007bd 93e0 0aaa+STS _data_buffer1_temp + ( 62 ) , R30
                 	__PUTB1MN _data_buffer1_temp,62
                 ; 0000 03DA          data_buffer1_temp[61] = data_buffer1_temp[60];
                +
0007bf 91e0 0aa8+LDS R30 , _data_buffer1_temp + ( 60 )
                 	__GETB1MN _data_buffer1_temp,60
                +
0007c1 93e0 0aa9+STS _data_buffer1_temp + ( 61 ) , R30
                 	__PUTB1MN _data_buffer1_temp,61
                 ; 0000 03DB          data_buffer1_temp[60] = data_buffer1_temp[59];
                +
0007c3 91e0 0aa7+LDS R30 , _data_buffer1_temp + ( 59 )
                 	__GETB1MN _data_buffer1_temp,59
                +
0007c5 93e0 0aa8+STS _data_buffer1_temp + ( 60 ) , R30
                 	__PUTB1MN _data_buffer1_temp,60
                 ; 0000 03DC          data_buffer1_temp[59] = data_buffer1_temp[58];
                +
0007c7 91e0 0aa6+LDS R30 , _data_buffer1_temp + ( 58 )
                 	__GETB1MN _data_buffer1_temp,58
                +
0007c9 93e0 0aa7+STS _data_buffer1_temp + ( 59 ) , R30
                 	__PUTB1MN _data_buffer1_temp,59
                 ; 0000 03DD          data_buffer1_temp[58] = data_buffer1_temp[57];
                +
0007cb 91e0 0aa5+LDS R30 , _data_buffer1_temp + ( 57 )
                 	__GETB1MN _data_buffer1_temp,57
                +
0007cd 93e0 0aa6+STS _data_buffer1_temp + ( 58 ) , R30
                 	__PUTB1MN _data_buffer1_temp,58
                 ; 0000 03DE          data_buffer1_temp[57] = data_buffer1_temp[56];
                +
0007cf 91e0 0aa4+LDS R30 , _data_buffer1_temp + ( 56 )
                 	__GETB1MN _data_buffer1_temp,56
                +
0007d1 93e0 0aa5+STS _data_buffer1_temp + ( 57 ) , R30
                 	__PUTB1MN _data_buffer1_temp,57
                 ; 0000 03DF          data_buffer1_temp[56] = data_buffer1_temp[55];
                +
0007d3 91e0 0aa3+LDS R30 , _data_buffer1_temp + ( 55 )
                 	__GETB1MN _data_buffer1_temp,55
                +
0007d5 93e0 0aa4+STS _data_buffer1_temp + ( 56 ) , R30
                 	__PUTB1MN _data_buffer1_temp,56
                 ; 0000 03E0          data_buffer1_temp[55] = data_buffer1_temp[54];
                +
0007d7 91e0 0aa2+LDS R30 , _data_buffer1_temp + ( 54 )
                 	__GETB1MN _data_buffer1_temp,54
                +
0007d9 93e0 0aa3+STS _data_buffer1_temp + ( 55 ) , R30
                 	__PUTB1MN _data_buffer1_temp,55
                 ; 0000 03E1          data_buffer1_temp[54] = data_buffer1_temp[53];
                +
0007db 91e0 0aa1+LDS R30 , _data_buffer1_temp + ( 53 )
                 	__GETB1MN _data_buffer1_temp,53
                +
0007dd 93e0 0aa2+STS _data_buffer1_temp + ( 54 ) , R30
                 	__PUTB1MN _data_buffer1_temp,54
                 ; 0000 03E2          data_buffer1_temp[53] = data_buffer1_temp[52];
                +
0007df 91e0 0aa0+LDS R30 , _data_buffer1_temp + ( 52 )
                 	__GETB1MN _data_buffer1_temp,52
                +
0007e1 93e0 0aa1+STS _data_buffer1_temp + ( 53 ) , R30
                 	__PUTB1MN _data_buffer1_temp,53
                 ; 0000 03E3          data_buffer1_temp[52] = data_buffer1_temp[51];
                +
0007e3 91e0 0a9f+LDS R30 , _data_buffer1_temp + ( 51 )
                 	__GETB1MN _data_buffer1_temp,51
                +
0007e5 93e0 0aa0+STS _data_buffer1_temp + ( 52 ) , R30
                 	__PUTB1MN _data_buffer1_temp,52
                 ; 0000 03E4          data_buffer1_temp[51] = data_buffer1_temp[50];
                +
0007e7 91e0 0a9e+LDS R30 , _data_buffer1_temp + ( 50 )
                 	__GETB1MN _data_buffer1_temp,50
                +
0007e9 93e0 0a9f+STS _data_buffer1_temp + ( 51 ) , R30
                 	__PUTB1MN _data_buffer1_temp,51
                 ; 0000 03E5          data_buffer1_temp[50] = data_buffer1_temp[49];
                +
0007eb 91e0 0a9d+LDS R30 , _data_buffer1_temp + ( 49 )
                 	__GETB1MN _data_buffer1_temp,49
                +
0007ed 93e0 0a9e+STS _data_buffer1_temp + ( 50 ) , R30
                 	__PUTB1MN _data_buffer1_temp,50
                 ; 0000 03E6          data_buffer1_temp[49] = data_buffer1_temp[48];
                +
0007ef 91e0 0a9c+LDS R30 , _data_buffer1_temp + ( 48 )
                 	__GETB1MN _data_buffer1_temp,48
                +
0007f1 93e0 0a9d+STS _data_buffer1_temp + ( 49 ) , R30
                 	__PUTB1MN _data_buffer1_temp,49
                 ; 0000 03E7          data_buffer1_temp[48] = data_buffer1_temp[47];
                +
0007f3 91e0 0a9b+LDS R30 , _data_buffer1_temp + ( 47 )
                 	__GETB1MN _data_buffer1_temp,47
                +
0007f5 93e0 0a9c+STS _data_buffer1_temp + ( 48 ) , R30
                 	__PUTB1MN _data_buffer1_temp,48
                 ; 0000 03E8          data_buffer1_temp[47] = data_buffer1_temp[46];
                +
0007f7 91e0 0a9a+LDS R30 , _data_buffer1_temp + ( 46 )
                 	__GETB1MN _data_buffer1_temp,46
                +
0007f9 93e0 0a9b+STS _data_buffer1_temp + ( 47 ) , R30
                 	__PUTB1MN _data_buffer1_temp,47
                 ; 0000 03E9          data_buffer1_temp[46] = data_buffer1_temp[45];
                +
0007fb 91e0 0a99+LDS R30 , _data_buffer1_temp + ( 45 )
                 	__GETB1MN _data_buffer1_temp,45
                +
0007fd 93e0 0a9a+STS _data_buffer1_temp + ( 46 ) , R30
                 	__PUTB1MN _data_buffer1_temp,46
                 ; 0000 03EA          data_buffer1_temp[45] = data_buffer1_temp[44];
                +
0007ff 91e0 0a98+LDS R30 , _data_buffer1_temp + ( 44 )
                 	__GETB1MN _data_buffer1_temp,44
                +
000801 93e0 0a99+STS _data_buffer1_temp + ( 45 ) , R30
                 	__PUTB1MN _data_buffer1_temp,45
                 ; 0000 03EB          data_buffer1_temp[44] = data_buffer1_temp[43];
                +
000803 91e0 0a97+LDS R30 , _data_buffer1_temp + ( 43 )
                 	__GETB1MN _data_buffer1_temp,43
                +
000805 93e0 0a98+STS _data_buffer1_temp + ( 44 ) , R30
                 	__PUTB1MN _data_buffer1_temp,44
                 ; 0000 03EC          data_buffer1_temp[43] = data_buffer1_temp[42];
                +
000807 91e0 0a96+LDS R30 , _data_buffer1_temp + ( 42 )
                 	__GETB1MN _data_buffer1_temp,42
                +
000809 93e0 0a97+STS _data_buffer1_temp + ( 43 ) , R30
                 	__PUTB1MN _data_buffer1_temp,43
                 ; 0000 03ED          data_buffer1_temp[42] = data_buffer1_temp[41];
                +
00080b 91e0 0a95+LDS R30 , _data_buffer1_temp + ( 41 )
                 	__GETB1MN _data_buffer1_temp,41
                +
00080d 93e0 0a96+STS _data_buffer1_temp + ( 42 ) , R30
                 	__PUTB1MN _data_buffer1_temp,42
                 ; 0000 03EE          data_buffer1_temp[41] = data_buffer1_temp[40];
                +
00080f 91e0 0a94+LDS R30 , _data_buffer1_temp + ( 40 )
                 	__GETB1MN _data_buffer1_temp,40
                +
000811 93e0 0a95+STS _data_buffer1_temp + ( 41 ) , R30
                 	__PUTB1MN _data_buffer1_temp,41
                 ; 0000 03EF          data_buffer1_temp[40] = data_buffer1_temp[39];
                +
000813 91e0 0a93+LDS R30 , _data_buffer1_temp + ( 39 )
                 	__GETB1MN _data_buffer1_temp,39
                +
000815 93e0 0a94+STS _data_buffer1_temp + ( 40 ) , R30
                 	__PUTB1MN _data_buffer1_temp,40
                 ; 0000 03F0          data_buffer1_temp[39] = data_buffer1_temp[38];
                +
000817 91e0 0a92+LDS R30 , _data_buffer1_temp + ( 38 )
                 	__GETB1MN _data_buffer1_temp,38
                +
000819 93e0 0a93+STS _data_buffer1_temp + ( 39 ) , R30
                 	__PUTB1MN _data_buffer1_temp,39
                 ; 0000 03F1          data_buffer1_temp[38] = data_buffer1_temp[37];
                +
00081b 91e0 0a91+LDS R30 , _data_buffer1_temp + ( 37 )
                 	__GETB1MN _data_buffer1_temp,37
                +
00081d 93e0 0a92+STS _data_buffer1_temp + ( 38 ) , R30
                 	__PUTB1MN _data_buffer1_temp,38
                 ; 0000 03F2          data_buffer1_temp[37] = data_buffer1_temp[36];
                +
00081f 91e0 0a90+LDS R30 , _data_buffer1_temp + ( 36 )
                 	__GETB1MN _data_buffer1_temp,36
                +
000821 93e0 0a91+STS _data_buffer1_temp + ( 37 ) , R30
                 	__PUTB1MN _data_buffer1_temp,37
                 ; 0000 03F3          data_buffer1_temp[36] = data_buffer1_temp[35];
                +
000823 91e0 0a8f+LDS R30 , _data_buffer1_temp + ( 35 )
                 	__GETB1MN _data_buffer1_temp,35
                +
000825 93e0 0a90+STS _data_buffer1_temp + ( 36 ) , R30
                 	__PUTB1MN _data_buffer1_temp,36
                 ; 0000 03F4          data_buffer1_temp[35] = data_buffer1_temp[34];
                +
000827 91e0 0a8e+LDS R30 , _data_buffer1_temp + ( 34 )
                 	__GETB1MN _data_buffer1_temp,34
                +
000829 93e0 0a8f+STS _data_buffer1_temp + ( 35 ) , R30
                 	__PUTB1MN _data_buffer1_temp,35
                 ; 0000 03F5          data_buffer1_temp[34] = data_buffer1_temp[33];
                +
00082b 91e0 0a8d+LDS R30 , _data_buffer1_temp + ( 33 )
                 	__GETB1MN _data_buffer1_temp,33
                +
00082d 93e0 0a8e+STS _data_buffer1_temp + ( 34 ) , R30
                 	__PUTB1MN _data_buffer1_temp,34
                 ; 0000 03F6          data_buffer1_temp[33] = data_buffer1_temp[32];
                +
00082f 91e0 0a8c+LDS R30 , _data_buffer1_temp + ( 32 )
                 	__GETB1MN _data_buffer1_temp,32
                +
000831 93e0 0a8d+STS _data_buffer1_temp + ( 33 ) , R30
                 	__PUTB1MN _data_buffer1_temp,33
                 ; 0000 03F7          data_buffer1_temp[32] = data_buffer1_temp[31];
                +
000833 91e0 0a8b+LDS R30 , _data_buffer1_temp + ( 31 )
                 	__GETB1MN _data_buffer1_temp,31
                +
000835 93e0 0a8c+STS _data_buffer1_temp + ( 32 ) , R30
                 	__PUTB1MN _data_buffer1_temp,32
                 ; 0000 03F8          data_buffer1_temp[31] = data_buffer1_temp[30];
                +
000837 91e0 0a8a+LDS R30 , _data_buffer1_temp + ( 30 )
                 	__GETB1MN _data_buffer1_temp,30
                +
000839 93e0 0a8b+STS _data_buffer1_temp + ( 31 ) , R30
                 	__PUTB1MN _data_buffer1_temp,31
                 ; 0000 03F9          data_buffer1_temp[30] = data_buffer1_temp[29];
                +
00083b 91e0 0a89+LDS R30 , _data_buffer1_temp + ( 29 )
                 	__GETB1MN _data_buffer1_temp,29
                +
00083d 93e0 0a8a+STS _data_buffer1_temp + ( 30 ) , R30
                 	__PUTB1MN _data_buffer1_temp,30
                 ; 0000 03FA          data_buffer1_temp[29] = data_buffer1_temp[28];
                +
00083f 91e0 0a88+LDS R30 , _data_buffer1_temp + ( 28 )
                 	__GETB1MN _data_buffer1_temp,28
                +
000841 93e0 0a89+STS _data_buffer1_temp + ( 29 ) , R30
                 	__PUTB1MN _data_buffer1_temp,29
                 ; 0000 03FB          data_buffer1_temp[28] = data_buffer1_temp[27];
                +
000843 91e0 0a87+LDS R30 , _data_buffer1_temp + ( 27 )
                 	__GETB1MN _data_buffer1_temp,27
                +
000845 93e0 0a88+STS _data_buffer1_temp + ( 28 ) , R30
                 	__PUTB1MN _data_buffer1_temp,28
                 ; 0000 03FC          data_buffer1_temp[27] = data_buffer1_temp[26];
                +
000847 91e0 0a86+LDS R30 , _data_buffer1_temp + ( 26 )
                 	__GETB1MN _data_buffer1_temp,26
                +
000849 93e0 0a87+STS _data_buffer1_temp + ( 27 ) , R30
                 	__PUTB1MN _data_buffer1_temp,27
                 ; 0000 03FD          data_buffer1_temp[26] = data_buffer1_temp[25];
                +
00084b 91e0 0a85+LDS R30 , _data_buffer1_temp + ( 25 )
                 	__GETB1MN _data_buffer1_temp,25
                +
00084d 93e0 0a86+STS _data_buffer1_temp + ( 26 ) , R30
                 	__PUTB1MN _data_buffer1_temp,26
                 ; 0000 03FE          data_buffer1_temp[25] = data_buffer1_temp[24];
                +
00084f 91e0 0a84+LDS R30 , _data_buffer1_temp + ( 24 )
                 	__GETB1MN _data_buffer1_temp,24
                +
000851 93e0 0a85+STS _data_buffer1_temp + ( 25 ) , R30
                 	__PUTB1MN _data_buffer1_temp,25
                 ; 0000 03FF          data_buffer1_temp[24] = data_buffer1_temp[23];
                +
000853 91e0 0a83+LDS R30 , _data_buffer1_temp + ( 23 )
                 	__GETB1MN _data_buffer1_temp,23
                +
000855 93e0 0a84+STS _data_buffer1_temp + ( 24 ) , R30
                 	__PUTB1MN _data_buffer1_temp,24
                 ; 0000 0400          data_buffer1_temp[23] = data_buffer1_temp[22];
                +
000857 91e0 0a82+LDS R30 , _data_buffer1_temp + ( 22 )
                 	__GETB1MN _data_buffer1_temp,22
                +
000859 93e0 0a83+STS _data_buffer1_temp + ( 23 ) , R30
                 	__PUTB1MN _data_buffer1_temp,23
                 ; 0000 0401          data_buffer1_temp[22] = data_buffer1_temp[21];
                +
00085b 91e0 0a81+LDS R30 , _data_buffer1_temp + ( 21 )
                 	__GETB1MN _data_buffer1_temp,21
                +
00085d 93e0 0a82+STS _data_buffer1_temp + ( 22 ) , R30
                 	__PUTB1MN _data_buffer1_temp,22
                 ; 0000 0402          data_buffer1_temp[21] = data_buffer1_temp[20];
                +
00085f 91e0 0a80+LDS R30 , _data_buffer1_temp + ( 20 )
                 	__GETB1MN _data_buffer1_temp,20
                +
000861 93e0 0a81+STS _data_buffer1_temp + ( 21 ) , R30
                 	__PUTB1MN _data_buffer1_temp,21
                 ; 0000 0403          data_buffer1_temp[20] = data_buffer1_temp[19];
                +
000863 91e0 0a7f+LDS R30 , _data_buffer1_temp + ( 19 )
                 	__GETB1MN _data_buffer1_temp,19
                +
000865 93e0 0a80+STS _data_buffer1_temp + ( 20 ) , R30
                 	__PUTB1MN _data_buffer1_temp,20
                 ; 0000 0404          data_buffer1_temp[19] = data_buffer1_temp[18];
                +
000867 91e0 0a7e+LDS R30 , _data_buffer1_temp + ( 18 )
                 	__GETB1MN _data_buffer1_temp,18
                +
000869 93e0 0a7f+STS _data_buffer1_temp + ( 19 ) , R30
                 	__PUTB1MN _data_buffer1_temp,19
                 ; 0000 0405          data_buffer1_temp[18] = data_buffer1_temp[17];
                +
00086b 91e0 0a7d+LDS R30 , _data_buffer1_temp + ( 17 )
                 	__GETB1MN _data_buffer1_temp,17
                +
00086d 93e0 0a7e+STS _data_buffer1_temp + ( 18 ) , R30
                 	__PUTB1MN _data_buffer1_temp,18
                 ; 0000 0406          data_buffer1_temp[17] = data_buffer1_temp[16];
                +
00086f 91e0 0a7c+LDS R30 , _data_buffer1_temp + ( 16 )
                 	__GETB1MN _data_buffer1_temp,16
                +
000871 93e0 0a7d+STS _data_buffer1_temp + ( 17 ) , R30
                 	__PUTB1MN _data_buffer1_temp,17
                 ; 0000 0407          data_buffer1_temp[16] = data_buffer1_temp[15];
                +
000873 91e0 0a7b+LDS R30 , _data_buffer1_temp + ( 15 )
                 	__GETB1MN _data_buffer1_temp,15
                +
000875 93e0 0a7c+STS _data_buffer1_temp + ( 16 ) , R30
                 	__PUTB1MN _data_buffer1_temp,16
                 ; 0000 0408          data_buffer1_temp[15] = data_buffer1_temp[14];
                +
000877 91e0 0a7a+LDS R30 , _data_buffer1_temp + ( 14 )
                 	__GETB1MN _data_buffer1_temp,14
                +
000879 93e0 0a7b+STS _data_buffer1_temp + ( 15 ) , R30
                 	__PUTB1MN _data_buffer1_temp,15
                 ; 0000 0409          data_buffer1_temp[14] = data_buffer1_temp[13];
                +
00087b 91e0 0a79+LDS R30 , _data_buffer1_temp + ( 13 )
                 	__GETB1MN _data_buffer1_temp,13
                +
00087d 93e0 0a7a+STS _data_buffer1_temp + ( 14 ) , R30
                 	__PUTB1MN _data_buffer1_temp,14
                 ; 0000 040A          data_buffer1_temp[13] = data_buffer1_temp[12];
                +
00087f 91e0 0a78+LDS R30 , _data_buffer1_temp + ( 12 )
                 	__GETB1MN _data_buffer1_temp,12
                +
000881 93e0 0a79+STS _data_buffer1_temp + ( 13 ) , R30
                 	__PUTB1MN _data_buffer1_temp,13
                 ; 0000 040B          data_buffer1_temp[12] = data_buffer1_temp[11];
                +
000883 91e0 0a77+LDS R30 , _data_buffer1_temp + ( 11 )
                 	__GETB1MN _data_buffer1_temp,11
                +
000885 93e0 0a78+STS _data_buffer1_temp + ( 12 ) , R30
                 	__PUTB1MN _data_buffer1_temp,12
                 ; 0000 040C          data_buffer1_temp[11] = data_buffer1_temp[10];
                +
000887 91e0 0a76+LDS R30 , _data_buffer1_temp + ( 10 )
                 	__GETB1MN _data_buffer1_temp,10
                +
000889 93e0 0a77+STS _data_buffer1_temp + ( 11 ) , R30
                 	__PUTB1MN _data_buffer1_temp,11
                 ; 0000 040D          data_buffer1_temp[10] = data_buffer1_temp[9];
                +
00088b 91e0 0a75+LDS R30 , _data_buffer1_temp + ( 9 )
                 	__GETB1MN _data_buffer1_temp,9
                +
00088d 93e0 0a76+STS _data_buffer1_temp + ( 10 ) , R30
                 	__PUTB1MN _data_buffer1_temp,10
                 ; 0000 040E          data_buffer1_temp[9] = data_buffer1_temp[8];
                +
00088f 91e0 0a74+LDS R30 , _data_buffer1_temp + ( 8 )
                 	__GETB1MN _data_buffer1_temp,8
                +
000891 93e0 0a75+STS _data_buffer1_temp + ( 9 ) , R30
                 	__PUTB1MN _data_buffer1_temp,9
                 ; 0000 040F          data_buffer1_temp[8] = data_buffer1_temp[7];
                +
000893 91e0 0a73+LDS R30 , _data_buffer1_temp + ( 7 )
                 	__GETB1MN _data_buffer1_temp,7
                +
000895 93e0 0a74+STS _data_buffer1_temp + ( 8 ) , R30
                 	__PUTB1MN _data_buffer1_temp,8
                 ; 0000 0410          data_buffer1_temp[7] = data_buffer1_temp[6];
                +
000897 91e0 0a72+LDS R30 , _data_buffer1_temp + ( 6 )
                 	__GETB1MN _data_buffer1_temp,6
                +
000899 93e0 0a73+STS _data_buffer1_temp + ( 7 ) , R30
                 	__PUTB1MN _data_buffer1_temp,7
                 ; 0000 0411          data_buffer1_temp[6] = data_buffer1_temp[5];
                +
00089b 91e0 0a71+LDS R30 , _data_buffer1_temp + ( 5 )
                 	__GETB1MN _data_buffer1_temp,5
                +
00089d 93e0 0a72+STS _data_buffer1_temp + ( 6 ) , R30
                 	__PUTB1MN _data_buffer1_temp,6
                 ; 0000 0412          data_buffer1_temp[5] = data_buffer1_temp[4];
                +
00089f 91e0 0a70+LDS R30 , _data_buffer1_temp + ( 4 )
                 	__GETB1MN _data_buffer1_temp,4
                +
0008a1 93e0 0a71+STS _data_buffer1_temp + ( 5 ) , R30
                 	__PUTB1MN _data_buffer1_temp,5
                 ; 0000 0413          data_buffer1_temp[4] = data_buffer1_temp[3];
                +
0008a3 91e0 0a6f+LDS R30 , _data_buffer1_temp + ( 3 )
                 	__GETB1MN _data_buffer1_temp,3
                +
0008a5 93e0 0a70+STS _data_buffer1_temp + ( 4 ) , R30
                 	__PUTB1MN _data_buffer1_temp,4
                 ; 0000 0414          data_buffer1_temp[3] = data_buffer1_temp[2];
                +
0008a7 91e0 0a6e+LDS R30 , _data_buffer1_temp + ( 2 )
                 	__GETB1MN _data_buffer1_temp,2
                +
0008a9 93e0 0a6f+STS _data_buffer1_temp + ( 3 ) , R30
                 	__PUTB1MN _data_buffer1_temp,3
                 ; 0000 0415          data_buffer1_temp[2] = data_buffer1_temp[1];
                +
0008ab 91e0 0a6d+LDS R30 , _data_buffer1_temp + ( 1 )
                 	__GETB1MN _data_buffer1_temp,1
                +
0008ad 93e0 0a6e+STS _data_buffer1_temp + ( 2 ) , R30
                 	__PUTB1MN _data_buffer1_temp,2
                 ; 0000 0416          data_buffer1_temp[1] = data_buffer1_temp[0];
0008af 91e0 0a6c 	LDS  R30,_data_buffer1_temp
                +
0008b1 93e0 0a6d+STS _data_buffer1_temp + ( 1 ) , R30
                 	__PUTB1MN _data_buffer1_temp,1
                 ; 0000 0417          data_buffer1_temp[0] = data;
0008b3 9300 0a6c 	STS  _data_buffer1_temp,R16
                 ; 0000 0418 
                 ; 0000 0419    //¸µÅ© È®ÀÎ
                 ; 0000 041A    if((data_buffer1_temp[7] == 0x00)&&(data_buffer1_temp[6] == 0xf1)&&(data_buffer1_temp[5] == 0x20)&&(data_buffer1_temp ...
                +
0008b5 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
0008b7 30a0      	CPI  R26,LOW(0x0)
0008b8 f4c1      	BRNE _0x77
                +
0008b9 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
0008bb 3fa1      	CPI  R26,LOW(0xF1)
0008bc f4a1      	BRNE _0x77
                +
0008bd 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
0008bf 32a0      	CPI  R26,LOW(0x20)
0008c0 f481      	BRNE _0x77
                +
0008c1 91a0 0a70+LDS R26 , _data_buffer1_temp + ( 4 )
                 	__GETB2MN _data_buffer1_temp,4
0008c3 3cab      	CPI  R26,LOW(0xCB)
0008c4 f461      	BRNE _0x77
                +
0008c5 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
0008c7 32a4      	CPI  R26,LOW(0x24)
0008c8 f441      	BRNE _0x77
                +
0008c9 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
0008cb 30a0      	CPI  R26,LOW(0x0)
0008cc f421      	BRNE _0x77
0008cd 91a0 0a6c 	LDS  R26,_data_buffer1_temp
0008cf 30a0      	CPI  R26,LOW(0x0)
0008d0 f009      	BREQ _0x78
                 _0x77:
0008d1 c005      	RJMP _0x76
                 _0x78:
                 ; 0000 041B    {
                 ; 0000 041C       Common_CHeckLink_act = 1;
0008d2 e0e1      	LDI  R30,LOW(1)
0008d3 93e0 0b83 	STS  _Common_CHeckLink_act,R30
                 ; 0000 041D       data_buffer2_temp[7] = '';
0008d5 940e 1b23 	CALL SUBOPT_0x9
                 ; 0000 041E       data_buffer2_temp[6] = '';
                 ; 0000 041F       data_buffer2_temp[5] = '';
                 ; 0000 0420       data_buffer2_temp[4] = '';
                 ; 0000 0421       data_buffer2_temp[3] = '';
                 ; 0000 0422       data_buffer2_temp[2] = '';
                 ; 0000 0423       data_buffer2_temp[1] = '';
                 ; 0000 0424       data_buffer2_temp[0] = '';
                 ; 0000 0425    }
                 ; 0000 0426 
                 ; 0000 0427 
                 ; 0000 0428    //¹èÀü±â ¼Ë´Ù¿î ¿äÃ»
                 ; 0000 0429    if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x60)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_temp ...
                 _0x76:
                +
0008d7 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
0008d9 30a0      	CPI  R26,LOW(0x0)
0008da f4e1      	BRNE _0x7A
                +
0008db 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
0008dd 36a0      	CPI  R26,LOW(0x60)
0008de f4c1      	BRNE _0x7A
                +
0008df 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
0008e1 32a0      	CPI  R26,LOW(0x20)
0008e2 f4a1      	BRNE _0x7A
                +
0008e3 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
0008e5 32a8      	CPI  R26,LOW(0x28)
0008e6 f481      	BRNE _0x7A
                +
0008e7 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
0008e9 32a4      	CPI  R26,LOW(0x24)
0008ea f461      	BRNE _0x7A
                +
0008eb 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
0008ed 30a1      	CPI  R26,LOW(0x1)
0008ee f441      	BRNE _0x7A
                +
0008ef 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
0008f1 30a0      	CPI  R26,LOW(0x0)
0008f2 f421      	BRNE _0x7A
0008f3 91a0 0a6c 	LDS  R26,_data_buffer1_temp
0008f5 30a0      	CPI  R26,LOW(0x0)
0008f6 f009      	BREQ _0x7B
                 _0x7A:
0008f7 c005      	RJMP _0x79
                 _0x7B:
                 ; 0000 042A    {
                 ; 0000 042B       Distributor_ShutdownResponse_act = 1;
0008f8 e0e1      	LDI  R30,LOW(1)
0008f9 93e0 0b85 	STS  _Distributor_ShutdownResponse_act,R30
                 ; 0000 042C      //   11/08 ÇÑÈ­¿äÃ»¿¡ ÀÇ°Å »èÁ¦ ¼Ë´Ù¿îÀº ¸ÞÀÎ¿¡¼­ ÁÖº¯ÀåÄ¡ offÈÄ Â÷´Ü
                 ; 0000 042D      // temp_control_1 = 0x00;
                 ; 0000 042E      // temp_control_2 = 0x00;
                 ; 0000 042F 
                 ; 0000 0430          //***************************
                 ; 0000 0431      // send_to_div_act = 1;
                 ; 0000 0432       data_buffer2_temp[8] = '';
0008fb 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 0433       data_buffer2_temp[7] = '';
                 ; 0000 0434       data_buffer2_temp[6] = '';
                 ; 0000 0435       data_buffer2_temp[5] = '';
                 ; 0000 0436       data_buffer2_temp[4] = '';
                 ; 0000 0437       data_buffer2_temp[3] = '';
                 ; 0000 0438       data_buffer2_temp[2] = '';
                 ; 0000 0439       data_buffer2_temp[1] = '';
                 ; 0000 043A       data_buffer2_temp[0] = '';
                 ; 0000 043B    }
                 ; 0000 043C 
                 ; 0000 043D    //¹èÀü±â PO-BIT ÃÊ±â¼³Á¤
                 ; 0000 043E    if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x61)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_temp ...
                 _0x79:
                +
0008fd 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
0008ff 30a0      	CPI  R26,LOW(0x0)
000900 f4e1      	BRNE _0x7D
                +
000901 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
000903 36a1      	CPI  R26,LOW(0x61)
000904 f4c1      	BRNE _0x7D
                +
000905 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
000907 32a0      	CPI  R26,LOW(0x20)
000908 f4a1      	BRNE _0x7D
                +
000909 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
00090b 32a8      	CPI  R26,LOW(0x28)
00090c f481      	BRNE _0x7D
                +
00090d 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
00090f 32a4      	CPI  R26,LOW(0x24)
000910 f461      	BRNE _0x7D
                +
000911 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
000913 30a1      	CPI  R26,LOW(0x1)
000914 f441      	BRNE _0x7D
                +
000915 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
000917 30a0      	CPI  R26,LOW(0x0)
000918 f421      	BRNE _0x7D
000919 91a0 0a6c 	LDS  R26,_data_buffer1_temp
00091b 30a0      	CPI  R26,LOW(0x0)
00091c f009      	BREQ _0x7E
                 _0x7D:
00091d c005      	RJMP _0x7C
                 _0x7E:
                 ; 0000 043F    {
                 ; 0000 0440       //po_bit_set_recive_data = data_buffer1_temp[0];
                 ; 0000 0441       Distributor_PoBIT_act_pre = 1;
00091e e0e1      	LDI  R30,LOW(1)
00091f 93e0 0b8a 	STS  _Distributor_PoBIT_act_pre,R30
                 ; 0000 0442       data_buffer2_temp[8] = '';
000921 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 0443       data_buffer2_temp[7] = '';
                 ; 0000 0444       data_buffer2_temp[6] = '';
                 ; 0000 0445       data_buffer2_temp[5] = '';
                 ; 0000 0446       data_buffer2_temp[4] = '';
                 ; 0000 0447       data_buffer2_temp[3] = '';
                 ; 0000 0448       data_buffer2_temp[2] = '';
                 ; 0000 0449       data_buffer2_temp[1] = '';
                 ; 0000 044A       data_buffer2_temp[0] = '';
                 ; 0000 044B    }
                 ; 0000 044C 
                 ; 0000 044D    //¹èÀü±â PO-BIT¼³Á¤
                 ; 0000 044E    if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x61)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_temp ...
                 _0x7C:
                +
000923 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
000925 30a0      	CPI  R26,LOW(0x0)
000926 f4e1      	BRNE _0x80
                +
000927 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
000929 36a1      	CPI  R26,LOW(0x61)
00092a f4c1      	BRNE _0x80
                +
00092b 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
00092d 32a0      	CPI  R26,LOW(0x20)
00092e f4a1      	BRNE _0x80
                +
00092f 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
000931 32a8      	CPI  R26,LOW(0x28)
000932 f481      	BRNE _0x80
                +
000933 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
000935 32a4      	CPI  R26,LOW(0x24)
000936 f461      	BRNE _0x80
                +
000937 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
000939 30a1      	CPI  R26,LOW(0x1)
00093a f441      	BRNE _0x80
                +
00093b 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
00093d 30a0      	CPI  R26,LOW(0x0)
00093e f421      	BRNE _0x80
00093f 91a0 0a6c 	LDS  R26,_data_buffer1_temp
000941 30a4      	CPI  R26,LOW(0x4)
000942 f009      	BREQ _0x81
                 _0x80:
000943 c005      	RJMP _0x7F
                 _0x81:
                 ; 0000 044F    {
                 ; 0000 0450      // po_bit_set_recive_data = data_buffer1_temp[0];
                 ; 0000 0451       Distributor_PoBIT_act = 1;
000944 e0e1      	LDI  R30,LOW(1)
000945 93e0 0b89 	STS  _Distributor_PoBIT_act,R30
                 ; 0000 0452       data_buffer2_temp[8] = '';
000947 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 0453       data_buffer2_temp[7] = '';
                 ; 0000 0454       data_buffer2_temp[6] = '';
                 ; 0000 0455       data_buffer2_temp[5] = '';
                 ; 0000 0456       data_buffer2_temp[4] = '';
                 ; 0000 0457       data_buffer2_temp[3] = '';
                 ; 0000 0458       data_buffer2_temp[2] = '';
                 ; 0000 0459       data_buffer2_temp[1] = '';
                 ; 0000 045A       data_buffer2_temp[0] = '';
                 ; 0000 045B    }
                 ; 0000 045C //
                 ; 0000 045D //   //ºÎÀú ¿ï¸² ¿ø°Ý ÁßÁö 191226
                 ; 0000 045E //   if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x61)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_te ...
                 ; 0000 045F //   {
                 ; 0000 0460 //      buzzer_clear_all();
                 ; 0000 0461 //      data_buffer2_temp[8] = '';
                 ; 0000 0462 //      data_buffer2_temp[7] = '';
                 ; 0000 0463 //      data_buffer2_temp[6] = '';
                 ; 0000 0464 //      data_buffer2_temp[5] = '';
                 ; 0000 0465 //      data_buffer2_temp[4] = '';
                 ; 0000 0466 //      data_buffer2_temp[3] = '';
                 ; 0000 0467 //      data_buffer2_temp[2] = '';
                 ; 0000 0468 //      data_buffer2_temp[1] = '';
                 ; 0000 0469 //      data_buffer2_temp[0] = '';
                 ; 0000 046A //   }
                 ; 0000 046B 
                 ; 0000 046C    //¹èÀü±â PO-BIT °á°ú  »ó¼¼Á¤º¸ ¿ä±¸
                 ; 0000 046D    if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x62)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_temp ...
                 _0x7F:
                +
000949 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
00094b 30a0      	CPI  R26,LOW(0x0)
00094c f4c1      	BRNE _0x83
                +
00094d 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
00094f 36a2      	CPI  R26,LOW(0x62)
000950 f4a1      	BRNE _0x83
                +
000951 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
000953 32a0      	CPI  R26,LOW(0x20)
000954 f481      	BRNE _0x83
                +
000955 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
000957 32a8      	CPI  R26,LOW(0x28)
000958 f461      	BRNE _0x83
                +
000959 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
00095b 32a4      	CPI  R26,LOW(0x24)
00095c f441      	BRNE _0x83
                +
00095d 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
00095f 30a1      	CPI  R26,LOW(0x1)
000960 f421      	BRNE _0x83
                +
000961 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
000963 30a0      	CPI  R26,LOW(0x0)
000964 f009      	BREQ _0x84
                 _0x83:
000965 c009      	RJMP _0x82
                 _0x84:
                 ; 0000 046E    {
                 ; 0000 046F       po_bit_recive_data_detail = data_buffer1_temp[0];
000966 91e0 0a6c 	LDS  R30,_data_buffer1_temp
000968 93e0 0b8c 	STS  _po_bit_recive_data_detail,R30
                 ; 0000 0470       Distributor_BITDetailResponse_act = 1;
00096a e0e1      	LDI  R30,LOW(1)
00096b 93e0 0b88 	STS  _Distributor_BITDetailResponse_act,R30
                 ; 0000 0471       data_buffer2_temp[8] = '';
00096d 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 0472       data_buffer2_temp[7] = '';
                 ; 0000 0473       data_buffer2_temp[6] = '';
                 ; 0000 0474       data_buffer2_temp[5] = '';
                 ; 0000 0475       data_buffer2_temp[4] = '';
                 ; 0000 0476       data_buffer2_temp[3] = '';
                 ; 0000 0477       data_buffer2_temp[2] = '';
                 ; 0000 0478       data_buffer2_temp[1] = '';
                 ; 0000 0479       data_buffer2_temp[0] = '';
                 ; 0000 047A    }
                 ; 0000 047B 
                 ; 0000 047C    //¹èÀü±â ÀåÄ¡¼³Á¤
                 ; 0000 047D    if((data_buffer1_temp[10] == 0x00)&&(data_buffer1_temp[9] == 0x63)&&(data_buffer1_temp[8] == 0x20)&&(data_buffer1_tem ...
                 _0x82:
                +
00096f 91a0 0a76+LDS R26 , _data_buffer1_temp + ( 10 )
                 	__GETB2MN _data_buffer1_temp,10
000971 30a0      	CPI  R26,LOW(0x0)
000972 f4c1      	BRNE _0x86
                +
000973 91a0 0a75+LDS R26 , _data_buffer1_temp + ( 9 )
                 	__GETB2MN _data_buffer1_temp,9
000975 36a3      	CPI  R26,LOW(0x63)
000976 f4a1      	BRNE _0x86
                +
000977 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
000979 32a0      	CPI  R26,LOW(0x20)
00097a f481      	BRNE _0x86
                +
00097b 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
00097d 32a8      	CPI  R26,LOW(0x28)
00097e f461      	BRNE _0x86
                +
00097f 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
000981 32a4      	CPI  R26,LOW(0x24)
000982 f441      	BRNE _0x86
                +
000983 91a0 0a70+LDS R26 , _data_buffer1_temp + ( 4 )
                 	__GETB2MN _data_buffer1_temp,4
000985 30a3      	CPI  R26,LOW(0x3)
000986 f421      	BRNE _0x86
                +
000987 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
000989 30a0      	CPI  R26,LOW(0x0)
00098a f009      	BREQ _0x87
                 _0x86:
00098b c01d      	RJMP _0x85
                 _0x87:
                 ; 0000 047E    {
                 ; 0000 047F       temp_control_sel = data_buffer1_temp[2];
                +
00098c 91e0 0a6e+LDS R30 , _data_buffer1_temp + ( 2 )
                 	__GETB1MN _data_buffer1_temp,2
00098e 93e0 0b56 	STS  _temp_control_sel,R30
                 ; 0000 0480       if(temp_control_sel == 0x20)
000990 91a0 0b56 	LDS  R26,_temp_control_sel
000992 32a0      	CPI  R26,LOW(0x20)
000993 f419      	BRNE _0x88
                 ; 0000 0481       {
                 ; 0000 0482         buzzer_clear_all();
000994 940e 00c1 	CALL _buzzer_clear_all
                 ; 0000 0483       }
                 ; 0000 0484       else
000996 c00b      	RJMP _0x89
                 _0x88:
                 ; 0000 0485       {
                 ; 0000 0486         temp_control_1 = data_buffer1_temp[1];
                +
000997 91e0 0a6d+LDS R30 , _data_buffer1_temp + ( 1 )
                 	__GETB1MN _data_buffer1_temp,1
000999 93e0 0b50 	STS  _temp_control_1,R30
                 ; 0000 0487         temp_control_2 = data_buffer1_temp[0];
00099b 91e0 0a6c 	LDS  R30,_data_buffer1_temp
00099d 93e0 0b51 	STS  _temp_control_2,R30
                 ; 0000 0488         //***************************
                 ; 0000 0489         send_to_div_act = 1;
00099f e0e1      	LDI  R30,LOW(1)
0009a0 93e0 0b57 	STS  _send_to_div_act,R30
                 ; 0000 048A         //**************************
                 ; 0000 048B       }
                 _0x89:
                 ; 0000 048C 
                 ; 0000 048D       // Distributor_DeviceRequest = 1;
                 ; 0000 048E       data_buffer2_temp[10] = '';
0009a2 e0e0      	LDI  R30,LOW(0)
                +
0009a3 93e0 0ad2+STS _data_buffer2_temp + ( 10 ) , R30
                 	__PUTB1MN _data_buffer2_temp,10
                 ; 0000 048F       data_buffer2_temp[9] = '';
                +
0009a5 93e0 0ad1+STS _data_buffer2_temp + ( 9 ) , R30
                 	__PUTB1MN _data_buffer2_temp,9
                 ; 0000 0490       data_buffer2_temp[8] = '';
0009a7 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 0491       data_buffer2_temp[7] = '';
                 ; 0000 0492       data_buffer2_temp[6] = '';
                 ; 0000 0493       data_buffer2_temp[5] = '';
                 ; 0000 0494       data_buffer2_temp[4] = '';
                 ; 0000 0495       data_buffer2_temp[3] = '';
                 ; 0000 0496       data_buffer2_temp[2] = '';
                 ; 0000 0497       data_buffer2_temp[1] = '';
                 ; 0000 0498       data_buffer2_temp[0] = '';
                 ; 0000 0499     }
                 ; 0000 049A 
                 ; 0000 049B    //ÀÓ¹«Ã³¸®±â ¼Ë´Ù¿î ¿À·ù ¿äÃ»
                 ; 0000 049C    if((data_buffer1_temp[8] == 0x00)&&(data_buffer1_temp[7] == 0x64)&&(data_buffer1_temp[6] == 0x20)&&(data_buffer1_temp ...
                 _0x85:
                +
0009a9 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
0009ab 30a0      	CPI  R26,LOW(0x0)
0009ac f4e1      	BRNE _0x8B
                +
0009ad 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
0009af 36a4      	CPI  R26,LOW(0x64)
0009b0 f4c1      	BRNE _0x8B
                +
0009b1 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
0009b3 32a0      	CPI  R26,LOW(0x20)
0009b4 f4a1      	BRNE _0x8B
                +
0009b5 91a0 0a71+LDS R26 , _data_buffer1_temp + ( 5 )
                 	__GETB2MN _data_buffer1_temp,5
0009b7 32a8      	CPI  R26,LOW(0x28)
0009b8 f481      	BRNE _0x8B
                +
0009b9 91a0 0a6f+LDS R26 , _data_buffer1_temp + ( 3 )
                 	__GETB2MN _data_buffer1_temp,3
0009bb 32a4      	CPI  R26,LOW(0x24)
0009bc f461      	BRNE _0x8B
                +
0009bd 91a0 0a6e+LDS R26 , _data_buffer1_temp + ( 2 )
                 	__GETB2MN _data_buffer1_temp,2
0009bf 30a1      	CPI  R26,LOW(0x1)
0009c0 f441      	BRNE _0x8B
                +
0009c1 91a0 0a6d+LDS R26 , _data_buffer1_temp + ( 1 )
                 	__GETB2MN _data_buffer1_temp,1
0009c3 30a0      	CPI  R26,LOW(0x0)
0009c4 f421      	BRNE _0x8B
0009c5 91a0 0a6c 	LDS  R26,_data_buffer1_temp
0009c7 30a1      	CPI  R26,LOW(0x1)
0009c8 f009      	BREQ _0x8C
                 _0x8B:
0009c9 c005      	RJMP _0x8A
                 _0x8C:
                 ; 0000 049D    {
                 ; 0000 049E      //shoutdown_request_recive_data = data_buffer1_temp[0];
                 ; 0000 049F 
                 ; 0000 04A0       Distributor_ShutdownErroResponse_act = 1;
0009ca e0e1      	LDI  R30,LOW(1)
0009cb 93e0 0b86 	STS  _Distributor_ShutdownErroResponse_act,R30
                 ; 0000 04A1       data_buffer2_temp[8] = '';
0009cd 940e 1b35 	CALL SUBOPT_0xA
                 ; 0000 04A2       data_buffer2_temp[7] = '';
                 ; 0000 04A3       data_buffer2_temp[6] = '';
                 ; 0000 04A4       data_buffer2_temp[5] = '';
                 ; 0000 04A5       data_buffer2_temp[4] = '';
                 ; 0000 04A6       data_buffer2_temp[3] = '';
                 ; 0000 04A7       data_buffer2_temp[2] = '';
                 ; 0000 04A8       data_buffer2_temp[1] = '';
                 ; 0000 04A9       data_buffer2_temp[0] = '';
                 ; 0000 04AA     }
                 ; 0000 04AB 
                 ; 0000 04AC 
                 ; 0000 04AD    //½Ã°£ ¼³Á¤
                 ; 0000 04AE    if((data_buffer1_temp[13] == 0x00)&&(data_buffer1_temp[12] == 0x65)&&(data_buffer1_temp[11] == 0x20)&&(data_buffer1_t ...
                 _0x8A:
                +
0009cf 91a0 0a79+LDS R26 , _data_buffer1_temp + ( 13 )
                 	__GETB2MN _data_buffer1_temp,13
0009d1 30a0      	CPI  R26,LOW(0x0)
0009d2 f4c1      	BRNE _0x8E
                +
0009d3 91a0 0a78+LDS R26 , _data_buffer1_temp + ( 12 )
                 	__GETB2MN _data_buffer1_temp,12
0009d5 36a5      	CPI  R26,LOW(0x65)
0009d6 f4a1      	BRNE _0x8E
                +
0009d7 91a0 0a77+LDS R26 , _data_buffer1_temp + ( 11 )
                 	__GETB2MN _data_buffer1_temp,11
0009d9 32a0      	CPI  R26,LOW(0x20)
0009da f481      	BRNE _0x8E
                +
0009db 91a0 0a76+LDS R26 , _data_buffer1_temp + ( 10 )
                 	__GETB2MN _data_buffer1_temp,10
0009dd 32a8      	CPI  R26,LOW(0x28)
0009de f461      	BRNE _0x8E
                +
0009df 91a0 0a74+LDS R26 , _data_buffer1_temp + ( 8 )
                 	__GETB2MN _data_buffer1_temp,8
0009e1 32a4      	CPI  R26,LOW(0x24)
0009e2 f441      	BRNE _0x8E
                +
0009e3 91a0 0a73+LDS R26 , _data_buffer1_temp + ( 7 )
                 	__GETB2MN _data_buffer1_temp,7
0009e5 30a6      	CPI  R26,LOW(0x6)
0009e6 f421      	BRNE _0x8E
                +
0009e7 91a0 0a72+LDS R26 , _data_buffer1_temp + ( 6 )
                 	__GETB2MN _data_buffer1_temp,6
0009e9 30a0      	CPI  R26,LOW(0x0)
0009ea f009      	BREQ _0x8F
                 _0x8E:
0009eb c033      	RJMP _0x8D
                 _0x8F:
                 ; 0000 04AF    {
                 ; 0000 04B0      year = data_buffer1_temp[5];
                +
0009ec 91e0 0a71+LDS R30 , _data_buffer1_temp + ( 5 )
                 	__GETB1MN _data_buffer1_temp,5
0009ee 93e0 0a0c 	STS  _year,R30
                 ; 0000 04B1      month = data_buffer1_temp[4];
                +
0009f0 91e0 0a70+LDS R30 , _data_buffer1_temp + ( 4 )
                 	__GETB1MN _data_buffer1_temp,4
0009f2 93e0 0a0d 	STS  _month,R30
                 ; 0000 04B2      day = data_buffer1_temp[3];
                +
0009f4 91e0 0a6f+LDS R30 , _data_buffer1_temp + ( 3 )
                 	__GETB1MN _data_buffer1_temp,3
0009f6 93e0 0a0f 	STS  _day,R30
                 ; 0000 04B3      hour = data_buffer1_temp[2];
                +
0009f8 91e0 0a6e+LDS R30 , _data_buffer1_temp + ( 2 )
                 	__GETB1MN _data_buffer1_temp,2
0009fa 93e0 0a10 	STS  _hour,R30
                 ; 0000 04B4      minute = data_buffer1_temp[1];
                +
0009fc 91e0 0a6d+LDS R30 , _data_buffer1_temp + ( 1 )
                 	__GETB1MN _data_buffer1_temp,1
0009fe 93e0 0a11 	STS  _minute,R30
                 ; 0000 04B5      sec = data_buffer1_temp[0];
000a00 91e0 0a6c 	LDS  R30,_data_buffer1_temp
000a02 93e0 0a12 	STS  _sec,R30
                 ; 0000 04B6 //
                 ; 0000 04B7    rtc_set_time(hour,minute,sec);
000a04 91e0 0a10 	LDS  R30,_hour
000a06 93ea      	ST   -Y,R30
000a07 91e0 0a11 	LDS  R30,_minute
000a09 93ea      	ST   -Y,R30
000a0a 91a0 0a12 	LDS  R26,_sec
000a0c 940e 1a47 	CALL _rtc_set_time
                 ; 0000 04B8 //   if(year > 12)
                 ; 0000 04B9 //   {
                 ; 0000 04BA //   year = (year - 12);
                 ; 0000 04BB //   year = 0x1f | (year & 0x0f);
                 ; 0000 04BC //   }
                 ; 0000 04BD //   else
                 ; 0000 04BE //   {
                 ; 0000 04BF //   year = year & 0x0f;
                 ; 0000 04C0 //   }
                 ; 0000 04C1 //     year = 0x1f & year;
                 ; 0000 04C2      rtc_set_date(0x05,day,month,year);
000a0e e0e5      	LDI  R30,LOW(5)
000a0f 93ea      	ST   -Y,R30
000a10 91e0 0a0f 	LDS  R30,_day
000a12 93ea      	ST   -Y,R30
000a13 91e0 0a0d 	LDS  R30,_month
000a15 93ea      	ST   -Y,R30
000a16 91a0 0a0c 	LDS  R26,_year
000a18 940e 1a72 	CALL _rtc_set_date
                 ; 0000 04C3 
                 ; 0000 04C4      Distributor_TimeSyncAck_act = 1;
000a1a e0e1      	LDI  R30,LOW(1)
000a1b 93e0 0b87 	STS  _Distributor_TimeSyncAck_act,R30
                 ; 0000 04C5 
                 ; 0000 04C6      //time_data_get = 1;
                 ; 0000 04C7      //buffer clear
                 ; 0000 04C8      data_buffer2_temp[13] = '';
000a1d 940e 1b05 	CALL SUBOPT_0x8
                 ; 0000 04C9      data_buffer2_temp[12] = '';
                 ; 0000 04CA      data_buffer2_temp[11] = '';
                 ; 0000 04CB      data_buffer2_temp[10] = '';
                 ; 0000 04CC      data_buffer2_temp[9] = '';
                 ; 0000 04CD      data_buffer2_temp[8] = '';
                 ; 0000 04CE      data_buffer2_temp[7] = '';
                 ; 0000 04CF      data_buffer2_temp[6] = '';
                 ; 0000 04D0      data_buffer2_temp[5] = '';
                 ; 0000 04D1      data_buffer2_temp[4] = '';
                 ; 0000 04D2      data_buffer2_temp[3] = '';
                 ; 0000 04D3      data_buffer2_temp[2] = '';
                 ; 0000 04D4      data_buffer2_temp[1] = '';
                 ; 0000 04D5      data_buffer2_temp[0] = '';
                 ; 0000 04D6    }
                 ; 0000 04D7 
                 ; 0000 04D8 
                 ; 0000 04D9  /*
                 ; 0000 04DA 
                 ; 0000 04DB   if(data == 0x0a )
                 ; 0000 04DC    {
                 ; 0000 04DD        //Ã¤³Î»óÅÂ ¹× ¿¡·¯Á¤º¸ ¿äÃ»
                 ; 0000 04DE      if(data_buffer2_temp[91] == 0x7f && data_buffer2_temp[90] == 0xfe && data_buffer2_temp[0] == 0x0d)
                 ; 0000 04DF       {
                 ; 0000 04E0 
                 ; 0000 04E1 
                 ; 0000 04E2          data_buffer2_temp[91] = '';
                 ; 0000 04E3          data_buffer2_temp[90] = '';
                 ; 0000 04E4          data_buffer2_temp[89] = '';
                 ; 0000 04E5          data_buffer2_temp[88] = '';
                 ; 0000 04E6          data_buffer2_temp[87] = '';
                 ; 0000 04E7          data_buffer2_temp[86] = '';
                 ; 0000 04E8          data_buffer2_temp[85] = '';
                 ; 0000 04E9          data_buffer2_temp[84] = '';
                 ; 0000 04EA          data_buffer2_temp[83] = '';
                 ; 0000 04EB          data_buffer2_temp[82] = '';
                 ; 0000 04EC          data_buffer2_temp[81] = '';
                 ; 0000 04ED          data_buffer2_temp[80] = '';
                 ; 0000 04EE          data_buffer2_temp[79] = '';
                 ; 0000 04EF          data_buffer2_temp[78] = '';
                 ; 0000 04F0          data_buffer2_temp[77] = '';
                 ; 0000 04F1          data_buffer2_temp[76] = '';
                 ; 0000 04F2          data_buffer2_temp[75] = '';
                 ; 0000 04F3          data_buffer2_temp[74] = '';
                 ; 0000 04F4          data_buffer2_temp[73] = '';
                 ; 0000 04F5          data_buffer2_temp[72] = '';
                 ; 0000 04F6          data_buffer2_temp[71] = '';
                 ; 0000 04F7          data_buffer2_temp[70] = '';
                 ; 0000 04F8          data_buffer2_temp[69] = '';
                 ; 0000 04F9          data_buffer2_temp[68] = '';
                 ; 0000 04FA          data_buffer2_temp[67] = '';
                 ; 0000 04FB          data_buffer2_temp[66] = '';
                 ; 0000 04FC          data_buffer2_temp[65] = '';
                 ; 0000 04FD          data_buffer2_temp[64] = '';
                 ; 0000 04FE          data_buffer2_temp[63] = '';
                 ; 0000 04FF          data_buffer2_temp[62] = '';
                 ; 0000 0500          data_buffer2_temp[61] = '';
                 ; 0000 0501          data_buffer2_temp[60] = '';
                 ; 0000 0502          data_buffer2_temp[59] = '';
                 ; 0000 0503          data_buffer2_temp[58] = '';
                 ; 0000 0504          data_buffer2_temp[57] = '';
                 ; 0000 0505          data_buffer2_temp[56] = '';
                 ; 0000 0506          data_buffer2_temp[55] = '';
                 ; 0000 0507          data_buffer2_temp[54] = '';
                 ; 0000 0508          data_buffer2_temp[53] = '';
                 ; 0000 0509          data_buffer2_temp[52] = '';
                 ; 0000 050A          data_buffer2_temp[51] = '';
                 ; 0000 050B          data_buffer2_temp[50] = '';
                 ; 0000 050C          data_buffer2_temp[49] = '';
                 ; 0000 050D          data_buffer2_temp[48] = '';
                 ; 0000 050E          data_buffer2_temp[47] = '';
                 ; 0000 050F          data_buffer2_temp[46] = '';
                 ; 0000 0510          data_buffer2_temp[45] = '';
                 ; 0000 0511          data_buffer2_temp[44] = '';
                 ; 0000 0512          data_buffer2_temp[43] = '';
                 ; 0000 0513          data_buffer2_temp[42] = '';
                 ; 0000 0514          data_buffer2_temp[41] = '';
                 ; 0000 0515          data_buffer2_temp[40] = '';
                 ; 0000 0516          data_buffer2_temp[39] = '';
                 ; 0000 0517          data_buffer2_temp[38] = '';
                 ; 0000 0518          data_buffer2_temp[37] = '';
                 ; 0000 0519          data_buffer2_temp[36] = '';
                 ; 0000 051A          data_buffer2_temp[35] = '';
                 ; 0000 051B          data_buffer2_temp[34] = '';
                 ; 0000 051C          data_buffer2_temp[33] = '';
                 ; 0000 051D          data_buffer2_temp[32] = '';
                 ; 0000 051E          data_buffer2_temp[31] = '';
                 ; 0000 051F          data_buffer2_temp[30] = '';
                 ; 0000 0520          data_buffer2_temp[29] = '';
                 ; 0000 0521          data_buffer2_temp[28] = '';
                 ; 0000 0522          data_buffer2_temp[27] = '';
                 ; 0000 0523          data_buffer2_temp[26] = '';
                 ; 0000 0524          data_buffer2_temp[25] = '';
                 ; 0000 0525          data_buffer2_temp[24] = '';
                 ; 0000 0526          data_buffer2_temp[23] = '';
                 ; 0000 0527          data_buffer2_temp[22] = '';
                 ; 0000 0528          data_buffer2_temp[21] = '';
                 ; 0000 0529          data_buffer2_temp[20] = '';
                 ; 0000 052A          data_buffer2_temp[19] = '';
                 ; 0000 052B          data_buffer2_temp[18] = '';
                 ; 0000 052C          data_buffer2_temp[17] = '';
                 ; 0000 052D          data_buffer2_temp[16] = '';
                 ; 0000 052E          data_buffer2_temp[15] = '';
                 ; 0000 052F          data_buffer2_temp[14] = '';
                 ; 0000 0530          data_buffer2_temp[13] = '';
                 ; 0000 0531          data_buffer2_temp[12] = '';
                 ; 0000 0532          data_buffer2_temp[11] = '';
                 ; 0000 0533          data_buffer2_temp[10] = '';
                 ; 0000 0534          data_buffer2_temp[9] = '';
                 ; 0000 0535          data_buffer2_temp[8] = '';
                 ; 0000 0536          data_buffer2_temp[7] = '';
                 ; 0000 0537          data_buffer2_temp[6] = '';
                 ; 0000 0538          data_buffer2_temp[5] = '';
                 ; 0000 0539          data_buffer2_temp[4] = '';
                 ; 0000 053A          data_buffer2_temp[3] = '';
                 ; 0000 053B          data_buffer2_temp[2] = '';
                 ; 0000 053C          data_buffer2_temp[1] = '';
                 ; 0000 053D          data_buffer2_temp[0] = '';
                 ; 0000 053E        }
                 ; 0000 053F    }
                 ; 0000 0540    else
                 ; 0000 0541    {
                 ; 0000 0542 
                 ; 0000 0543    }
                 ; 0000 0544 */
                 ; 0000 0545 
                 ; 0000 0546 }
                 _0x8D:
                 _0x450:
000a1f 9109      	LD   R16,Y+
000a20 9119      	LD   R17,Y+
000a21 91e9      	LD   R30,Y+
000a22 bfef      	OUT  SREG,R30
000a23 91f9      	LD   R31,Y+
000a24 91e9      	LD   R30,Y+
000a25 91b9      	LD   R27,Y+
000a26 91a9      	LD   R26,Y+
000a27 9199      	LD   R25,Y+
000a28 9189      	LD   R24,Y+
000a29 9179      	LD   R23,Y+
000a2a 9169      	LD   R22,Y+
000a2b 90f9      	LD   R15,Y+
000a2c 9019      	LD   R1,Y+
000a2d 9009      	LD   R0,Y+
000a2e 9518      	RETI
                 ; .FEND
                 ;
                 ;// Get a character from the USART1 Receiver buffer
                 ;#pragma used+
                 ;char getchar1(void)
                 ; 0000 054B {
                 ; 0000 054C char data;
                 ; 0000 054D while (rx_counter1==0);
                 ;	data -> R17
                 ; 0000 054E data=rx_buffer1[rx_rd_index1++];
                 ; 0000 054F #if RX_BUFFER_SIZE1 != 256
                 ; 0000 0550 if (rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
                 ; 0000 0551 #endif
                 ; 0000 0552 #asm("cli")
                 ; 0000 0553 --rx_counter1;
                 ; 0000 0554 #asm("sei")
                 ; 0000 0555 return data;
                 ; 0000 0556 }
                 ;#pragma used-
                 ;// Write a character to the USART1 Transmitter
                 ;#pragma used+
                 ;void putchar1(char c)
                 ; 0000 055B {
                 _putchar1:
                 ; .FSTART _putchar1
                 ; 0000 055C while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
000a2f 931a      	ST   -Y,R17
000a30 2f1a      	MOV  R17,R26
                 ;	c -> R17
                 _0x94:
000a31 91e0 00c8 	LDS  R30,200
000a33 72e0      	ANDI R30,LOW(0x20)
000a34 f3e1      	BREQ _0x94
                 ; 0000 055D UDR1=c;
000a35 9310 00ce 	STS  206,R17
                 ; 0000 055E }
000a37 c431      	RJMP _0x20A0004
                 ; .FEND
                 ;#pragma used-
                 ;
                 ;// USART2 Receiver buffer
                 ;#define RX_BUFFER_SIZE2 8
                 ;char rx_buffer2[RX_BUFFER_SIZE2];
                 ;
                 ;#if RX_BUFFER_SIZE2 <= 256
                 ;unsigned char rx_wr_index2=0,rx_rd_index2=0;
                 ;#else
                 ;unsigned int rx_wr_index2=0,rx_rd_index2=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE2 < 256
                 ;unsigned char rx_counter2=0;
                 ;#else
                 ;unsigned int rx_counter2=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART2 Receiver buffer overflow
                 ;bit rx_buffer_overflow2;
                 ;
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0000 0576 {
                 _usart2_rx_isr:
                 ; .FSTART _usart2_rx_isr
000a38 920a      	ST   -Y,R0
000a39 921a      	ST   -Y,R1
000a3a 93aa      	ST   -Y,R26
000a3b 93ba      	ST   -Y,R27
000a3c 93ea      	ST   -Y,R30
000a3d 93fa      	ST   -Y,R31
000a3e b7ef      	IN   R30,SREG
000a3f 93ea      	ST   -Y,R30
                 ; 0000 0577 unsigned char status;
                 ; 0000 0578 char data;
                 ; 0000 0579 status=UCSR2A;
000a40 931a      	ST   -Y,R17
000a41 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000a42 9110 00d0 	LDS  R17,208
                 ; 0000 057A data=UDR2;
000a44 9100 00d6 	LDS  R16,214
                 ; 0000 057B if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000a46 2fe1      	MOV  R30,R17
000a47 71ec      	ANDI R30,LOW(0x1C)
000a48 f4e9      	BRNE _0x97
                 ; 0000 057C    {
                 ; 0000 057D    rx_buffer2[rx_wr_index2++]=data;
000a49 91e0 0bb0 	LDS  R30,_rx_wr_index2
000a4b 5fef      	SUBI R30,-LOW(1)
000a4c 93e0 0bb0 	STS  _rx_wr_index2,R30
000a4e 50e1      	SUBI R30,LOW(1)
000a4f e0f0      	LDI  R31,0
000a50 55e8      	SUBI R30,LOW(-_rx_buffer2)
000a51 4ff4      	SBCI R31,HIGH(-_rx_buffer2)
000a52 8300      	ST   Z,R16
                 ; 0000 057E #if RX_BUFFER_SIZE2 == 256
                 ; 0000 057F    // special case for receiver buffer size=256
                 ; 0000 0580    if (++rx_counter2 == 0) rx_buffer_overflow2=1;
                 ; 0000 0581 #else
                 ; 0000 0582    if (rx_wr_index2 == RX_BUFFER_SIZE2) rx_wr_index2=0;
000a53 91a0 0bb0 	LDS  R26,_rx_wr_index2
000a55 30a8      	CPI  R26,LOW(0x8)
000a56 f419      	BRNE _0x98
000a57 e0e0      	LDI  R30,LOW(0)
000a58 93e0 0bb0 	STS  _rx_wr_index2,R30
                 ; 0000 0583    if (++rx_counter2 == RX_BUFFER_SIZE2)
                 _0x98:
000a5a 91a0 0bb2 	LDS  R26,_rx_counter2
000a5c 5faf      	SUBI R26,-LOW(1)
000a5d 93a0 0bb2 	STS  _rx_counter2,R26
000a5f 30a8      	CPI  R26,LOW(0x8)
000a60 f429      	BRNE _0x99
                 ; 0000 0584       {
                 ; 0000 0585       rx_counter2=0;
000a61 e0e0      	LDI  R30,LOW(0)
000a62 93e0 0bb2 	STS  _rx_counter2,R30
                 ; 0000 0586       rx_buffer_overflow2=1;
000a64 9468      	SET
000a65 f823      	BLD  R2,3
                 ; 0000 0587       }
                 ; 0000 0588 #endif
                 ; 0000 0589    }
                 _0x99:
                 ; 0000 058A          data_buffer_ge_temp[9] = data_buffer_ge_temp[8];
                 _0x97:
                +
000a66 91e0 0b2c+LDS R30 , _data_buffer_ge_temp + ( 8 )
                 	__GETB1MN _data_buffer_ge_temp,8
                +
000a68 93e0 0b2d+STS _data_buffer_ge_temp + ( 9 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,9
                 ; 0000 058B          data_buffer_ge_temp[8] = data_buffer_ge_temp[7];
                +
000a6a 91e0 0b2b+LDS R30 , _data_buffer_ge_temp + ( 7 )
                 	__GETB1MN _data_buffer_ge_temp,7
                +
000a6c 93e0 0b2c+STS _data_buffer_ge_temp + ( 8 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,8
                 ; 0000 058C          data_buffer_ge_temp[7] = data_buffer_ge_temp[6];
                +
000a6e 91e0 0b2a+LDS R30 , _data_buffer_ge_temp + ( 6 )
                 	__GETB1MN _data_buffer_ge_temp,6
                +
000a70 93e0 0b2b+STS _data_buffer_ge_temp + ( 7 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,7
                 ; 0000 058D          data_buffer_ge_temp[6] = data_buffer_ge_temp[5];
                +
000a72 91e0 0b29+LDS R30 , _data_buffer_ge_temp + ( 5 )
                 	__GETB1MN _data_buffer_ge_temp,5
                +
000a74 93e0 0b2a+STS _data_buffer_ge_temp + ( 6 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,6
                 ; 0000 058E          data_buffer_ge_temp[5] = data_buffer_ge_temp[4];
                +
000a76 91e0 0b28+LDS R30 , _data_buffer_ge_temp + ( 4 )
                 	__GETB1MN _data_buffer_ge_temp,4
                +
000a78 93e0 0b29+STS _data_buffer_ge_temp + ( 5 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,5
                 ; 0000 058F          data_buffer_ge_temp[4] = data_buffer_ge_temp[3];
                +
000a7a 91e0 0b27+LDS R30 , _data_buffer_ge_temp + ( 3 )
                 	__GETB1MN _data_buffer_ge_temp,3
                +
000a7c 93e0 0b28+STS _data_buffer_ge_temp + ( 4 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,4
                 ; 0000 0590          data_buffer_ge_temp[3] = data_buffer_ge_temp[2];
                +
000a7e 91e0 0b26+LDS R30 , _data_buffer_ge_temp + ( 2 )
                 	__GETB1MN _data_buffer_ge_temp,2
                +
000a80 93e0 0b27+STS _data_buffer_ge_temp + ( 3 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,3
                 ; 0000 0591          data_buffer_ge_temp[2] = data_buffer_ge_temp[1];
                +
000a82 91e0 0b25+LDS R30 , _data_buffer_ge_temp + ( 1 )
                 	__GETB1MN _data_buffer_ge_temp,1
                +
000a84 93e0 0b26+STS _data_buffer_ge_temp + ( 2 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,2
                 ; 0000 0592          data_buffer_ge_temp[1] = data_buffer_ge_temp[0];
000a86 91e0 0b24 	LDS  R30,_data_buffer_ge_temp
                +
000a88 93e0 0b25+STS _data_buffer_ge_temp + ( 1 ) , R30
                 	__PUTB1MN _data_buffer_ge_temp,1
                 ; 0000 0593          data_buffer_ge_temp[0] = data;
000a8a 9300 0b24 	STS  _data_buffer_ge_temp,R16
                 ; 0000 0594 
                 ; 0000 0595    //¹ßÀü±â Àü¾Ð
                 ; 0000 0596    if((data_buffer_ge_temp[6] == 0x01)&&(data_buffer_ge_temp[5] == 0x03)&&(data_buffer_ge_temp[4] == 0x02)&&(ge_data_kin ...
                +
000a8c 91a0 0b2a+LDS R26 , _data_buffer_ge_temp + ( 6 )
                 	__GETB2MN _data_buffer_ge_temp,6
000a8e 30a1      	CPI  R26,LOW(0x1)
000a8f f461      	BRNE _0x9B
                +
000a90 91a0 0b29+LDS R26 , _data_buffer_ge_temp + ( 5 )
                 	__GETB2MN _data_buffer_ge_temp,5
000a92 30a3      	CPI  R26,LOW(0x3)
000a93 f441      	BRNE _0x9B
                +
000a94 91a0 0b28+LDS R26 , _data_buffer_ge_temp + ( 4 )
                 	__GETB2MN _data_buffer_ge_temp,4
000a96 30a2      	CPI  R26,LOW(0x2)
000a97 f421      	BRNE _0x9B
000a98 91a0 0b8d 	LDS  R26,_ge_data_kind
000a9a 30a1      	CPI  R26,LOW(0x1)
000a9b f009      	BREQ _0x9C
                 _0x9B:
000a9c c017      	RJMP _0x9A
                 _0x9C:
                 ; 0000 0597    {
                 ; 0000 0598       ge_voltage_h = data_buffer_ge_temp[3];
                +
000a9d 91e0 0b27+LDS R30 , _data_buffer_ge_temp + ( 3 )
                 	__GETB1MN _data_buffer_ge_temp,3
000a9f 93e0 0b3a 	STS  _ge_voltage_h,R30
                 ; 0000 0599       ge_voltage_l = data_buffer_ge_temp[2];
                +
000aa1 91e0 0b26+LDS R30 , _data_buffer_ge_temp + ( 2 )
                 	__GETB1MN _data_buffer_ge_temp,2
000aa3 93e0 0b3b 	STS  _ge_voltage_l,R30
                 ; 0000 059A       voltage_ge = (ge_voltage_h * 256) + ge_voltage_l;
000aa5 91a0 0b3a 	LDS  R26,_ge_voltage_h
000aa7 940e 1abc 	CALL SUBOPT_0x1
000aa9 91e0 0b3b 	LDS  R30,_ge_voltage_l
000aab e0f0      	LDI  R31,0
000aac 0fea      	ADD  R30,R26
000aad 1ffb      	ADC  R31,R27
000aae 93e0 0b3f 	STS  _voltage_ge,R30
000ab0 93f0 0b40 	STS  _voltage_ge+1,R31
                 ; 0000 059B       CRC_H = data_buffer_ge_temp[1];
000ab2 940e 1b39 	CALL SUBOPT_0xB
                 ; 0000 059C       CRC_L = data_buffer_ge_temp[0];
                 ; 0000 059D       loss_count_ge = 0;
                 ; 0000 059E 
                 ; 0000 059F    }
                 ; 0000 05A0    //¹ßÀü±â Àü·ù
                 ; 0000 05A1    if((data_buffer_ge_temp[6] == 0x01)&&(data_buffer_ge_temp[5] == 0x03)&&(data_buffer_ge_temp[4] == 0x02)&&(ge_data_kin ...
                 _0x9A:
                +
000ab4 91a0 0b2a+LDS R26 , _data_buffer_ge_temp + ( 6 )
                 	__GETB2MN _data_buffer_ge_temp,6
000ab6 30a1      	CPI  R26,LOW(0x1)
000ab7 f461      	BRNE _0x9E
                +
000ab8 91a0 0b29+LDS R26 , _data_buffer_ge_temp + ( 5 )
                 	__GETB2MN _data_buffer_ge_temp,5
000aba 30a3      	CPI  R26,LOW(0x3)
000abb f441      	BRNE _0x9E
                +
000abc 91a0 0b28+LDS R26 , _data_buffer_ge_temp + ( 4 )
                 	__GETB2MN _data_buffer_ge_temp,4
000abe 30a2      	CPI  R26,LOW(0x2)
000abf f421      	BRNE _0x9E
000ac0 91a0 0b8d 	LDS  R26,_ge_data_kind
000ac2 30a2      	CPI  R26,LOW(0x2)
000ac3 f009      	BREQ _0x9F
                 _0x9E:
000ac4 c01b      	RJMP _0x9D
                 _0x9F:
                 ; 0000 05A2    {
                 ; 0000 05A3       ge_currunt_h = data_buffer_ge_temp[3];
                +
000ac5 91e0 0b27+LDS R30 , _data_buffer_ge_temp + ( 3 )
                 	__GETB1MN _data_buffer_ge_temp,3
000ac7 93e0 0b3c 	STS  _ge_currunt_h,R30
                 ; 0000 05A4       ge_currunt_l = data_buffer_ge_temp[2];
                +
000ac9 91e0 0b26+LDS R30 , _data_buffer_ge_temp + ( 2 )
                 	__GETB1MN _data_buffer_ge_temp,2
000acb 93e0 0b3d 	STS  _ge_currunt_l,R30
                 ; 0000 05A5       currunt_ge = ((ge_currunt_h * 256) + ge_currunt_l)*10;
000acd 91a0 0b3c 	LDS  R26,_ge_currunt_h
000acf 940e 1abc 	CALL SUBOPT_0x1
000ad1 91e0 0b3d 	LDS  R30,_ge_currunt_l
000ad3 e0f0      	LDI  R31,0
000ad4 0fae      	ADD  R26,R30
000ad5 1fbf      	ADC  R27,R31
000ad6 e0ea      	LDI  R30,LOW(10)
000ad7 e0f0      	LDI  R31,HIGH(10)
000ad8 940e 1c7d 	CALL __MULW12
000ada 93e0 0b41 	STS  _currunt_ge,R30
000adc 93f0 0b42 	STS  _currunt_ge+1,R31
                 ; 0000 05A6       CRC_H = data_buffer_ge_temp[1];
000ade 940e 1b39 	CALL SUBOPT_0xB
                 ; 0000 05A7       CRC_L = data_buffer_ge_temp[0];
                 ; 0000 05A8       loss_count_ge = 0;
                 ; 0000 05A9    }
                 ; 0000 05AA 
                 ; 0000 05AB    //¹ßÀü±â ¿¡·¯»óÅÂ Ç¥½Ã
                 ; 0000 05AC    if((data_buffer_ge_temp[6] == 0x01)&&(data_buffer_ge_temp[5] == 0x03)&&(data_buffer_ge_temp[4] == 0x02)&&(data_buffer ...
                 _0x9D:
                +
000ae0 91a0 0b2a+LDS R26 , _data_buffer_ge_temp + ( 6 )
                 	__GETB2MN _data_buffer_ge_temp,6
000ae2 30a1      	CPI  R26,LOW(0x1)
000ae3 f481      	BRNE _0xA1
                +
000ae4 91a0 0b29+LDS R26 , _data_buffer_ge_temp + ( 5 )
                 	__GETB2MN _data_buffer_ge_temp,5
000ae6 30a3      	CPI  R26,LOW(0x3)
000ae7 f461      	BRNE _0xA1
                +
000ae8 91a0 0b28+LDS R26 , _data_buffer_ge_temp + ( 4 )
                 	__GETB2MN _data_buffer_ge_temp,4
000aea 30a2      	CPI  R26,LOW(0x2)
000aeb f441      	BRNE _0xA1
                +
000aec 91a0 0b27+LDS R26 , _data_buffer_ge_temp + ( 3 )
                 	__GETB2MN _data_buffer_ge_temp,3
000aee 30a0      	CPI  R26,LOW(0x0)
000aef f421      	BRNE _0xA1
000af0 91a0 0b8d 	LDS  R26,_ge_data_kind
000af2 30a3      	CPI  R26,LOW(0x3)
000af3 f009      	BREQ _0xA2
                 _0xA1:
000af4 c00d      	RJMP _0xA0
                 _0xA2:
                 ; 0000 05AD    {
                 ; 0000 05AE       ge_err_data = data_buffer_ge_temp[2];
                +
000af5 91e0 0b26+LDS R30 , _data_buffer_ge_temp + ( 2 )
                 	__GETB1MN _data_buffer_ge_temp,2
000af7 93e0 0b3e 	STS  _ge_err_data,R30
                 ; 0000 05AF 
                 ; 0000 05B0       if((ge_err_data & 0x1f) == 0x00){ge_err_act = NOR;}else{ge_err_act = ERR;}
000af9 71ef      	ANDI R30,LOW(0x1F)
000afa f411      	BRNE _0xA3
000afb e0e0      	LDI  R30,LOW(0)
000afc c001      	RJMP _0x3D6
                 _0xA3:
000afd e0e1      	LDI  R30,LOW(1)
                 _0x3D6:
000afe 93e0 0b43 	STS  _ge_err_act,R30
                 ; 0000 05B1 
                 ; 0000 05B2       CRC_H = data_buffer_ge_temp[1];
000b00 940e 1b39 	CALL SUBOPT_0xB
                 ; 0000 05B3       CRC_L = data_buffer_ge_temp[0];
                 ; 0000 05B4       loss_count_ge = 0;
                 ; 0000 05B5    }
                 ; 0000 05B6 
                 ; 0000 05B7 
                 ; 0000 05B8 }
                 _0xA0:
000b02 9109      	LD   R16,Y+
000b03 9119      	LD   R17,Y+
000b04 91e9      	LD   R30,Y+
000b05 bfef      	OUT  SREG,R30
000b06 91f9      	LD   R31,Y+
000b07 91e9      	LD   R30,Y+
000b08 91b9      	LD   R27,Y+
000b09 91a9      	LD   R26,Y+
000b0a 9019      	LD   R1,Y+
000b0b 9009      	LD   R0,Y+
000b0c 9518      	RETI
                 ; .FEND
                 ;
                 ;// Get a character from the USART2 Receiver buffer
                 ;#pragma used+
                 ;char getchar2(void)
                 ; 0000 05BD {
                 ; 0000 05BE char data;
                 ; 0000 05BF while (rx_counter2==0);
                 ;	data -> R17
                 ; 0000 05C0 data=rx_buffer2[rx_rd_index2++];
                 ; 0000 05C1 #if RX_BUFFER_SIZE2 != 256
                 ; 0000 05C2 if (rx_rd_index2 == RX_BUFFER_SIZE2) rx_rd_index2=0;
                 ; 0000 05C3 #endif
                 ; 0000 05C4 #asm("cli")
                 ; 0000 05C5 --rx_counter2;
                 ; 0000 05C6 #asm("sei")
                 ; 0000 05C7 return data;
                 ; 0000 05C8 }
                 ;#pragma used-
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0000 05CE {
                 _putchar2:
                 ; .FSTART _putchar2
                 ; 0000 05CF while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
000b0d 931a      	ST   -Y,R17
000b0e 2f1a      	MOV  R17,R26
                 ;	c -> R17
                 _0xA9:
000b0f 91e0 00d0 	LDS  R30,208
000b11 72e0      	ANDI R30,LOW(0x20)
000b12 f3e1      	BREQ _0xA9
                 ; 0000 05D0 UDR2=c;
000b13 9310 00d6 	STS  214,R17
                 ; 0000 05D1 }
000b15 c353      	RJMP _0x20A0004
                 ; .FEND
                 ;#pragma used-
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 05D9 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000b16 93aa      	ST   -Y,R26
000b17 93ba      	ST   -Y,R27
000b18 93ea      	ST   -Y,R30
000b19 93fa      	ST   -Y,R31
000b1a b7ef      	IN   R30,SREG
000b1b 93ea      	ST   -Y,R30
                 ; 0000 05DA  temp_a++;
000b1c e0e1      	LDI  R30,LOW(1)
000b1d e0f0      	LDI  R31,HIGH(1)
                +
000b1e 0ede     +ADD R13 , R30
000b1f 1eef     +ADC R14 , R31
                 	__ADDWRR 13,14,30,31
                 ; 0000 05DB  if(temp_a >= 722)
000b20 ede2      	LDI  R30,LOW(722)
000b21 e0f2      	LDI  R31,HIGH(722)
000b22 16de      	CP   R13,R30
000b23 06ef      	CPC  R14,R31
000b24 f054      	BRLT _0xAC
                 ; 0000 05DC     {
                 ; 0000 05DD      temp_b++;
000b25 e0a0      	LDI  R26,LOW(_temp_b)
000b26 e0ba      	LDI  R27,HIGH(_temp_b)
000b27 940e 1b47 	CALL SUBOPT_0xC
                 ; 0000 05DE      temp_a = 0;
000b29 24dd      	CLR  R13
000b2a 24ee      	CLR  R14
                 ; 0000 05DF      temp_out_to_pc_count++;
000b2b e0a4      	LDI  R26,LOW(_temp_out_to_pc_count)
000b2c e0ba      	LDI  R27,HIGH(_temp_out_to_pc_count)
000b2d 940e 1b47 	CALL SUBOPT_0xC
                 ; 0000 05E0 
                 ; 0000 05E1     }
                 ; 0000 05E2 
                 ; 0000 05E3   if(temp_b > 9)//60
                 _0xAC:
000b2f 91a0 0a00 	LDS  R26,_temp_b
000b31 91b0 0a01 	LDS  R27,_temp_b+1
000b33 971a      	SBIW R26,10
000b34 f1cc      	BRLT _0xAD
                 ; 0000 05E4   {
                 ; 0000 05E5     temp_b = 0;
000b35 e0e0      	LDI  R30,LOW(0)
000b36 93e0 0a00 	STS  _temp_b,R30
000b38 93e0 0a01 	STS  _temp_b+1,R30
                 ; 0000 05E6     temp_out_pbit_count++;
000b3a e0a6      	LDI  R26,LOW(_temp_out_pbit_count)
000b3b e0ba      	LDI  R27,HIGH(_temp_out_pbit_count)
000b3c 940e 1b47 	CALL SUBOPT_0xC
                 ; 0000 05E7     if(loss_count_a >= loss_active_delay_time){loss_count_a = loss_active_delay_time;comm_err = 1;}else{loss_count_a++;c ...
000b3e 91a0 0b66 	LDS  R26,_loss_count_a
000b40 91b0 0b67 	LDS  R27,_loss_count_a+1
000b42 9798      	SBIW R26,40
000b43 f040      	BRLO _0xAE
000b44 e2e8      	LDI  R30,LOW(40)
000b45 e0f0      	LDI  R31,HIGH(40)
000b46 93e0 0b66 	STS  _loss_count_a,R30
000b48 93f0 0b67 	STS  _loss_count_a+1,R31
000b4a 9af7      	SBI  0x1E,7
000b4b c005      	RJMP _0xB1
                 _0xAE:
000b4c e6a6      	LDI  R26,LOW(_loss_count_a)
000b4d e0bb      	LDI  R27,HIGH(_loss_count_a)
000b4e 940e 1b47 	CALL SUBOPT_0xC
000b50 98f7      	CBI  0x1E,7
                 _0xB1:
                 ; 0000 05E8 
                 ; 0000 05E9 //    if(loss_count_a >= loss_active_delay_time){loss_count_a = loss_active_delay_time;comm_err_temp = 1;}else{loss_coun ...
                 ; 0000 05EA //
                 ; 0000 05EB ////    if(comm_err_count >= 10)
                 ; 0000 05EC //    {
                 ; 0000 05ED //        comm_err = 1;
                 ; 0000 05EE //        comm_err_count = 10;
                 ; 0000 05EF //    }
                 ; 0000 05F0 //    else
                 ; 0000 05F1 //    {
                 ; 0000 05F2 //        comm_err = 0;
                 ; 0000 05F3 //        if(comm_err_temp == 1){comm_err_count++;}else{comm_err_temp = 0; comm_err_count = 0;}
                 ; 0000 05F4 //    }
                 ; 0000 05F5 //
                 ; 0000 05F6     //if(loss_count_ge >= loss_active_delay_time){loss_count_ge = loss_active_delay_time;comm_ge_err = 1;}else{loss_coun ...
                 ; 0000 05F7    if(loss_count_ge >= loss_ge_active_delay_time){loss_count_ge = loss_ge_active_delay_time;comm_ge_err = 1;}else{loss_c ...
000b51 91a0 0b68 	LDS  R26,_loss_count_ge
000b53 91b0 0b69 	LDS  R27,_loss_count_ge+1
000b55 9754      	SBIW R26,20
000b56 f040      	BRLO _0xB4
000b57 e1e4      	LDI  R30,LOW(20)
000b58 e0f0      	LDI  R31,HIGH(20)
000b59 93e0 0b68 	STS  _loss_count_ge,R30
000b5b 93f0 0b69 	STS  _loss_count_ge+1,R31
000b5d 9468      	SET
000b5e c005      	RJMP _0x3D7
                 _0xB4:
000b5f e6a8      	LDI  R26,LOW(_loss_count_ge)
000b60 e0bb      	LDI  R27,HIGH(_loss_count_ge)
000b61 940e 1b47 	CALL SUBOPT_0xC
000b63 94e8      	CLT
                 _0x3D7:
000b64 f820      	BLD  R2,0
                 ; 0000 05F8    if(led_flash == 0){led_flash = 1;}else{led_flash = 0;}
000b65 91e0 0b4e 	LDS  R30,_led_flash
000b67 30e0      	CPI  R30,0
000b68 f411      	BRNE _0xB6
000b69 e0e1      	LDI  R30,LOW(1)
000b6a c001      	RJMP _0x3D8
                 _0xB6:
000b6b e0e0      	LDI  R30,LOW(0)
                 _0x3D8:
000b6c 93e0 0b4e 	STS  _led_flash,R30
                 ; 0000 05F9    // send_to_div_act = 1;
                 ; 0000 05FA   }
                 ; 0000 05FB 
                 ; 0000 05FC   if(temp_out_pbit_count > 5) //   distributo_pbit 10hz
                 _0xAD:
000b6e 91a0 0a06 	LDS  R26,_temp_out_pbit_count
000b70 91b0 0a07 	LDS  R27,_temp_out_pbit_count+1
000b72 9716      	SBIW R26,6
000b73 f08c      	BRLT _0xB8
                 ; 0000 05FD   {
                 ; 0000 05FE     temp_out_pbit_count = 0;
000b74 e0e0      	LDI  R30,LOW(0)
000b75 93e0 0a06 	STS  _temp_out_pbit_count,R30
000b77 93e0 0a07 	STS  _temp_out_pbit_count+1,R30
                 ; 0000 05FF     TEST_LED_1 = ~TEST_LED_1;
000b79 9b45      	SBIS 0x8,5
000b7a c002      	RJMP _0xB9
000b7b 9845      	CBI  0x8,5
000b7c c001      	RJMP _0xBA
                 _0xB9:
000b7d 9a45      	SBI  0x8,5
                 _0xBA:
                 ; 0000 0600     send_to_div_info_act = 1;
000b7e e0e1      	LDI  R30,LOW(1)
000b7f 93e0 0b58 	STS  _send_to_div_info_act,R30
                 ; 0000 0601 
                 ; 0000 0602     //send to pc pbitÁ¤º¸
                 ; 0000 0603     Distributor_PBIT_act = 1;
000b81 93e0 0b84 	STS  _Distributor_PBIT_act,R30
                 ; 0000 0604 
                 ; 0000 0605     send_to_pc_active = 1;
000b83 9af1      	SBI  0x1E,1
                 ; 0000 0606   }
                 ; 0000 0607   else
000b84 c00c      	RJMP _0xBD
                 _0xB8:
                 ; 0000 0608   {
                 ; 0000 0609        if(send_process_count > 8)
000b85 e0e8      	LDI  R30,LOW(8)
000b86 e0f0      	LDI  R31,HIGH(8)
000b87 15e7      	CP   R30,R7
000b88 05f8      	CPC  R31,R8
000b89 f41c      	BRGE _0xBE
                 ; 0000 060A        {
                 ; 0000 060B         send_process_count = 0;
000b8a 2477      	CLR  R7
000b8b 2488      	CLR  R8
                 ; 0000 060C        }
                 ; 0000 060D        else
000b8c c004      	RJMP _0xBF
                 _0xBE:
                 ; 0000 060E        {
                 ; 0000 060F         send_process_count++;
000b8d e0e1      	LDI  R30,LOW(1)
000b8e e0f0      	LDI  R31,HIGH(1)
                +
000b8f 0e7e     +ADD R7 , R30
000b90 1e8f     +ADC R8 , R31
                 	__ADDWRR 7,8,30,31
                 ; 0000 0610        }
                 _0xBF:
                 ; 0000 0611   }
                 _0xBD:
                 ; 0000 0612 
                 ; 0000 0613 
                 ; 0000 0614 
                 ; 0000 0615   if(temp_out_to_pc_count > 5)//60  //  distributo_device_status 1hz
000b91 91a0 0a04 	LDS  R26,_temp_out_to_pc_count
000b93 91b0 0a05 	LDS  R27,_temp_out_to_pc_count+1
000b95 9716      	SBIW R26,6
000b96 f13c      	BRLT _0xC0
                 ; 0000 0616   {
                 ; 0000 0617     //send to pc
                 ; 0000 0618   TEST_LED_2 = ~TEST_LED_2;
000b97 9b46      	SBIS 0x8,6
000b98 c002      	RJMP _0xC1
000b99 9846      	CBI  0x8,6
000b9a c001      	RJMP _0xC2
                 _0xC1:
000b9b 9a46      	SBI  0x8,6
                 _0xC2:
                 ; 0000 0619     temp_out_to_pc_count = 0;
000b9c e0e0      	LDI  R30,LOW(0)
000b9d 93e0 0a04 	STS  _temp_out_to_pc_count,R30
000b9f 93e0 0a05 	STS  _temp_out_to_pc_count+1,R30
                 ; 0000 061A 
                 ; 0000 061B     send_to_ge_active = 1;
000ba1 e0e1      	LDI  R30,LOW(1)
000ba2 93e0 0b8b 	STS  _send_to_ge_active,R30
                 ; 0000 061C 
                 ; 0000 061D 
                 ; 0000 061E     if(mode_change_and_init == 1)
000ba4 91a0 0b8e 	LDS  R26,_mode_change_and_init
000ba6 30a1      	CPI  R26,LOW(0x1)
000ba7 f499      	BRNE _0xC3
                 ; 0000 061F     {
                 ; 0000 0620       if(mode_change_count >= mode_change_count_max)
000ba8 91a0 0b8f 	LDS  R26,_mode_change_count
000baa 35a0      	CPI  R26,LOW(0x50)
000bab f048      	BRLO _0xC4
                 ; 0000 0621       {
                 ; 0000 0622         buzzer_out_wait = 1;
000bac 93e0 0b90 	STS  _buzzer_out_wait,R30
                 ; 0000 0623         mode_change_count = mode_change_count_max;
000bae e5e0      	LDI  R30,LOW(80)
000baf 93e0 0b8f 	STS  _mode_change_count,R30
                 ; 0000 0624         mode_change_and_init = 0;
000bb1 e0e0      	LDI  R30,LOW(0)
000bb2 93e0 0b8e 	STS  _mode_change_and_init,R30
                 ; 0000 0625       }
                 ; 0000 0626       else
000bb4 c005      	RJMP _0xC5
                 _0xC4:
                 ; 0000 0627       {
                 ; 0000 0628         mode_change_count++;
000bb5 91e0 0b8f 	LDS  R30,_mode_change_count
000bb7 5fef      	SUBI R30,-LOW(1)
000bb8 93e0 0b8f 	STS  _mode_change_count,R30
                 ; 0000 0629       }
                 _0xC5:
                 ; 0000 062A     }
                 ; 0000 062B     else
000bba c003      	RJMP _0xC6
                 _0xC3:
                 ; 0000 062C     {
                 ; 0000 062D       mode_change_count = 0;
000bbb e0e0      	LDI  R30,LOW(0)
000bbc 93e0 0b8f 	STS  _mode_change_count,R30
                 ; 0000 062E     }
                 _0xC6:
                 ; 0000 062F   }
                 ; 0000 0630 }
                 _0xC0:
000bbe 91e9      	LD   R30,Y+
000bbf bfef      	OUT  SREG,R30
000bc0 91f9      	LD   R31,Y+
000bc1 91e9      	LD   R30,Y+
000bc2 91b9      	LD   R27,Y+
000bc3 91a9      	LD   R26,Y+
000bc4 9518      	RETI
                 ; .FEND
                 ;
                 ;void pulse(void)
                 ; 0000 0633 {
                 _pulse:
                 ; .FSTART _pulse
                 ; 0000 0634     delay_us(1);
                +
000bc5 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000bc6 958a     +DEC R24
000bc7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0635     LED_CLK = 1;
000bc8 9a43      	SBI  0x8,3
                 ; 0000 0636     delay_us(1);
                +
000bc9 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000bca 958a     +DEC R24
000bcb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0637     LED_CLK = 0;
000bcc 9843      	CBI  0x8,3
                 ; 0000 0638 }
000bcd 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void send_to_ge(void)
                 ; 0000 063C {
                 _send_to_ge:
                 ; .FSTART _send_to_ge
                 ; 0000 063D  RE_DE1 = 1;
000bce 9a73      	SBI  0xE,3
                 ; 0000 063E  delay_us(30);
                +
000bcf e68f     +LDI R24 , LOW ( 111 )
                +__DELAY_USB_LOOP :
000bd0 958a     +DEC R24
000bd1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 111
                 ; 0000 063F 
                 ; 0000 0640  if(ge_data_kind > 3){ge_data_kind = 1;}else{ge_data_kind++;}
000bd2 91a0 0b8d 	LDS  R26,_ge_data_kind
000bd4 30a4      	CPI  R26,LOW(0x4)
000bd5 f010      	BRLO _0xCD
000bd6 e0e1      	LDI  R30,LOW(1)
000bd7 c003      	RJMP _0x3D9
                 _0xCD:
000bd8 91e0 0b8d 	LDS  R30,_ge_data_kind
000bda 5fef      	SUBI R30,-LOW(1)
                 _0x3D9:
000bdb 93e0 0b8d 	STS  _ge_data_kind,R30
                 ; 0000 0641 
                 ; 0000 0642  // ge_data_kind = 3;
                 ; 0000 0643 
                 ; 0000 0644 
                 ; 0000 0645  if(ge_data_kind == 1)  //¹ßÀü±â Àü¾Ð
000bdd 91a0 0b8d 	LDS  R26,_ge_data_kind
000bdf 30a1      	CPI  R26,LOW(0x1)
000be0 f449      	BRNE _0xCF
                 ; 0000 0646  {
                 ; 0000 0647  putchar2(0x01);  //control address
000be1 940e 1b4d 	CALL SUBOPT_0xD
                 ; 0000 0648  putchar2(0x03);  //modebus function number
                 ; 0000 0649  putchar2(0x23);  //object number
                 ; 0000 064A  putchar2(0xc8);  //object number
000be3 eca8      	LDI  R26,LOW(200)
000be4 940e 1b56 	CALL SUBOPT_0xE
                 ; 0000 064B  putchar2(0x00);  //length
                 ; 0000 064C  putchar2(0x01);  //length
                 ; 0000 064D  putchar2(0x0e);  //under of crc
000be6 e0ae      	LDI  R26,LOW(14)
000be7 df25      	RCALL _putchar2
                 ; 0000 064E  putchar2(0x70);  //upper of crc
000be8 e7a0      	LDI  R26,LOW(112)
000be9 df23      	RCALL _putchar2
                 ; 0000 064F  }
                 ; 0000 0650 
                 ; 0000 0651 
                 ; 0000 0652  if(ge_data_kind == 2) //¹ßÀü±â Àü·ù
                 _0xCF:
000bea 91a0 0b8d 	LDS  R26,_ge_data_kind
000bec 30a2      	CPI  R26,LOW(0x2)
000bed f449      	BRNE _0xD0
                 ; 0000 0653  {
                 ; 0000 0654  putchar2(0x01);  //control address
000bee 940e 1b4d 	CALL SUBOPT_0xD
                 ; 0000 0655  putchar2(0x03);  //modebus function number
                 ; 0000 0656  putchar2(0x23);  //object number
                 ; 0000 0657  putchar2(0xc4);  //object number
000bf0 eca4      	LDI  R26,LOW(196)
000bf1 940e 1b56 	CALL SUBOPT_0xE
                 ; 0000 0658  putchar2(0x00);  //length
                 ; 0000 0659  putchar2(0x01);  //length
                 ; 0000 065A  putchar2(0xce);  //under of crc
000bf3 ecae      	LDI  R26,LOW(206)
000bf4 df18      	RCALL _putchar2
                 ; 0000 065B  putchar2(0x73);  //upper of crc
000bf5 e7a3      	LDI  R26,LOW(115)
000bf6 df16      	RCALL _putchar2
                 ; 0000 065C  }
                 ; 0000 065D 
                 ; 0000 065E  if(ge_data_kind == 3) //¹ßÀü±â ¿¡·¯
                 _0xD0:
000bf7 91a0 0b8d 	LDS  R26,_ge_data_kind
000bf9 30a3      	CPI  R26,LOW(0x3)
000bfa f469      	BRNE _0xD1
                 ; 0000 065F  {
                 ; 0000 0660  putchar2(0x01);  //control address
000bfb e0a1      	LDI  R26,LOW(1)
000bfc df10      	RCALL _putchar2
                 ; 0000 0661  putchar2(0x03);  //modebus function number
000bfd e0a3      	LDI  R26,LOW(3)
000bfe df0e      	RCALL _putchar2
                 ; 0000 0662  putchar2(0x2d);  //object number
000bff e2ad      	LDI  R26,LOW(45)
000c00 df0c      	RCALL _putchar2
                 ; 0000 0663  putchar2(0x73);  //object number
000c01 e7a3      	LDI  R26,LOW(115)
000c02 940e 1b56 	CALL SUBOPT_0xE
                 ; 0000 0664  putchar2(0x00);  //length
                 ; 0000 0665  putchar2(0x01);  //length
                 ; 0000 0666  putchar2(0x7c);  //under of crc
000c04 e7ac      	LDI  R26,LOW(124)
000c05 df07      	RCALL _putchar2
                 ; 0000 0667  putchar2(0xbd);  //upper of crc
000c06 ebad      	LDI  R26,LOW(189)
000c07 df05      	RCALL _putchar2
                 ; 0000 0668  }
                 ; 0000 0669 
                 ; 0000 066A // if(ge_data_kind == 3) // ¿£Áø °ú¼Óµµ º¸È£
                 ; 0000 066B // {
                 ; 0000 066C // putchar2(0x01);  //control address
                 ; 0000 066D // putchar2(0x03);  //modebus function number
                 ; 0000 066E // putchar2(0x20);  //object number
                 ; 0000 066F // putchar2(0x47);  //object number
                 ; 0000 0670 // putchar2(0x00);  //length
                 ; 0000 0671 // putchar2(0x01);  //length
                 ; 0000 0672 // putchar2(0x3f);  //under of crc
                 ; 0000 0673 // putchar2(0xdf);  //upper of crc
                 ; 0000 0674 // }
                 ; 0000 0675 //
                 ; 0000 0676 // if(ge_data_kind == 4)  // ¿£Áø ¿ÀÀÏ¾Ð·Â º¸È£/°æ°í
                 ; 0000 0677 // {
                 ; 0000 0678 // putchar2(0x01);  //control address
                 ; 0000 0679 // putchar2(0x03);  //modebus function number
                 ; 0000 067A // putchar2(0x09);  //object number
                 ; 0000 067B // putchar2(0x41);  //object number
                 ; 0000 067C // putchar2(0x00);  //length
                 ; 0000 067D // putchar2(0x01);  //length
                 ; 0000 067E // putchar2(0xd7);  //under of crc
                 ; 0000 067F // putchar2(0x82);  //upper of crc
                 ; 0000 0680 // }
                 ; 0000 0681 //
                 ; 0000 0682 // if(ge_data_kind == 5) //°úÀü¾Ð bit
                 ; 0000 0683 // {
                 ; 0000 0684 // putchar2(0x01);  //control address
                 ; 0000 0685 // putchar2(0x03);  //modebus function number
                 ; 0000 0686 // putchar2(0x2c);  //object number
                 ; 0000 0687 // putchar2(0x5f);  //object number
                 ; 0000 0688 // putchar2(0x00);  //length
                 ; 0000 0689 // putchar2(0x01);  //length
                 ; 0000 068A // putchar2(0xbc);  //under of crc
                 ; 0000 068B // putchar2(0x88);  //upper of crc
                 ; 0000 068C // }
                 ; 0000 068D //
                 ; 0000 068E // if(ge_data_kind == 6)//ÀúÀü¾Ð bit
                 ; 0000 068F // {
                 ; 0000 0690 // putchar2(0x01);  //control address
                 ; 0000 0691 // putchar2(0x03);  //modebus function number
                 ; 0000 0692 // putchar2(0x2c);  //object number
                 ; 0000 0693 // putchar2(0x63);  //object number
                 ; 0000 0694 // putchar2(0x00);  //length
                 ; 0000 0695 // putchar2(0x01);  //length
                 ; 0000 0696 // putchar2(0x7c);  //under of crc
                 ; 0000 0697 // putchar2(0x84);  //upper of crc
                 ; 0000 0698 // }
                 ; 0000 0699 //
                 ; 0000 069A // if(ge_data_kind == 7) // °úÀü·ù bit
                 ; 0000 069B // {
                 ; 0000 069C // putchar2(0x01);  //control address
                 ; 0000 069D // putchar2(0x03);  //modebus function number
                 ; 0000 069E // putchar2(0x36);  //object number
                 ; 0000 069F // putchar2(0x5c);  //object number
                 ; 0000 06A0 // putchar2(0x00);  //length
                 ; 0000 06A1 // putchar2(0x01);  //length
                 ; 0000 06A2 // putchar2(0x4b);  //under of crc
                 ; 0000 06A3 // putchar2(0x90);  //upper of crc
                 ; 0000 06A4 // }
                 ; 0000 06A5 //
                 ; 0000 06A6 //  if(ge_data_kind == 8) //¹ßÀü±â Àü¾Ð voltage
                 ; 0000 06A7 // {
                 ; 0000 06A8 // putchar2(0x01);  //control address
                 ; 0000 06A9 // putchar2(0x03);  //modebus function number
                 ; 0000 06AA // putchar2(0x20);  //object number
                 ; 0000 06AB // putchar2(0x15);  //object number
                 ; 0000 06AC // putchar2(0x00);  //length
                 ; 0000 06AD // putchar2(0x01);  //length
                 ; 0000 06AE // putchar2(0x9e);  //under of crc
                 ; 0000 06AF // putchar2(0x0e);  //upper of crc
                 ; 0000 06B0 // }
                 ; 0000 06B1 
                 ; 0000 06B2  delay_us(350);
                 _0xD1:
                +
000c08 ec88     +LDI R24 , LOW ( 968 )
000c09 e093     +LDI R25 , HIGH ( 968 )
                +__DELAY_USW_LOOP :
000c0a 9701     +SBIW R24 , 1
000c0b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 968
                 ; 0000 06B3 
                 ; 0000 06B4   RE_DE1 = 0;
000c0c 9873      	CBI  0xE,3
                 ; 0000 06B5  send_to_ge_active = 0;
000c0d e0e0      	LDI  R30,LOW(0)
000c0e 93e0 0b8b 	STS  _send_to_ge_active,R30
                 ; 0000 06B6 }
000c10 9508      	RET
                 ; .FEND
                 ;
                 ;void send_to_div(void)
                 ; 0000 06B9 {
                 _send_to_div:
                 ; .FSTART _send_to_div
                 ; 0000 06BA    RE_DE0 = 1;
000c11 9a72      	SBI  0xE,2
                 ; 0000 06BB    delay_ms(1);
000c12 e0a1      	LDI  R26,LOW(1)
000c13 e0b0      	LDI  R27,0
000c14 940e 1d27 	CALL _delay_ms
                 ; 0000 06BC 
                 ; 0000 06BD     putchar(0x7f);  //9
000c16 940e 1b5e 	CALL SUBOPT_0xF
                 ; 0000 06BE     putchar(0xfe);  //8
                 ; 0000 06BF     putchar(0x00);  //7
000c18 e0a0      	LDI  R26,LOW(0)
000c19 940e 1a8b 	CALL _putchar
                 ; 0000 06C0 
                 ; 0000 06C1 //
                 ; 0000 06C2 //    if(!ADDRESS_3)
                 ; 0000 06C3 //    {
                 ; 0000 06C4 //    if(ADDRESS_1){temp_control_2 = temp_control_2 | 0x80;}else{temp_control_2 = temp_control_2 & ~0x80;}
                 ; 0000 06C5 //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x40;}else{temp_control_2 = temp_control_2 & ~0x40;}
                 ; 0000 06C6 //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x20;}else{temp_control_2 = temp_control_2 & ~0x20;}
                 ; 0000 06C7 //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x10;}else{temp_control_2 = temp_control_2 & ~0x10;}
                 ; 0000 06C8 //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x08;}else{temp_control_2 = temp_control_2 & ~0x08;}
                 ; 0000 06C9 //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x04;}else{temp_control_2 = temp_control_2 & ~0x04;}
                 ; 0000 06CA //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x02;}else{temp_control_2 = temp_control_2 & ~0x02;}
                 ; 0000 06CB //    if(ADDRESS_2){temp_control_2 = temp_control_2 | 0x01;}else{temp_control_2 = temp_control_2 & ~0x01;}
                 ; 0000 06CC //
                 ; 0000 06CD //    if(ADDRESS_1){temp_control_1 = temp_control_1 | 0x80;}else{temp_control_1 = temp_control_1 & ~0x80;}
                 ; 0000 06CE //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x40;}else{temp_control_1 = temp_control_1 & ~0x40;}
                 ; 0000 06CF //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x20;}else{temp_control_1 = temp_control_1 & ~0x20;}
                 ; 0000 06D0 //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x10;}else{temp_control_1 = temp_control_1 & ~0x10;}
                 ; 0000 06D1 //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x08;}else{temp_control_1 = temp_control_1 & ~0x08;}
                 ; 0000 06D2 //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x04;}else{temp_control_1 = temp_control_1 & ~0x04;}
                 ; 0000 06D3 //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x02;}else{temp_control_1 = temp_control_1 & ~0x02;}
                 ; 0000 06D4 //    if(ADDRESS_2){temp_control_1 = temp_control_1 | 0x01;}else{temp_control_1 = temp_control_1 & ~0x01;}
                 ; 0000 06D5 //    }
                 ; 0000 06D6 
                 ; 0000 06D7 //    if((temp_control_2 & 0x20) == 0x20){temp_control_1_ |= 0x10;} //13
                 ; 0000 06D8 //    if((temp_control_2 & 0x10) == 0x10){temp_control_2_ |= 0x40;} //12
                 ; 0000 06D9 //    if((temp_control_2 & 0x08) == 0x08){temp_control_1_ |= 0x20;} //11
                 ; 0000 06DA //    if((temp_control_2 & 0x04) == 0x04){temp_control_2_ |= 0x08;} //10
                 ; 0000 06DB //    if((temp_control_2 & 0x02) == 0x02){temp_control_1_ |= 0x40;} //09
                 ; 0000 06DC //    if((temp_control_2 & 0x01) == 0x01){temp_control_1_ |= 0x08;} //08
                 ; 0000 06DD //
                 ; 0000 06DE //    if((temp_control_1 & 0x80) == 0x80){temp_control_1_ |= 0x04;} //07
                 ; 0000 06DF //    if((temp_control_1 & 0x40) == 0x40){temp_control_2_ |= 0x10;} //06
                 ; 0000 06E0 //    if((temp_control_1 & 0x20) == 0x20){temp_control_2_ |= 0x04;} //05
                 ; 0000 06E1 //    if((temp_control_1 & 0x10) == 0x10){temp_control_2_ |= 0x20;} //04
                 ; 0000 06E2 //    if((temp_control_1 & 0x08) == 0x08){temp_control_1_ |= 0x02;} //03
                 ; 0000 06E3 //    if((temp_control_1 & 0x04) == 0x04){temp_control_1_ |= 0x01;} //02
                 ; 0000 06E4 //    if((temp_control_1 & 0x02) == 0x02){temp_control_2_ |= 0x02;} //01
                 ; 0000 06E5 //    if((temp_control_1 & 0x01) == 0x01){temp_control_2_ |= 0x01;} //00
                 ; 0000 06E6 //
                 ; 0000 06E7 //    if((temp_control_2 & 0x20) == 0x20){temp_control_1_ |= 0x10;} //13
                 ; 0000 06E8 //    if((temp_control_2 & 0x10) == 0x10){temp_control_2_ |= 0x40;} //12
                 ; 0000 06E9 //    if((temp_control_2 & 0x08) == 0x08){temp_control_1_ |= 0x20;} //11
                 ; 0000 06EA //    if((temp_control_2 & 0x04) == 0x04){temp_control_2_ |= 0x08;} //10
                 ; 0000 06EB //    if((temp_control_2 & 0x02) == 0x02){temp_control_1_ |= 0x40;} //09
                 ; 0000 06EC //    if((temp_control_2 & 0x01) == 0x01){temp_control_1_ |= 0x08;} //08
                 ; 0000 06ED //
                 ; 0000 06EE //    if((temp_control_1 & 0x80) == 0x80){temp_control_1_ |= 0x04;} //07
                 ; 0000 06EF //    if((temp_control_1 & 0x40) == 0x40){temp_control_2_ |= 0x10;} //06
                 ; 0000 06F0 //    if((temp_control_1 & 0x20) == 0x20){temp_control_2_ |= 0x04;} //05 //////
                 ; 0000 06F1 //    if((temp_control_1 & 0x10) == 0x10){temp_control_2_ |= 0x20;} //04
                 ; 0000 06F2 //    if((temp_control_1 & 0x08) == 0x08){temp_control_1_ |= 0x02;} //03
                 ; 0000 06F3 //    if((temp_control_1 & 0x04) == 0x04){temp_control_1_ |= 0x01;} //02
                 ; 0000 06F4 //    if((temp_control_1 & 0x02) == 0x02){temp_control_2_ |= 0x02;} //01  ¿î¿ëÃ³¸®±â2 Àü½Ã±â2
                 ; 0000 06F5 //    if((temp_control_1 & 0x01) == 0x01){temp_control_2_ |= 0x01;} //00  ÀÓ¹«Ã³¸®±â Á¶Á¤±â 2
                 ; 0000 06F6 
                 ; 0000 06F7     if(temp_control_sel == 0xff)  //ÀüÃ¼ ¼Ë´Ù¿î ¶Ç´Â ÀüÃ¼ ÄÑ±â ¸í·É
000c1b 91a0 0b56 	LDS  R26,_temp_control_sel
000c1d 3faf      	CPI  R26,LOW(0xFF)
000c1e f4e9      	BRNE _0xD6
                 ; 0000 06F8     {
                 ; 0000 06F9 //       temp_control_1_ = temp_control_1_old;
                 ; 0000 06FA //       temp_control_2_ = temp_control_2_old;
                 ; 0000 06FB         if((temp_control_1 == 0xff)&&(temp_control_2 == 0xff))
000c1f 91a0 0b50 	LDS  R26,_temp_control_1
000c21 3faf      	CPI  R26,LOW(0xFF)
000c22 f421      	BRNE _0xD8
000c23 91a0 0b51 	LDS  R26,_temp_control_2
000c25 3faf      	CPI  R26,LOW(0xFF)
000c26 f009      	BREQ _0xD9
                 _0xD8:
000c27 c005      	RJMP _0xD7
                 _0xD9:
                 ; 0000 06FC         {
                 ; 0000 06FD           temp_control_1_ = 0xff;
000c28 efef      	LDI  R30,LOW(255)
000c29 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 06FE           temp_control_2_ = 0xff;
000c2b 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 06FF         }
                 ; 0000 0700 
                 ; 0000 0701         if((temp_control_1 == 0x00)&&(temp_control_2 == 0x00))
                 _0xD7:
000c2d 91a0 0b50 	LDS  R26,_temp_control_1
000c2f 30a0      	CPI  R26,LOW(0x0)
000c30 f421      	BRNE _0xDB
000c31 91a0 0b51 	LDS  R26,_temp_control_2
000c33 30a0      	CPI  R26,LOW(0x0)
000c34 f009      	BREQ _0xDC
                 _0xDB:
000c35 c005      	RJMP _0xDA
                 _0xDC:
                 ; 0000 0702         {
                 ; 0000 0703           temp_control_1_ = 0x00;
000c36 e0e0      	LDI  R30,LOW(0)
000c37 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0704           temp_control_2_ = 0x00;
000c39 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0705         }
                 ; 0000 0706     }
                 _0xDA:
                 ; 0000 0707     else
000c3b c104      	RJMP _0xDD
                 _0xD6:
                 ; 0000 0708     {
                 ; 0000 0709 //    if(temp_control_1_ != 0x00){temp_control_1_ = temp_control_1_old;} //10/12/26
                 ; 0000 070A //    if(temp_control_2_ != 0x00){temp_control_2_ = temp_control_2_old;}
                 ; 0000 070B     temp_control_1_ = temp_control_1_old;
000c3c 91e0 0b54 	LDS  R30,_temp_control_1_old
000c3e 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 070C     temp_control_2_ = temp_control_2_old;
000c40 91e0 0b55 	LDS  R30,_temp_control_2_old
000c42 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 070D     if(temp_control_sel == 14){if((temp_control_2 & 0x20) == 0x20){temp_control_1_ |= 0x10;}else{temp_control_1_ &= ~0x1 ...
000c44 91a0 0b56 	LDS  R26,_temp_control_sel
000c46 30ae      	CPI  R26,LOW(0xE)
000c47 f471      	BRNE _0xDE
000c48 91e0 0b51 	LDS  R30,_temp_control_2
000c4a 72e0      	ANDI R30,LOW(0x20)
000c4b 32e0      	CPI  R30,LOW(0x20)
000c4c f421      	BRNE _0xDF
000c4d 91e0 0b52 	LDS  R30,_temp_control_1_
000c4f 61e0      	ORI  R30,0x10
000c50 c003      	RJMP _0x3DA
                 _0xDF:
000c51 91e0 0b52 	LDS  R30,_temp_control_1_
000c53 7eef      	ANDI R30,0xEF
                 _0x3DA:
000c54 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 070E     if(temp_control_sel == 13){if((temp_control_2 & 0x10) == 0x10){temp_control_2_ |= 0x40;}else{temp_control_2_ &= ~0x4 ...
                 _0xDE:
000c56 91a0 0b56 	LDS  R26,_temp_control_sel
000c58 30ad      	CPI  R26,LOW(0xD)
000c59 f471      	BRNE _0xE1
000c5a 91e0 0b51 	LDS  R30,_temp_control_2
000c5c 71e0      	ANDI R30,LOW(0x10)
000c5d 31e0      	CPI  R30,LOW(0x10)
000c5e f421      	BRNE _0xE2
000c5f 91e0 0b53 	LDS  R30,_temp_control_2_
000c61 64e0      	ORI  R30,0x40
000c62 c003      	RJMP _0x3DB
                 _0xE2:
000c63 91e0 0b53 	LDS  R30,_temp_control_2_
000c65 7bef      	ANDI R30,0xBF
                 _0x3DB:
000c66 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 070F     if(temp_control_sel == 12){if((temp_control_2 & 0x08) == 0x08){temp_control_1_ |= 0x20;}else{temp_control_1_ &= ~0x2 ...
                 _0xE1:
000c68 91a0 0b56 	LDS  R26,_temp_control_sel
000c6a 30ac      	CPI  R26,LOW(0xC)
000c6b f471      	BRNE _0xE4
000c6c 91e0 0b51 	LDS  R30,_temp_control_2
000c6e 70e8      	ANDI R30,LOW(0x8)
000c6f 30e8      	CPI  R30,LOW(0x8)
000c70 f421      	BRNE _0xE5
000c71 91e0 0b52 	LDS  R30,_temp_control_1_
000c73 62e0      	ORI  R30,0x20
000c74 c003      	RJMP _0x3DC
                 _0xE5:
000c75 91e0 0b52 	LDS  R30,_temp_control_1_
000c77 7def      	ANDI R30,0xDF
                 _0x3DC:
000c78 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0710     if(temp_control_sel == 11){if((temp_control_2 & 0x04) == 0x04){temp_control_2_ |= 0x08;}else{temp_control_2_ &= ~0x0 ...
                 _0xE4:
000c7a 91a0 0b56 	LDS  R26,_temp_control_sel
000c7c 30ab      	CPI  R26,LOW(0xB)
000c7d f471      	BRNE _0xE7
000c7e 91e0 0b51 	LDS  R30,_temp_control_2
000c80 70e4      	ANDI R30,LOW(0x4)
000c81 30e4      	CPI  R30,LOW(0x4)
000c82 f421      	BRNE _0xE8
000c83 91e0 0b53 	LDS  R30,_temp_control_2_
000c85 60e8      	ORI  R30,8
000c86 c003      	RJMP _0x3DD
                 _0xE8:
000c87 91e0 0b53 	LDS  R30,_temp_control_2_
000c89 7fe7      	ANDI R30,0XF7
                 _0x3DD:
000c8a 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0711     if(temp_control_sel == 10){if((temp_control_2 & 0x02) == 0x02){temp_control_1_ |= 0x40;}else{temp_control_1_ &= ~0x4 ...
                 _0xE7:
000c8c 91a0 0b56 	LDS  R26,_temp_control_sel
000c8e 30aa      	CPI  R26,LOW(0xA)
000c8f f471      	BRNE _0xEA
000c90 91e0 0b51 	LDS  R30,_temp_control_2
000c92 70e2      	ANDI R30,LOW(0x2)
000c93 30e2      	CPI  R30,LOW(0x2)
000c94 f421      	BRNE _0xEB
000c95 91e0 0b52 	LDS  R30,_temp_control_1_
000c97 64e0      	ORI  R30,0x40
000c98 c003      	RJMP _0x3DE
                 _0xEB:
000c99 91e0 0b52 	LDS  R30,_temp_control_1_
000c9b 7bef      	ANDI R30,0xBF
                 _0x3DE:
000c9c 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0712     if(temp_control_sel == 9){if((temp_control_2 & 0x01) == 0x01){temp_control_1_ |= 0x08;}else{temp_control_1_ &= ~0x08 ...
                 _0xEA:
000c9e 91a0 0b56 	LDS  R26,_temp_control_sel
000ca0 30a9      	CPI  R26,LOW(0x9)
000ca1 f471      	BRNE _0xED
000ca2 91e0 0b51 	LDS  R30,_temp_control_2
000ca4 70e1      	ANDI R30,LOW(0x1)
000ca5 30e1      	CPI  R30,LOW(0x1)
000ca6 f421      	BRNE _0xEE
000ca7 91e0 0b52 	LDS  R30,_temp_control_1_
000ca9 60e8      	ORI  R30,8
000caa c003      	RJMP _0x3DF
                 _0xEE:
000cab 91e0 0b52 	LDS  R30,_temp_control_1_
000cad 7fe7      	ANDI R30,0XF7
                 _0x3DF:
000cae 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0713 
                 ; 0000 0714     if(temp_control_sel == 8){if((temp_control_1 & 0x80) == 0x80){temp_control_1_ |= 0x04;}else{temp_control_1_ &= ~0x04 ...
                 _0xED:
000cb0 91a0 0b56 	LDS  R26,_temp_control_sel
000cb2 30a8      	CPI  R26,LOW(0x8)
000cb3 f471      	BRNE _0xF0
000cb4 91e0 0b50 	LDS  R30,_temp_control_1
000cb6 78e0      	ANDI R30,LOW(0x80)
000cb7 38e0      	CPI  R30,LOW(0x80)
000cb8 f421      	BRNE _0xF1
000cb9 91e0 0b52 	LDS  R30,_temp_control_1_
000cbb 60e4      	ORI  R30,4
000cbc c003      	RJMP _0x3E0
                 _0xF1:
000cbd 91e0 0b52 	LDS  R30,_temp_control_1_
000cbf 7feb      	ANDI R30,0xFB
                 _0x3E0:
000cc0 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0715     if(temp_control_sel == 7){if((temp_control_1 & 0x40) == 0x40){temp_control_2_ |= 0x10;}else{temp_control_2_ &= ~0x10 ...
                 _0xF0:
000cc2 91a0 0b56 	LDS  R26,_temp_control_sel
000cc4 30a7      	CPI  R26,LOW(0x7)
000cc5 f471      	BRNE _0xF3
000cc6 91e0 0b50 	LDS  R30,_temp_control_1
000cc8 74e0      	ANDI R30,LOW(0x40)
000cc9 34e0      	CPI  R30,LOW(0x40)
000cca f421      	BRNE _0xF4
000ccb 91e0 0b53 	LDS  R30,_temp_control_2_
000ccd 61e0      	ORI  R30,0x10
000cce c003      	RJMP _0x3E1
                 _0xF4:
000ccf 91e0 0b53 	LDS  R30,_temp_control_2_
000cd1 7eef      	ANDI R30,0xEF
                 _0x3E1:
000cd2 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0716     if(temp_control_sel == 6){if((temp_control_1 & 0x20) == 0x20){temp_control_2_ |= 0x04;}else{temp_control_2_ &= ~0x04 ...
                 _0xF3:
000cd4 91a0 0b56 	LDS  R26,_temp_control_sel
000cd6 30a6      	CPI  R26,LOW(0x6)
000cd7 f471      	BRNE _0xF6
000cd8 91e0 0b50 	LDS  R30,_temp_control_1
000cda 72e0      	ANDI R30,LOW(0x20)
000cdb 32e0      	CPI  R30,LOW(0x20)
000cdc f421      	BRNE _0xF7
000cdd 91e0 0b53 	LDS  R30,_temp_control_2_
000cdf 60e4      	ORI  R30,4
000ce0 c003      	RJMP _0x3E2
                 _0xF7:
000ce1 91e0 0b53 	LDS  R30,_temp_control_2_
000ce3 7feb      	ANDI R30,0xFB
                 _0x3E2:
000ce4 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0717     if(temp_control_sel == 5){if((temp_control_1 & 0x10) == 0x10){temp_control_2_ |= 0x20;}else{temp_control_2_ &= ~0x20 ...
                 _0xF6:
000ce6 91a0 0b56 	LDS  R26,_temp_control_sel
000ce8 30a5      	CPI  R26,LOW(0x5)
000ce9 f471      	BRNE _0xF9
000cea 91e0 0b50 	LDS  R30,_temp_control_1
000cec 71e0      	ANDI R30,LOW(0x10)
000ced 31e0      	CPI  R30,LOW(0x10)
000cee f421      	BRNE _0xFA
000cef 91e0 0b53 	LDS  R30,_temp_control_2_
000cf1 62e0      	ORI  R30,0x20
000cf2 c003      	RJMP _0x3E3
                 _0xFA:
000cf3 91e0 0b53 	LDS  R30,_temp_control_2_
000cf5 7def      	ANDI R30,0xDF
                 _0x3E3:
000cf6 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0718     if(temp_control_sel == 4){if((temp_control_1 & 0x08) == 0x08){temp_control_1_ |= 0x02;}else{temp_control_1_ &= ~0x02 ...
                 _0xF9:
000cf8 91a0 0b56 	LDS  R26,_temp_control_sel
000cfa 30a4      	CPI  R26,LOW(0x4)
000cfb f471      	BRNE _0xFC
000cfc 91e0 0b50 	LDS  R30,_temp_control_1
000cfe 70e8      	ANDI R30,LOW(0x8)
000cff 30e8      	CPI  R30,LOW(0x8)
000d00 f421      	BRNE _0xFD
000d01 91e0 0b52 	LDS  R30,_temp_control_1_
000d03 60e2      	ORI  R30,2
000d04 c003      	RJMP _0x3E4
                 _0xFD:
000d05 91e0 0b52 	LDS  R30,_temp_control_1_
000d07 7fed      	ANDI R30,0xFD
                 _0x3E4:
000d08 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0719     if(temp_control_sel == 3){if((temp_control_1 & 0x04) == 0x04){temp_control_1_ |= 0x01;}else{temp_control_1_ &= ~0x01 ...
                 _0xFC:
000d0a 91a0 0b56 	LDS  R26,_temp_control_sel
000d0c 30a3      	CPI  R26,LOW(0x3)
000d0d f471      	BRNE _0xFF
000d0e 91e0 0b50 	LDS  R30,_temp_control_1
000d10 70e4      	ANDI R30,LOW(0x4)
000d11 30e4      	CPI  R30,LOW(0x4)
000d12 f421      	BRNE _0x100
000d13 91e0 0b52 	LDS  R30,_temp_control_1_
000d15 60e1      	ORI  R30,1
000d16 c003      	RJMP _0x3E5
                 _0x100:
000d17 91e0 0b52 	LDS  R30,_temp_control_1_
000d19 7fee      	ANDI R30,0xFE
                 _0x3E5:
000d1a 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 071A     if(temp_control_sel == 2){if((temp_control_1 & 0x02) == 0x02){temp_control_2_ |= 0x02;}else{temp_control_2_ &= ~0x02 ...
                 _0xFF:
000d1c 91a0 0b56 	LDS  R26,_temp_control_sel
000d1e 30a2      	CPI  R26,LOW(0x2)
000d1f f471      	BRNE _0x102
000d20 91e0 0b50 	LDS  R30,_temp_control_1
000d22 70e2      	ANDI R30,LOW(0x2)
000d23 30e2      	CPI  R30,LOW(0x2)
000d24 f421      	BRNE _0x103
000d25 91e0 0b53 	LDS  R30,_temp_control_2_
000d27 60e2      	ORI  R30,2
000d28 c003      	RJMP _0x3E6
                 _0x103:
000d29 91e0 0b53 	LDS  R30,_temp_control_2_
000d2b 7fed      	ANDI R30,0xFD
                 _0x3E6:
000d2c 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 071B     if(temp_control_sel == 1){if((temp_control_1 & 0x01) == 0x01){temp_control_2_ |= 0x01;}else{temp_control_2_ &= ~0x01 ...
                 _0x102:
000d2e 91a0 0b56 	LDS  R26,_temp_control_sel
000d30 30a1      	CPI  R26,LOW(0x1)
000d31 f471      	BRNE _0x105
000d32 91e0 0b50 	LDS  R30,_temp_control_1
000d34 70e1      	ANDI R30,LOW(0x1)
000d35 30e1      	CPI  R30,LOW(0x1)
000d36 f421      	BRNE _0x106
000d37 91e0 0b53 	LDS  R30,_temp_control_2_
000d39 60e1      	ORI  R30,1
000d3a c003      	RJMP _0x3E7
                 _0x106:
000d3b 91e0 0b53 	LDS  R30,_temp_control_2_
000d3d 7fee      	ANDI R30,0xFE
                 _0x3E7:
000d3e 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 071C     }
                 _0x105:
                 _0xDD:
                 ; 0000 071D     temp_control_1_old = temp_control_1_;
000d40 91e0 0b52 	LDS  R30,_temp_control_1_
000d42 93e0 0b54 	STS  _temp_control_1_old,R30
                 ; 0000 071E     temp_control_2_old = temp_control_2_;
000d44 91e0 0b53 	LDS  R30,_temp_control_2_
000d46 93e0 0b55 	STS  _temp_control_2_old,R30
                 ; 0000 071F 
                 ; 0000 0720 
                 ; 0000 0721 
                 ; 0000 0722 //   ÇÑÈ­½ÃÇè ÃÖÁ¾
                 ; 0000 0723 //    if((temp_control_2 & 0x20) == 0x20){temp_control_1_ |= 0x01;} //13  40
                 ; 0000 0724 //    if((temp_control_2 & 0x10) == 0x10){temp_control_1_ |= 0x02;} //12  20
                 ; 0000 0725 //    if((temp_control_2 & 0x08) == 0x08){temp_control_1_ |= 0x04;} //11  10
                 ; 0000 0726 //    if((temp_control_2 & 0x04) == 0x04){temp_control_1_ |= 0x08;} //10  08
                 ; 0000 0727 //    if((temp_control_2 & 0x02) == 0x02){temp_control_1_ |= 0x10;} //09  04
                 ; 0000 0728 //    if((temp_control_2 & 0x01) == 0x01){temp_control_1_ |= 0x20;} //08  02
                 ; 0000 0729 //
                 ; 0000 072A //    if((temp_control_1 & 0x80) == 0x80){temp_control_1_ |= 0x40;} //07   01
                 ; 0000 072B //    if((temp_control_1 & 0x40) == 0x40){temp_control_2_ |= 0x01;} //06   40
                 ; 0000 072C //    if((temp_control_1 & 0x20) == 0x20){temp_control_2_ |= 0x02;} //05  20
                 ; 0000 072D //    if((temp_control_1 & 0x10) == 0x10){temp_control_2_ |= 0x04;} //04    10
                 ; 0000 072E //    if((temp_control_1 & 0x08) == 0x08){temp_control_2_ |= 0x08;} //03
                 ; 0000 072F //    if((temp_control_1 & 0x04) == 0x04){temp_control_2_ |= 0x10;} //02   04
                 ; 0000 0730 //    if((temp_control_1 & 0x02) == 0x02){temp_control_2_ |= 0x20;} //01 02 ¿î¿ëÃ³¸®±â2 Àü½Ã±â2
                 ; 0000 0731 //    if((temp_control_1 & 0x01) == 0x01){temp_control_2_ |= 0x40;} //00  01 ÀÓ¹«Ã³¸®±â Á¶Á¤±â 2
                 ; 0000 0732 
                 ; 0000 0733 
                 ; 0000 0734     putchar(temp_control_1_);  //6   temp_control_2
000d48 91a0 0b52 	LDS  R26,_temp_control_1_
000d4a 940e 1a8b 	CALL _putchar
                 ; 0000 0735     putchar(temp_control_2_);  //5
000d4c 91a0 0b53 	LDS  R26,_temp_control_2_
000d4e 940e 1a8b 	CALL _putchar
                 ; 0000 0736 
                 ; 0000 0737     temp_control_2_ = 0x00;
000d50 e0e0      	LDI  R30,LOW(0)
000d51 93e0 0b53 	STS  _temp_control_2_,R30
                 ; 0000 0738     temp_control_1_ = 0x00;
000d53 93e0 0b52 	STS  _temp_control_1_,R30
                 ; 0000 0739 
                 ; 0000 073A     temp_control_2 = 0x00;
000d55 93e0 0b51 	STS  _temp_control_2,R30
                 ; 0000 073B     temp_control_1 = 0x00;
000d57 93e0 0b50 	STS  _temp_control_1,R30
                 ; 0000 073C 
                 ; 0000 073D     putchar(0x00);  //4
000d59 940e 1b64 	CALL SUBOPT_0x10
                 ; 0000 073E     putchar(0x00);  //3
                 ; 0000 073F     putchar(0x00);  //2
                 ; 0000 0740     putchar(0x0d);  //1
000d5b 940e 1b6d 	CALL SUBOPT_0x11
                 ; 0000 0741     putchar(0x0a);  //0
                 ; 0000 0742 
                 ; 0000 0743     delay_ms(1);
000d5d e0a1      	LDI  R26,LOW(1)
000d5e e0b0      	LDI  R27,0
000d5f 940e 1d27 	CALL _delay_ms
                 ; 0000 0744     RE_DE0 = 0;
000d61 9872      	CBI  0xE,2
                 ; 0000 0745 
                 ; 0000 0746     send_to_div_act = 0;
000d62 e0e0      	LDI  R30,LOW(0)
000d63 93e0 0b57 	STS  _send_to_div_act,R30
                 ; 0000 0747 }
000d65 9508      	RET
                 ; .FEND
                 ;
                 ;void Request_div_info(void)
                 ; 0000 074A {
                 _Request_div_info:
                 ; .FSTART _Request_div_info
                 ; 0000 074B //send to div
                 ; 0000 074C   RE_DE0 = 1;
000d66 9a72      	SBI  0xE,2
                 ; 0000 074D   delay_us(100);
                +
000d67 e184     +LDI R24 , LOW ( 276 )
000d68 e091     +LDI R25 , HIGH ( 276 )
                +__DELAY_USW_LOOP :
000d69 9701     +SBIW R24 , 1
000d6a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 276
                 ; 0000 074E   putchar(0x7f);  //9
000d6b 940e 1b5e 	CALL SUBOPT_0xF
                 ; 0000 074F   putchar(0xfe);  //8
                 ; 0000 0750   putchar(0x55);  //7
000d6d e5a5      	LDI  R26,LOW(85)
000d6e 940e 1a8b 	CALL _putchar
                 ; 0000 0751   putchar(0xaa);  //6
000d70 eaaa      	LDI  R26,LOW(170)
000d71 940e 1a8b 	CALL _putchar
                 ; 0000 0752   putchar(0x00);  //5
000d73 940e 1b64 	CALL SUBOPT_0x10
                 ; 0000 0753   putchar(0x00);  //4
                 ; 0000 0754   putchar(0x00);  //3
                 ; 0000 0755   putchar(0x00);  //2
000d75 e0a0      	LDI  R26,LOW(0)
000d76 940e 1a8b 	CALL _putchar
                 ; 0000 0756   putchar(0x0d);  //1
000d78 940e 1b6d 	CALL SUBOPT_0x11
                 ; 0000 0757   putchar(0x0a);  //0
                 ; 0000 0758   delay_us(200);
                +
000d7a e289     +LDI R24 , LOW ( 553 )
000d7b e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
000d7c 9701     +SBIW R24 , 1
000d7d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0759   RE_DE0 = 0;
000d7e 9872      	CBI  0xE,2
                 ; 0000 075A   send_to_div_info_act = 0;
000d7f e0e0      	LDI  R30,LOW(0)
000d80 93e0 0b58 	STS  _send_to_div_info_act,R30
                 ; 0000 075B }
000d82 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void fnd_out(int digit_num)
                 ; 0000 075F {
                 _fnd_out:
                 ; .FSTART _fnd_out
                 ; 0000 0760        switch(digit_num)
000d83 931a      	ST   -Y,R17
000d84 930a      	ST   -Y,R16
000d85 018d      	MOVW R16,R26
                 ;	digit_num -> R16,R17
000d86 01f8      	MOVW R30,R16
                 ; 0000 0761        {
                 ; 0000 0762        case 0:
000d87 9730      	SBIW R30,0
000d88 f0b9      	BREQ _0x3E8
                 ; 0000 0763        LED_LOAD = 0;
                 ; 0000 0764        LED_LOAD_A = 1;
                 ; 0000 0765        LED_LOAD_B = 1;
                 ; 0000 0766        break;
                 ; 0000 0767 
                 ; 0000 0768        case 1:
000d89 30e1      	CPI  R30,LOW(0x1)
000d8a e0a0      	LDI  R26,HIGH(0x1)
000d8b 07fa      	CPC  R31,R26
000d8c f419      	BRNE _0x118
                 ; 0000 0769        LED_LOAD = 1;
000d8d 9a42      	SBI  0x8,2
                 ; 0000 076A        LED_LOAD_A = 0;
000d8e 9841      	CBI  0x8,1
                 ; 0000 076B        LED_LOAD_B = 1;
000d8f c012      	RJMP _0x3E9
                 ; 0000 076C        break;
                 ; 0000 076D 
                 ; 0000 076E        case 2:
                 _0x118:
000d90 30e2      	CPI  R30,LOW(0x2)
000d91 e0a0      	LDI  R26,HIGH(0x2)
000d92 07fa      	CPC  R31,R26
000d93 f421      	BRNE _0x11F
                 ; 0000 076F        LED_LOAD = 1;
000d94 9a42      	SBI  0x8,2
                 ; 0000 0770        LED_LOAD_A = 1;
000d95 9a41      	SBI  0x8,1
                 ; 0000 0771        LED_LOAD_B = 0;
000d96 9840      	CBI  0x8,0
                 ; 0000 0772        break;
000d97 c00b      	RJMP _0x110
                 ; 0000 0773 
                 ; 0000 0774        case 3:
                 _0x11F:
000d98 30e3      	CPI  R30,LOW(0x3)
000d99 e0a0      	LDI  R26,HIGH(0x3)
000d9a 07fa      	CPC  R31,R26
000d9b f421      	BRNE _0x12D
                 ; 0000 0775        LED_LOAD = 0;
000d9c 9842      	CBI  0x8,2
                 ; 0000 0776        LED_LOAD_A = 0;
000d9d 9841      	CBI  0x8,1
                 ; 0000 0777        LED_LOAD_B = 0;
000d9e 9840      	CBI  0x8,0
                 ; 0000 0778        break;
000d9f c003      	RJMP _0x110
                 ; 0000 0779 
                 ; 0000 077A        default:
                 _0x12D:
                 ; 0000 077B        LED_LOAD = 0;
                 _0x3E8:
000da0 9842      	CBI  0x8,2
                 ; 0000 077C        LED_LOAD_A = 1;
000da1 9a41      	SBI  0x8,1
                 ; 0000 077D        LED_LOAD_B = 1;
                 _0x3E9:
000da2 9a40      	SBI  0x8,0
                 ; 0000 077E        break;
                 ; 0000 077F        }
                 _0x110:
                 ; 0000 0780 
                 ; 0000 0781 
                 ; 0000 0782        delay_us(1);
                +
000da3 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000da4 958a     +DEC R24
000da5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0783 
                 ; 0000 0784        LED_DIN = 1;
000da6 9a44      	SBI  0x8,4
                 ; 0000 0785        for(count_temp = 0; count_temp <4; count_temp++)
000da7 2455      	CLR  R5
000da8 2466      	CLR  R6
                 _0x137:
000da9 e0e4      	LDI  R30,LOW(4)
000daa e0f0      	LDI  R31,HIGH(4)
000dab 165e      	CP   R5,R30
000dac 066f      	CPC  R6,R31
000dad f434      	BRGE _0x138
                 ; 0000 0786         {
                 ; 0000 0787          pulse();
000dae de16      	RCALL _pulse
                 ; 0000 0788         }
000daf e0e1      	LDI  R30,LOW(1)
000db0 e0f0      	LDI  R31,HIGH(1)
                +
000db1 0e5e     +ADD R5 , R30
000db2 1e6f     +ADC R6 , R31
                 	__ADDWRR 5,6,30,31
000db3 cff5      	RJMP _0x137
                 _0x138:
                 ; 0000 0789 
                 ; 0000 078A         //command digit 3
                 ; 0000 078B         if((command & 0x08) == 0x08){LED_DIN = 1;} else{LED_DIN = 0;}
000db4 2de4      	MOV  R30,R4
000db5 70e8      	ANDI R30,LOW(0x8)
000db6 30e8      	CPI  R30,LOW(0x8)
000db7 f411      	BRNE _0x139
000db8 9a44      	SBI  0x8,4
000db9 c001      	RJMP _0x13C
                 _0x139:
000dba 9844      	CBI  0x8,4
                 _0x13C:
                 ; 0000 078C         pulse();
000dbb de09      	RCALL _pulse
                 ; 0000 078D 
                 ; 0000 078E         //command digit 2
                 ; 0000 078F         if((command & 0x04) == 0x04){LED_DIN = 1;} else{LED_DIN = 0;}
000dbc 2de4      	MOV  R30,R4
000dbd 70e4      	ANDI R30,LOW(0x4)
000dbe 30e4      	CPI  R30,LOW(0x4)
000dbf f411      	BRNE _0x13F
000dc0 9a44      	SBI  0x8,4
000dc1 c001      	RJMP _0x142
                 _0x13F:
000dc2 9844      	CBI  0x8,4
                 _0x142:
                 ; 0000 0790         pulse();
000dc3 de01      	RCALL _pulse
                 ; 0000 0791 
                 ; 0000 0792         //command digit 1
                 ; 0000 0793         if((command & 0x02) == 0x02){LED_DIN = 1;} else{LED_DIN = 0;}
000dc4 2de4      	MOV  R30,R4
000dc5 70e2      	ANDI R30,LOW(0x2)
000dc6 30e2      	CPI  R30,LOW(0x2)
000dc7 f411      	BRNE _0x145
000dc8 9a44      	SBI  0x8,4
000dc9 c001      	RJMP _0x148
                 _0x145:
000dca 9844      	CBI  0x8,4
                 _0x148:
                 ; 0000 0794         pulse();
000dcb ddf9      	RCALL _pulse
                 ; 0000 0795 
                 ; 0000 0796         //command digit 0
                 ; 0000 0797         if((command & 0x01) == 0x01){LED_DIN = 1;} else{LED_DIN = 0;}
000dcc 2de4      	MOV  R30,R4
000dcd 70e1      	ANDI R30,LOW(0x1)
000dce 30e1      	CPI  R30,LOW(0x1)
000dcf f411      	BRNE _0x14B
000dd0 9a44      	SBI  0x8,4
000dd1 c001      	RJMP _0x14E
                 _0x14B:
000dd2 9844      	CBI  0x8,4
                 _0x14E:
                 ; 0000 0798         pulse();
000dd3 ddf1      	RCALL _pulse
                 ; 0000 0799 
                 ; 0000 079A 
                 ; 0000 079B          //data digit 7
                 ; 0000 079C         if((fnd_data & 0x80) == 0x80){LED_DIN = 1;} else{LED_DIN = 0;}
000dd4 2de3      	MOV  R30,R3
000dd5 78e0      	ANDI R30,LOW(0x80)
000dd6 38e0      	CPI  R30,LOW(0x80)
000dd7 f411      	BRNE _0x151
000dd8 9a44      	SBI  0x8,4
000dd9 c001      	RJMP _0x154
                 _0x151:
000dda 9844      	CBI  0x8,4
                 _0x154:
                 ; 0000 079D         pulse();
000ddb dde9      	RCALL _pulse
                 ; 0000 079E 
                 ; 0000 079F         //data digit 6
                 ; 0000 07A0         if((fnd_data & 0x40) == 0x40){LED_DIN = 1;} else{LED_DIN = 0;}
000ddc 2de3      	MOV  R30,R3
000ddd 74e0      	ANDI R30,LOW(0x40)
000dde 34e0      	CPI  R30,LOW(0x40)
000ddf f411      	BRNE _0x157
000de0 9a44      	SBI  0x8,4
000de1 c001      	RJMP _0x15A
                 _0x157:
000de2 9844      	CBI  0x8,4
                 _0x15A:
                 ; 0000 07A1         pulse();
000de3 dde1      	RCALL _pulse
                 ; 0000 07A2 
                 ; 0000 07A3         //data digit 5
                 ; 0000 07A4         if((fnd_data & 0x20) == 0x20){LED_DIN = 1;} else{LED_DIN = 0;}
000de4 2de3      	MOV  R30,R3
000de5 72e0      	ANDI R30,LOW(0x20)
000de6 32e0      	CPI  R30,LOW(0x20)
000de7 f411      	BRNE _0x15D
000de8 9a44      	SBI  0x8,4
000de9 c001      	RJMP _0x160
                 _0x15D:
000dea 9844      	CBI  0x8,4
                 _0x160:
                 ; 0000 07A5         pulse();
000deb ddd9      	RCALL _pulse
                 ; 0000 07A6 
                 ; 0000 07A7         //data digit 4
                 ; 0000 07A8         if((fnd_data & 0x10) == 0x10){LED_DIN = 1;} else{LED_DIN = 0;}
000dec 2de3      	MOV  R30,R3
000ded 71e0      	ANDI R30,LOW(0x10)
000dee 31e0      	CPI  R30,LOW(0x10)
000def f411      	BRNE _0x163
000df0 9a44      	SBI  0x8,4
000df1 c001      	RJMP _0x166
                 _0x163:
000df2 9844      	CBI  0x8,4
                 _0x166:
                 ; 0000 07A9         pulse();
000df3 ddd1      	RCALL _pulse
                 ; 0000 07AA 
                 ; 0000 07AB         //data digit 3
                 ; 0000 07AC         if((fnd_data & 0x08) == 0x08){LED_DIN = 1;} else{LED_DIN = 0;}
000df4 2de3      	MOV  R30,R3
000df5 70e8      	ANDI R30,LOW(0x8)
000df6 30e8      	CPI  R30,LOW(0x8)
000df7 f411      	BRNE _0x169
000df8 9a44      	SBI  0x8,4
000df9 c001      	RJMP _0x16C
                 _0x169:
000dfa 9844      	CBI  0x8,4
                 _0x16C:
                 ; 0000 07AD         pulse();
000dfb ddc9      	RCALL _pulse
                 ; 0000 07AE 
                 ; 0000 07AF         //data digit 2
                 ; 0000 07B0         if((fnd_data & 0x04) == 0x04){LED_DIN = 1;} else{LED_DIN = 0;}
000dfc 2de3      	MOV  R30,R3
000dfd 70e4      	ANDI R30,LOW(0x4)
000dfe 30e4      	CPI  R30,LOW(0x4)
000dff f411      	BRNE _0x16F
000e00 9a44      	SBI  0x8,4
000e01 c001      	RJMP _0x172
                 _0x16F:
000e02 9844      	CBI  0x8,4
                 _0x172:
                 ; 0000 07B1         pulse();
000e03 ddc1      	RCALL _pulse
                 ; 0000 07B2 
                 ; 0000 07B3         //data digit 1
                 ; 0000 07B4         if((fnd_data & 0x02) == 0x02){LED_DIN = 1;} else{LED_DIN = 0;}
000e04 2de3      	MOV  R30,R3
000e05 70e2      	ANDI R30,LOW(0x2)
000e06 30e2      	CPI  R30,LOW(0x2)
000e07 f411      	BRNE _0x175
000e08 9a44      	SBI  0x8,4
000e09 c001      	RJMP _0x178
                 _0x175:
000e0a 9844      	CBI  0x8,4
                 _0x178:
                 ; 0000 07B5         pulse();
000e0b ddb9      	RCALL _pulse
                 ; 0000 07B6 
                 ; 0000 07B7         //data digit 0
                 ; 0000 07B8         if((fnd_data & 0x01) == 0x01){LED_DIN = 1;} else{LED_DIN = 0;}
000e0c 2de3      	MOV  R30,R3
000e0d 70e1      	ANDI R30,LOW(0x1)
000e0e 30e1      	CPI  R30,LOW(0x1)
000e0f f411      	BRNE _0x17B
000e10 9a44      	SBI  0x8,4
000e11 c001      	RJMP _0x17E
                 _0x17B:
000e12 9844      	CBI  0x8,4
                 _0x17E:
                 ; 0000 07B9         pulse();
000e13 ddb1      	RCALL _pulse
                 ; 0000 07BA 
                 ; 0000 07BB 
                 ; 0000 07BC          delay_us(1);
                +
000e14 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000e15 958a     +DEC R24
000e16 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 07BD        LED_LOAD = 1;
000e17 9a42      	SBI  0x8,2
                 ; 0000 07BE        LED_LOAD_A = 1;
000e18 9a41      	SBI  0x8,1
                 ; 0000 07BF        LED_LOAD_B = 1;
000e19 9a40      	SBI  0x8,0
                 ; 0000 07C0        delay_us(1);
                +
000e1a e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000e1b 958a     +DEC R24
000e1c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 07C1 }
000e1d 9109      	LD   R16,Y+
000e1e 9119      	LD   R17,Y+
000e1f 9508      	RET
                 ; .FEND
                 ;
                 ;void num_convert(char num)
                 ; 0000 07C4 {
                 _num_convert:
                 ; .FSTART _num_convert
                 ; 0000 07C5       switch(num)
000e20 931a      	ST   -Y,R17
000e21 2f1a      	MOV  R17,R26
                 ;	num -> R17
000e22 2fe1      	MOV  R30,R17
000e23 e0f0      	LDI  R31,0
                 ; 0000 07C6       {
                 ; 0000 07C7        case 0:
000e24 9730      	SBIW R30,0
000e25 f419      	BRNE _0x18A
                 ; 0000 07C8          fnd_data = 0x7e;
000e26 e7ee      	LDI  R30,LOW(126)
000e27 2e3e      	MOV  R3,R30
                 ; 0000 07C9        break;
000e28 c040      	RJMP _0x189
                 ; 0000 07CA 
                 ; 0000 07CB        case 1:
                 _0x18A:
000e29 30e1      	CPI  R30,LOW(0x1)
000e2a e0a0      	LDI  R26,HIGH(0x1)
000e2b 07fa      	CPC  R31,R26
000e2c f419      	BRNE _0x18B
                 ; 0000 07CC          fnd_data = 0x30;
000e2d e3e0      	LDI  R30,LOW(48)
000e2e 2e3e      	MOV  R3,R30
                 ; 0000 07CD        break;
000e2f c039      	RJMP _0x189
                 ; 0000 07CE 
                 ; 0000 07CF        case 2:
                 _0x18B:
000e30 30e2      	CPI  R30,LOW(0x2)
000e31 e0a0      	LDI  R26,HIGH(0x2)
000e32 07fa      	CPC  R31,R26
000e33 f419      	BRNE _0x18C
                 ; 0000 07D0          fnd_data = 0x6d;
000e34 e6ed      	LDI  R30,LOW(109)
000e35 2e3e      	MOV  R3,R30
                 ; 0000 07D1        break;
000e36 c032      	RJMP _0x189
                 ; 0000 07D2 
                 ; 0000 07D3        case 3:
                 _0x18C:
000e37 30e3      	CPI  R30,LOW(0x3)
000e38 e0a0      	LDI  R26,HIGH(0x3)
000e39 07fa      	CPC  R31,R26
000e3a f419      	BRNE _0x18D
                 ; 0000 07D4          fnd_data = 0x79;
000e3b e7e9      	LDI  R30,LOW(121)
000e3c 2e3e      	MOV  R3,R30
                 ; 0000 07D5        break;
000e3d c02b      	RJMP _0x189
                 ; 0000 07D6 
                 ; 0000 07D7        case 4:
                 _0x18D:
000e3e 30e4      	CPI  R30,LOW(0x4)
000e3f e0a0      	LDI  R26,HIGH(0x4)
000e40 07fa      	CPC  R31,R26
000e41 f419      	BRNE _0x18E
                 ; 0000 07D8          fnd_data = 0x33;
000e42 e3e3      	LDI  R30,LOW(51)
000e43 2e3e      	MOV  R3,R30
                 ; 0000 07D9        break;
000e44 c024      	RJMP _0x189
                 ; 0000 07DA 
                 ; 0000 07DB        case 5:
                 _0x18E:
000e45 30e5      	CPI  R30,LOW(0x5)
000e46 e0a0      	LDI  R26,HIGH(0x5)
000e47 07fa      	CPC  R31,R26
000e48 f419      	BRNE _0x18F
                 ; 0000 07DC          fnd_data = 0x5b;
000e49 e5eb      	LDI  R30,LOW(91)
000e4a 2e3e      	MOV  R3,R30
                 ; 0000 07DD        break;
000e4b c01d      	RJMP _0x189
                 ; 0000 07DE 
                 ; 0000 07DF        case 6:
                 _0x18F:
000e4c 30e6      	CPI  R30,LOW(0x6)
000e4d e0a0      	LDI  R26,HIGH(0x6)
000e4e 07fa      	CPC  R31,R26
000e4f f419      	BRNE _0x190
                 ; 0000 07E0          fnd_data = 0x5f;
000e50 e5ef      	LDI  R30,LOW(95)
000e51 2e3e      	MOV  R3,R30
                 ; 0000 07E1        break;
000e52 c016      	RJMP _0x189
                 ; 0000 07E2 
                 ; 0000 07E3        case 7:
                 _0x190:
000e53 30e7      	CPI  R30,LOW(0x7)
000e54 e0a0      	LDI  R26,HIGH(0x7)
000e55 07fa      	CPC  R31,R26
000e56 f419      	BRNE _0x191
                 ; 0000 07E4          fnd_data = 0x70;
000e57 e7e0      	LDI  R30,LOW(112)
000e58 2e3e      	MOV  R3,R30
                 ; 0000 07E5        break;
000e59 c00f      	RJMP _0x189
                 ; 0000 07E6 
                 ; 0000 07E7        case 8:
                 _0x191:
000e5a 30e8      	CPI  R30,LOW(0x8)
000e5b e0a0      	LDI  R26,HIGH(0x8)
000e5c 07fa      	CPC  R31,R26
000e5d f419      	BRNE _0x192
                 ; 0000 07E8          fnd_data = 0x7f;
000e5e e7ef      	LDI  R30,LOW(127)
000e5f 2e3e      	MOV  R3,R30
                 ; 0000 07E9        break;
000e60 c008      	RJMP _0x189
                 ; 0000 07EA 
                 ; 0000 07EB        case 9:
                 _0x192:
000e61 30e9      	CPI  R30,LOW(0x9)
000e62 e0a0      	LDI  R26,HIGH(0x9)
000e63 07fa      	CPC  R31,R26
000e64 f419      	BRNE _0x194
                 ; 0000 07EC          fnd_data = 0x7b;
000e65 e7eb      	LDI  R30,LOW(123)
000e66 2e3e      	MOV  R3,R30
                 ; 0000 07ED        break;
000e67 c001      	RJMP _0x189
                 ; 0000 07EE 
                 ; 0000 07EF        default:
                 _0x194:
                 ; 0000 07F0          fnd_data = 0x00;
000e68 2433      	CLR  R3
                 ; 0000 07F1        break;
                 ; 0000 07F2       }
                 _0x189:
                 ; 0000 07F3 }
                 _0x20A0004:
000e69 9119      	LD   R17,Y+
000e6a 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;void digit1(char temp,char num)
                 ; 0000 07F9 {
                 _digit1:
                 ; .FSTART _digit1
                 ; 0000 07FA        command = 0x03;
000e6b 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e6d e0e3      	LDI  R30,LOW(3)
000e6e c031      	RJMP _0x20A0003
                 ; 0000 07FB        num_convert(temp);
                 ; 0000 07FC        digit_num = num;
                 ; 0000 07FD        fnd_out(digit_num);
                 ; 0000 07FE }
                 ; .FEND
                 ;
                 ;
                 ;void digit2(char temp,char num)
                 ; 0000 0802 {
                 _digit2:
                 ; .FSTART _digit2
                 ; 0000 0803        command = 0x02;
000e6f 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e71 e0e2      	LDI  R30,LOW(2)
000e72 940e 1b78 	CALL SUBOPT_0x13
                 ; 0000 0804        num_convert(temp);
                 ; 0000 0805        if(digit == 0 || digit == 1){fnd_data = fnd_data | 0x80;} //Àü·ù ¼Ò¼öÁ¡ Ç¥½Ã
000e74 f029      	BREQ _0x196
000e75 e0e1      	LDI  R30,LOW(1)
000e76 e0f0      	LDI  R31,HIGH(1)
000e77 15eb      	CP   R30,R11
000e78 05fc      	CPC  R31,R12
000e79 f411      	BRNE _0x195
                 _0x196:
000e7a e8e0      	LDI  R30,LOW(128)
000e7b 2a3e      	OR   R3,R30
                 ; 0000 0806        if(digit == 0){fnd_data = fnd_data | 0x80;}
                 _0x195:
000e7c 2c0b      	MOV  R0,R11
000e7d 280c      	OR   R0,R12
000e7e f411      	BRNE _0x198
000e7f e8e0      	LDI  R30,LOW(128)
000e80 2a3e      	OR   R3,R30
                 ; 0000 0807        digit_num = num;
                 _0x198:
000e81 c021      	RJMP _0x20A0002
                 ; 0000 0808        fnd_out(digit_num);
                 ; 0000 0809 }
                 ; .FEND
                 ;
                 ;
                 ;void digit3(char temp,char num)
                 ; 0000 080D {
                 _digit3:
                 ; .FSTART _digit3
                 ; 0000 080E        command = 0x01;
000e82 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e84 e0e1      	LDI  R30,LOW(1)
000e85 c01a      	RJMP _0x20A0003
                 ; 0000 080F        num_convert(temp);
                 ; 0000 0810        digit_num = num;
                 ; 0000 0811        fnd_out(digit_num);
                 ; 0000 0812 
                 ; 0000 0813 }
                 ; .FEND
                 ;
                 ;
                 ;void digit4(char temp,char num)
                 ; 0000 0817 {
                 _digit4:
                 ; .FSTART _digit4
                 ; 0000 0818        command = 0x06;
000e86 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e88 e0e6      	LDI  R30,LOW(6)
000e89 c016      	RJMP _0x20A0003
                 ; 0000 0819        num_convert(temp);
                 ; 0000 081A        digit_num = num;
                 ; 0000 081B        fnd_out(digit_num);
                 ; 0000 081C }
                 ; .FEND
                 ;
                 ;void digit5(char temp,char num)
                 ; 0000 081F {
                 _digit5:
                 ; .FSTART _digit5
                 ; 0000 0820        command = 0x05;
000e8a 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e8c e0e5      	LDI  R30,LOW(5)
000e8d 940e 1b78 	CALL SUBOPT_0x13
                 ; 0000 0821        num_convert(temp);
                 ; 0000 0822        if(digit == 0 || digit == 1){fnd_data = fnd_data | 0x80;}
000e8f f029      	BREQ _0x19A
000e90 e0e1      	LDI  R30,LOW(1)
000e91 e0f0      	LDI  R31,HIGH(1)
000e92 15eb      	CP   R30,R11
000e93 05fc      	CPC  R31,R12
000e94 f411      	BRNE _0x199
                 _0x19A:
000e95 e8e0      	LDI  R30,LOW(128)
000e96 2a3e      	OR   R3,R30
                 ; 0000 0823        if(digit == 0){fnd_data = fnd_data | 0x80;}
                 _0x199:
000e97 2c0b      	MOV  R0,R11
000e98 280c      	OR   R0,R12
000e99 f411      	BRNE _0x19C
000e9a e8e0      	LDI  R30,LOW(128)
000e9b 2a3e      	OR   R3,R30
                 ; 0000 0824        digit_num = num;
                 _0x19C:
000e9c c006      	RJMP _0x20A0002
                 ; 0000 0825        fnd_out(digit_num);
                 ; 0000 0826 }
                 ; .FEND
                 ;
                 ;void digit6(char temp,char num)
                 ; 0000 0829 {
                 _digit6:
                 ; .FSTART _digit6
                 ; 0000 082A        command = 0x04;
000e9d 940e 1b73 	CALL SUBOPT_0x12
                 ;	temp -> R16
                 ;	num -> R17
000e9f e0e4      	LDI  R30,LOW(4)
                 _0x20A0003:
000ea0 2e4e      	MOV  R4,R30
                 ; 0000 082B        num_convert(temp);
000ea1 2fa0      	MOV  R26,R16
000ea2 df7d      	RCALL _num_convert
                 ; 0000 082C        digit_num = num;
                 _0x20A0002:
000ea3 2e91      	MOV  R9,R17
000ea4 24aa      	CLR  R10
                 ; 0000 082D        fnd_out(digit_num);
                +
000ea5 2da9     +MOV R26 , R9
000ea6 2dba     +MOV R27 , R10
                 	__GETW2R 9,10
000ea7 dedb      	RCALL _fnd_out
                 ; 0000 082E }
000ea8 8119      	LDD  R17,Y+1
000ea9 8108      	LDD  R16,Y+0
000eaa 9623      	ADIW R28,3
000eab 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void fnd_init(void)
                 ; 0000 0832 {
                 _fnd_init:
                 ; .FSTART _fnd_init
                 ; 0000 0833    LED_LOAD = 1;
000eac 9a42      	SBI  0x8,2
                 ; 0000 0834         LED_LOAD_A = 1;
000ead 9a41      	SBI  0x8,1
                 ; 0000 0835         LED_LOAD_B = 1;
000eae 9a40      	SBI  0x8,0
                 ; 0000 0836 //// fnd test
                 ; 0000 0837 //       command = 0x0f;
                 ; 0000 0838 //       fnd_data = 0x01;
                 ; 0000 0839 //       fnd_out(3);
                 ; 0000 083A 
                 ; 0000 083B 
                 ; 0000 083C // scan limit
                 ; 0000 083D        command = 0x0b;
000eaf 940e 1b80 	CALL SUBOPT_0x14
                 ; 0000 083E        fnd_data = 0x05;
                 ; 0000 083F        fnd_out(3);
                 ; 0000 0840 
                 ; 0000 0841 // intensity
                 ; 0000 0842        command = 0x0a;
                 ; 0000 0843        fnd_data = 0x03; //0x07
                 ; 0000 0844        fnd_out(3);
                 ; 0000 0845 
                 ; 0000 0846 // decode mode
                 ; 0000 0847        command = 0x09;
                 ; 0000 0848        //fnd_data = 0xff;
                 ; 0000 0849       fnd_data = 0x00;
                 ; 0000 084A        fnd_out(3);
                 ; 0000 084B 
                 ; 0000 084C //  // shut down
                 ; 0000 084D //       command = 0x0c;
                 ; 0000 084E //       fnd_data = 0x01;
                 ; 0000 084F //       fnd_out(3);
                 ; 0000 0850 
                 ; 0000 0851 //// fnd test normar
                 ; 0000 0852 //       command = 0x0f;
                 ; 0000 0853 //       fnd_data = 0x00;
                 ; 0000 0854 //       fnd_out(3);
                 ; 0000 0855 //
                 ; 0000 0856 //       digit = 3;
                 ; 0000 0857 //       digit1(8,digit);
                 ; 0000 0858 //       digit2(8,digit);
                 ; 0000 0859 //       digit3(8,digit);
                 ; 0000 085A //       digit4(8,digit);
                 ; 0000 085B //       digit5(8,digit);
                 ; 0000 085C //       digit6(8,digit);
                 ; 0000 085D }
000eb1 9508      	RET
                 ; .FEND
                 ;
                 ;void init(void)
                 ; 0000 0860 {
                 _init:
                 ; .FSTART _init
                 ; 0000 0861 //led_bit test
                 ; 0000 0862         LAN_RESET = 1;
000eb2 9a58      	SBI  0xB,0
                 ; 0000 0863         LAN_ISP = 1;
000eb3 9a5c      	SBI  0xB,4
                 ; 0000 0864 
                 ; 0000 0865 
                 ; 0000 0866         LED_LOAD = 1;
000eb4 9a42      	SBI  0x8,2
                 ; 0000 0867         LED_LOAD_A = 1;
000eb5 9a41      	SBI  0x8,1
                 ; 0000 0868         LED_LOAD_B = 1;
000eb6 9a40      	SBI  0x8,0
                 ; 0000 0869 // fnd test
                 ; 0000 086A        command = 0x0f;
000eb7 e0ef      	LDI  R30,LOW(15)
000eb8 940e 1b97 	CALL SUBOPT_0x15
                 ; 0000 086B        fnd_data = 0x01;
                 ; 0000 086C        fnd_out(3);
                 ; 0000 086D 
                 ; 0000 086E 
                 ; 0000 086F // scan limit
                 ; 0000 0870        command = 0x0b;
000eba 940e 1b80 	CALL SUBOPT_0x14
                 ; 0000 0871        fnd_data = 0x05;
                 ; 0000 0872        fnd_out(3);
                 ; 0000 0873 
                 ; 0000 0874 // intensity
                 ; 0000 0875        command = 0x0a;
                 ; 0000 0876        fnd_data = 0x03; //0x07
                 ; 0000 0877        fnd_out(3);
                 ; 0000 0878 
                 ; 0000 0879 // decode mode
                 ; 0000 087A        command = 0x09;
                 ; 0000 087B        //fnd_data = 0xff;
                 ; 0000 087C       fnd_data = 0x00;
                 ; 0000 087D        fnd_out(3);
                 ; 0000 087E 
                 ; 0000 087F   // shut down
                 ; 0000 0880        command = 0x0c;
000ebc e0ec      	LDI  R30,LOW(12)
000ebd 940e 1b97 	CALL SUBOPT_0x15
                 ; 0000 0881        fnd_data = 0x01;
                 ; 0000 0882        fnd_out(3);
                 ; 0000 0883 
                 ; 0000 0884 // fnd test normar
                 ; 0000 0885        command = 0x0f;
000ebf e0ef      	LDI  R30,LOW(15)
000ec0 2e4e      	MOV  R4,R30
                 ; 0000 0886        fnd_data = 0x00;
000ec1 2433      	CLR  R3
                 ; 0000 0887        fnd_out(3);
000ec2 e0a3      	LDI  R26,LOW(3)
000ec3 e0b0      	LDI  R27,0
000ec4 debe      	RCALL _fnd_out
                 ; 0000 0888 
                 ; 0000 0889        digit = 3;
000ec5 e0e3      	LDI  R30,LOW(3)
000ec6 e0f0      	LDI  R31,HIGH(3)
                +
000ec7 2ebe     +MOV R11 , R30
000ec8 2ecf     +MOV R12 , R31
                 	__PUTW1R 11,12
                 ; 0000 088A        digit1(8,digit);
000ec9 e0e8      	LDI  R30,LOW(8)
000eca 940e 1b9e 	CALL SUBOPT_0x16
                 ; 0000 088B        digit2(8,digit);
000ecc e0e8      	LDI  R30,LOW(8)
000ecd 940e 1ba2 	CALL SUBOPT_0x17
                 ; 0000 088C        digit3(8,digit);
000ecf e0e8      	LDI  R30,LOW(8)
000ed0 93ea      	ST   -Y,R30
000ed1 2dab      	MOV  R26,R11
000ed2 dfaf      	RCALL _digit3
                 ; 0000 088D        digit4(8,digit);
000ed3 e0e8      	LDI  R30,LOW(8)
000ed4 940e 1ba6 	CALL SUBOPT_0x18
                 ; 0000 088E        digit5(8,digit);
000ed6 e0e8      	LDI  R30,LOW(8)
000ed7 940e 1baa 	CALL SUBOPT_0x19
                 ; 0000 088F        digit6(8,digit);
000ed9 e0e8      	LDI  R30,LOW(8)
000eda 93ea      	ST   -Y,R30
000edb 2dab      	MOV  R26,R11
000edc dfc0      	RCALL _digit6
                 ; 0000 0890 
                 ; 0000 0891         BUZZER_HIGH = 1;
000edd 9a2d      	SBI  0x5,5
                 ; 0000 0892         DT_NORMAL  = OFF;
000ede 9814      	CBI  0x2,4
                 ; 0000 0893         DT_ERR = ON;
000edf 9a15      	SBI  0x2,5
                 ; 0000 0894         GE_NORMAL  = OFF;
000ee0 9816      	CBI  0x2,6
                 ; 0000 0895         GE_ERR = ON;
000ee1 9a17      	SBI  0x2,7
                 ; 0000 0896         BAT_RUN_1  = OFF;
000ee2 9874      	CBI  0xE,4
                 ; 0000 0897         BAT_RUN_2  = OFF;
000ee3 9875      	CBI  0xE,5
                 ; 0000 0898         BAT_ERR_1  = ON;
000ee4 9a76      	SBI  0xE,6
                 ; 0000 0899         BAT_ERR_2  = ON;
000ee5 9a77      	SBI  0xE,7
                 ; 0000 089A         TEST_LED_1 = ON;
000ee6 9a45      	SBI  0x8,5
                 ; 0000 089B         TEST_LED_2 = ON;
000ee7 9a46      	SBI  0x8,6
                 ; 0000 089C 
                 ; 0000 089D         delay_ms(250);
000ee8 efaa      	LDI  R26,LOW(250)
000ee9 e0b0      	LDI  R27,0
000eea 940e 1d27 	CALL _delay_ms
                 ; 0000 089E         BUZZER_HIGH = 0; //LAN RESET
000eec 982d      	CBI  0x5,5
                 ; 0000 089F         delay_ms(750);
000eed eeae      	LDI  R26,LOW(750)
000eee e0b2      	LDI  R27,HIGH(750)
000eef 940e 1d27 	CALL _delay_ms
                 ; 0000 08A0         DT_NORMAL  = ON;
000ef1 9a14      	SBI  0x2,4
                 ; 0000 08A1         DT_ERR = OFF;
000ef2 9815      	CBI  0x2,5
                 ; 0000 08A2         GE_NORMAL  = ON;
000ef3 9a16      	SBI  0x2,6
                 ; 0000 08A3         GE_ERR = OFF;
000ef4 9817      	CBI  0x2,7
                 ; 0000 08A4         BAT_RUN_1  = ON;
000ef5 9a74      	SBI  0xE,4
                 ; 0000 08A5         BAT_RUN_2  = ON;
000ef6 9a75      	SBI  0xE,5
                 ; 0000 08A6         BAT_ERR_1  = OFF;
000ef7 9876      	CBI  0xE,6
                 ; 0000 08A7         BAT_ERR_2  = OFF;
000ef8 9877      	CBI  0xE,7
                 ; 0000 08A8 
                 ; 0000 08A9         LAN_RESET = 0;
000ef9 9858      	CBI  0xB,0
                 ; 0000 08AA        // delay_ms(500);
                 ; 0000 08AB        delay_ms(1000);
000efa eea8      	LDI  R26,LOW(1000)
000efb e0b3      	LDI  R27,HIGH(1000)
000efc 940e 1d27 	CALL _delay_ms
                 ; 0000 08AC         DT_NORMAL  = OFF;
000efe 9814      	CBI  0x2,4
                 ; 0000 08AD         DT_ERR = OFF;
000eff 9815      	CBI  0x2,5
                 ; 0000 08AE         GE_NORMAL  = OFF;
000f00 9816      	CBI  0x2,6
                 ; 0000 08AF         GE_ERR = OFF;
000f01 9817      	CBI  0x2,7
                 ; 0000 08B0         BAT_ERR_1  = OFF;
000f02 9876      	CBI  0xE,6
                 ; 0000 08B1         BAT_ERR_2  = OFF;
000f03 9877      	CBI  0xE,7
                 ; 0000 08B2         BAT_RUN_1  = OFF;
000f04 9874      	CBI  0xE,4
                 ; 0000 08B3         BAT_RUN_2  = OFF;
000f05 9875      	CBI  0xE,5
                 ; 0000 08B4 
                 ; 0000 08B5         LAN_RESET = 1;  //LAN RESET
000f06 9a58      	SBI  0xB,0
                 ; 0000 08B6 
                 ; 0000 08B7         RE_DE0 = 0;
000f07 9872      	CBI  0xE,2
                 ; 0000 08B8         RE_DE1 = 0;
000f08 9873      	CBI  0xE,3
                 ; 0000 08B9 
                 ; 0000 08BA         buzzer_on = 1;
000f09 9af0      	SBI  0x1E,0
                 ; 0000 08BB         mode_change_and_init = 1; //ÃÊ±â °æº¸ ´ë±â
000f0a e0e1      	LDI  R30,LOW(1)
000f0b 93e0 0b8e 	STS  _mode_change_and_init,R30
                 ; 0000 08BC 
                 ; 0000 08BD         temp_control_1_old = 0xff;
000f0d efef      	LDI  R30,LOW(255)
000f0e 93e0 0b54 	STS  _temp_control_1_old,R30
                 ; 0000 08BE         temp_control_2_old = 0xff;
000f10 93e0 0b55 	STS  _temp_control_2_old,R30
                 ; 0000 08BF }
000f12 9508      	RET
                 ; .FEND
                 ;
                 ;void display_out()
                 ; 0000 08C2 {
                 _display_out:
                 ; .FSTART _display_out
                 ; 0000 08C3         if(DT_ERR == ERR)
000f13 9b15      	SBIS 0x2,5
000f14 c004      	RJMP _0x1EF
                 ; 0000 08C4         {
                 ; 0000 08C5          voltage_1 = 0;
000f15 940e 1ac3 	CALL SUBOPT_0x2
                 ; 0000 08C6          currunt_1 = 0;
                 ; 0000 08C7          bat_volt_1 = 0;
                 ; 0000 08C8          voltage_2 = 0;
000f17 940e 1ae2 	CALL SUBOPT_0x5
                 ; 0000 08C9          currunt_2 = 0;
                 ; 0000 08CA          bat_volt_2 = 0;
                 ; 0000 08CB         }
                 ; 0000 08CC         digit = 0;
                 _0x1EF:
000f19 24bb      	CLR  R11
000f1a 24cc      	CLR  R12
                 ; 0000 08CD             if(voltage_1 < 100)
000f1b 940e 1bae 	CALL SUBOPT_0x1A
000f1d 36a4      	CPI  R26,LOW(0x64)
000f1e e0e0      	LDI  R30,HIGH(0x64)
000f1f 07be      	CPC  R27,R30
000f20 f488      	BRSH _0x1F0
                 ; 0000 08CE             {
                 ; 0000 08CF               digit1(0,digit);
000f21 e0e0      	LDI  R30,LOW(0)
000f22 940e 1b9e 	CALL SUBOPT_0x16
                 ; 0000 08D0                if(voltage_1<10)
000f24 940e 1bae 	CALL SUBOPT_0x1A
000f26 971a      	SBIW R26,10
000f27 f410      	BRSH _0x1F1
                 ; 0000 08D1                 {
                 ; 0000 08D2                    digit2(0,digit);
000f28 e0e0      	LDI  R30,LOW(0)
000f29 c004      	RJMP _0x3EA
                 ; 0000 08D3                 }
                 ; 0000 08D4                 else
                 _0x1F1:
                 ; 0000 08D5                 {
                 ; 0000 08D6                    digit2(voltage_1/10,digit);
000f2a 940e 1bae 	CALL SUBOPT_0x1A
000f2c 940e 1bb3 	CALL SUBOPT_0x1B
                 _0x3EA:
000f2e 93ea      	ST   -Y,R30
000f2f 2dab      	MOV  R26,R11
000f30 df3e      	RCALL _digit2
                 ; 0000 08D7                 }
                 ; 0000 08D8             }
                 ; 0000 08D9             else
000f31 c015      	RJMP _0x1F3
                 _0x1F0:
                 ; 0000 08DA             {
                 ; 0000 08DB               if( voltage_1/100 < 10)
000f32 940e 1bb8 	CALL SUBOPT_0x1C
000f34 973a      	SBIW R30,10
000f35 f418      	BRSH _0x1F4
                 ; 0000 08DC               {
                 ; 0000 08DD                 digit1(voltage_1/100,digit);
000f36 940e 1bb8 	CALL SUBOPT_0x1C
000f38 c001      	RJMP _0x3EB
                 ; 0000 08DE               }
                 ; 0000 08DF               else
                 _0x1F4:
                 ; 0000 08E0               {
                 ; 0000 08E1                 digit1(0,digit);
000f39 e0e0      	LDI  R30,LOW(0)
                 _0x3EB:
000f3a 93ea      	ST   -Y,R30
000f3b 2dab      	MOV  R26,R11
000f3c df2e      	RCALL _digit1
                 ; 0000 08E2               }
                 ; 0000 08E3               digit2((voltage_1 - ((voltage_1/100)*100))/10,digit);
000f3d 940e 1bb8 	CALL SUBOPT_0x1C
000f3f 940e 1bbe 	CALL SUBOPT_0x1D
000f41 940e 1bae 	CALL SUBOPT_0x1A
000f43 940e 1bc3 	CALL SUBOPT_0x1E
000f45 940e 1ba2 	CALL SUBOPT_0x17
                 ; 0000 08E4             }
                 _0x1F3:
                 ; 0000 08E5             if(voltage_1 == 0){ digit3(0,digit);}else{digit3(voltage_1%10,digit);}
000f47 91e0 0a13 	LDS  R30,_voltage_1
000f49 91f0 0a14 	LDS  R31,_voltage_1+1
000f4b 9730      	SBIW R30,0
000f4c f411      	BRNE _0x1F6
000f4d e0e0      	LDI  R30,LOW(0)
000f4e c004      	RJMP _0x3EC
                 _0x1F6:
000f4f 940e 1bae 	CALL SUBOPT_0x1A
000f51 940e 1bc6 	CALL SUBOPT_0x1F
                 _0x3EC:
000f53 93ea      	ST   -Y,R30
000f54 2dab      	MOV  R26,R11
000f55 df2c      	RCALL _digit3
                 ; 0000 08E6 
                 ; 0000 08E7 
                 ; 0000 08E8             if(voltage_2 < 100)
000f56 940e 1bcb 	CALL SUBOPT_0x20
000f58 36a4      	CPI  R26,LOW(0x64)
000f59 e0e0      	LDI  R30,HIGH(0x64)
000f5a 07be      	CPC  R27,R30
000f5b f488      	BRSH _0x1F8
                 ; 0000 08E9             {
                 ; 0000 08EA               digit4(0,digit);
000f5c e0e0      	LDI  R30,LOW(0)
000f5d 940e 1ba6 	CALL SUBOPT_0x18
                 ; 0000 08EB                if(voltage_2<10)
000f5f 940e 1bcb 	CALL SUBOPT_0x20
000f61 971a      	SBIW R26,10
000f62 f410      	BRSH _0x1F9
                 ; 0000 08EC                 {
                 ; 0000 08ED                    digit5(0,digit);
000f63 e0e0      	LDI  R30,LOW(0)
000f64 c004      	RJMP _0x3ED
                 ; 0000 08EE                 }
                 ; 0000 08EF                 else
                 _0x1F9:
                 ; 0000 08F0                 {
                 ; 0000 08F1                    digit5(voltage_2/10,digit);
000f65 940e 1bcb 	CALL SUBOPT_0x20
000f67 940e 1bb3 	CALL SUBOPT_0x1B
                 _0x3ED:
000f69 93ea      	ST   -Y,R30
000f6a 2dab      	MOV  R26,R11
000f6b df1e      	RCALL _digit5
                 ; 0000 08F2                 }
                 ; 0000 08F3             }
                 ; 0000 08F4             else
000f6c c015      	RJMP _0x1FB
                 _0x1F8:
                 ; 0000 08F5             {
                 ; 0000 08F6               if( voltage_2/100 < 10)
000f6d 940e 1bd0 	CALL SUBOPT_0x21
000f6f 973a      	SBIW R30,10
000f70 f418      	BRSH _0x1FC
                 ; 0000 08F7               {
                 ; 0000 08F8                 digit4(voltage_2/100,digit);
000f71 940e 1bd0 	CALL SUBOPT_0x21
000f73 c001      	RJMP _0x3EE
                 ; 0000 08F9               }
                 ; 0000 08FA               else
                 _0x1FC:
                 ; 0000 08FB               {
                 ; 0000 08FC                 digit4(0,digit);
000f74 e0e0      	LDI  R30,LOW(0)
                 _0x3EE:
000f75 93ea      	ST   -Y,R30
000f76 2dab      	MOV  R26,R11
000f77 df0e      	RCALL _digit4
                 ; 0000 08FD               }
                 ; 0000 08FE               digit5((voltage_2 - ((voltage_2/100)*100))/10,digit);
000f78 940e 1bd0 	CALL SUBOPT_0x21
000f7a 940e 1bbe 	CALL SUBOPT_0x1D
000f7c 940e 1bcb 	CALL SUBOPT_0x20
000f7e 940e 1bc3 	CALL SUBOPT_0x1E
000f80 940e 1baa 	CALL SUBOPT_0x19
                 ; 0000 08FF             }
                 _0x1FB:
                 ; 0000 0900             if(voltage_2 == 0){ digit6(0,digit);}else{digit6(voltage_2%10,digit);}
000f82 91e0 0a17 	LDS  R30,_voltage_2
000f84 91f0 0a18 	LDS  R31,_voltage_2+1
000f86 9730      	SBIW R30,0
000f87 f411      	BRNE _0x1FE
000f88 e0e0      	LDI  R30,LOW(0)
000f89 c004      	RJMP _0x3EF
                 _0x1FE:
000f8a 940e 1bcb 	CALL SUBOPT_0x20
000f8c 940e 1bc6 	CALL SUBOPT_0x1F
                 _0x3EF:
000f8e 93ea      	ST   -Y,R30
000f8f 2dab      	MOV  R26,R11
000f90 df0c      	RCALL _digit6
                 ; 0000 0901 
                 ; 0000 0902 
                 ; 0000 0903             digit = 1;
000f91 e0e1      	LDI  R30,LOW(1)
000f92 e0f0      	LDI  R31,HIGH(1)
                +
000f93 2ebe     +MOV R11 , R30
000f94 2ecf     +MOV R12 , R31
                 	__PUTW1R 11,12
                 ; 0000 0904 
                 ; 0000 0905             if(currunt_1 < 100)
000f95 940e 1bd6 	CALL SUBOPT_0x22
000f97 36a4      	CPI  R26,LOW(0x64)
000f98 e0e0      	LDI  R30,HIGH(0x64)
000f99 07be      	CPC  R27,R30
000f9a f488      	BRSH _0x200
                 ; 0000 0906             {
                 ; 0000 0907               digit1(0,digit);
000f9b e0e0      	LDI  R30,LOW(0)
000f9c 940e 1b9e 	CALL SUBOPT_0x16
                 ; 0000 0908                if(currunt_1<10)
000f9e 940e 1bd6 	CALL SUBOPT_0x22
000fa0 971a      	SBIW R26,10
000fa1 f410      	BRSH _0x201
                 ; 0000 0909                 {
                 ; 0000 090A                    digit2(0,digit);
000fa2 e0e0      	LDI  R30,LOW(0)
000fa3 c004      	RJMP _0x3F0
                 ; 0000 090B                 }
                 ; 0000 090C                 else
                 _0x201:
                 ; 0000 090D                 {
                 ; 0000 090E                    digit2(currunt_1/10,digit);
000fa4 940e 1bd6 	CALL SUBOPT_0x22
000fa6 940e 1bb3 	CALL SUBOPT_0x1B
                 _0x3F0:
000fa8 93ea      	ST   -Y,R30
000fa9 2dab      	MOV  R26,R11
000faa dec4      	RCALL _digit2
                 ; 0000 090F                 }
                 ; 0000 0910             }
                 ; 0000 0911             else
000fab c015      	RJMP _0x203
                 _0x200:
                 ; 0000 0912             {
                 ; 0000 0913 
                 ; 0000 0914               if( currunt_1/100 < 10)
000fac 940e 1bdb 	CALL SUBOPT_0x23
000fae 973a      	SBIW R30,10
000faf f418      	BRSH _0x204
                 ; 0000 0915               {
                 ; 0000 0916                 digit1(currunt_1/100,digit);        //ÀÔ·Â °ªÀÌ 1000 ³ÑÀ» °æ¿ì  Ã³¸®
000fb0 940e 1bdb 	CALL SUBOPT_0x23
000fb2 c001      	RJMP _0x3F1
                 ; 0000 0917               }
                 ; 0000 0918               else
                 _0x204:
                 ; 0000 0919               {
                 ; 0000 091A                 digit1(0,digit);
000fb3 e0e0      	LDI  R30,LOW(0)
                 _0x3F1:
000fb4 93ea      	ST   -Y,R30
000fb5 2dab      	MOV  R26,R11
000fb6 deb4      	RCALL _digit1
                 ; 0000 091B               }
                 ; 0000 091C               digit2((currunt_1- ((currunt_1/100)*100))/10,digit);
000fb7 940e 1bdb 	CALL SUBOPT_0x23
000fb9 940e 1bbe 	CALL SUBOPT_0x1D
000fbb 940e 1bd6 	CALL SUBOPT_0x22
000fbd 940e 1bc3 	CALL SUBOPT_0x1E
000fbf 940e 1ba2 	CALL SUBOPT_0x17
                 ; 0000 091D             }
                 _0x203:
                 ; 0000 091E             if(currunt_1 == 0){ digit3(0,digit);}else{digit3(currunt_1%10,digit);}
000fc1 91e0 0a15 	LDS  R30,_currunt_1
000fc3 91f0 0a16 	LDS  R31,_currunt_1+1
000fc5 9730      	SBIW R30,0
000fc6 f411      	BRNE _0x206
000fc7 e0e0      	LDI  R30,LOW(0)
000fc8 c004      	RJMP _0x3F2
                 _0x206:
000fc9 940e 1bd6 	CALL SUBOPT_0x22
000fcb 940e 1bc6 	CALL SUBOPT_0x1F
                 _0x3F2:
000fcd 93ea      	ST   -Y,R30
000fce 2dab      	MOV  R26,R11
000fcf deb2      	RCALL _digit3
                 ; 0000 091F 
                 ; 0000 0920             if(currunt_2 < 100)
000fd0 940e 1be1 	CALL SUBOPT_0x24
000fd2 36a4      	CPI  R26,LOW(0x64)
000fd3 e0e0      	LDI  R30,HIGH(0x64)
000fd4 07be      	CPC  R27,R30
000fd5 f488      	BRSH _0x208
                 ; 0000 0921             {
                 ; 0000 0922               digit4(0,digit);
000fd6 e0e0      	LDI  R30,LOW(0)
000fd7 940e 1ba6 	CALL SUBOPT_0x18
                 ; 0000 0923                if(currunt_2<10)
000fd9 940e 1be1 	CALL SUBOPT_0x24
000fdb 971a      	SBIW R26,10
000fdc f410      	BRSH _0x209
                 ; 0000 0924                 {
                 ; 0000 0925                    digit5(0,digit);
000fdd e0e0      	LDI  R30,LOW(0)
000fde c004      	RJMP _0x3F3
                 ; 0000 0926                 }
                 ; 0000 0927                 else
                 _0x209:
                 ; 0000 0928                 {
                 ; 0000 0929                    digit5(currunt_2/10,digit);
000fdf 940e 1be1 	CALL SUBOPT_0x24
000fe1 940e 1bb3 	CALL SUBOPT_0x1B
                 _0x3F3:
000fe3 93ea      	ST   -Y,R30
000fe4 2dab      	MOV  R26,R11
000fe5 dea4      	RCALL _digit5
                 ; 0000 092A                 }
                 ; 0000 092B             }
                 ; 0000 092C             else
000fe6 c015      	RJMP _0x20B
                 _0x208:
                 ; 0000 092D             {
                 ; 0000 092E                 if( currunt_2/100 < 10)
000fe7 940e 1be6 	CALL SUBOPT_0x25
000fe9 973a      	SBIW R30,10
000fea f418      	BRSH _0x20C
                 ; 0000 092F                 {
                 ; 0000 0930                 digit4(currunt_2/100,digit);
000feb 940e 1be6 	CALL SUBOPT_0x25
000fed c001      	RJMP _0x3F4
                 ; 0000 0931                 }
                 ; 0000 0932                 else
                 _0x20C:
                 ; 0000 0933                 {
                 ; 0000 0934                 digit4(0,digit);
000fee e0e0      	LDI  R30,LOW(0)
                 _0x3F4:
000fef 93ea      	ST   -Y,R30
000ff0 2dab      	MOV  R26,R11
000ff1 de94      	RCALL _digit4
                 ; 0000 0935                 }
                 ; 0000 0936                 digit5((currunt_2 - ((currunt_2/100)*100))/10,digit);
000ff2 940e 1be6 	CALL SUBOPT_0x25
000ff4 940e 1bbe 	CALL SUBOPT_0x1D
000ff6 940e 1be1 	CALL SUBOPT_0x24
000ff8 940e 1bc3 	CALL SUBOPT_0x1E
000ffa 940e 1baa 	CALL SUBOPT_0x19
                 ; 0000 0937             }
                 _0x20B:
                 ; 0000 0938             if(currunt_2 == 0){ digit6(0,digit);}else{digit6(currunt_2%10,digit);}
000ffc 91e0 0a19 	LDS  R30,_currunt_2
000ffe 91f0 0a1a 	LDS  R31,_currunt_2+1
001000 9730      	SBIW R30,0
001001 f411      	BRNE _0x20E
001002 e0e0      	LDI  R30,LOW(0)
001003 c004      	RJMP _0x3F5
                 _0x20E:
001004 940e 1be1 	CALL SUBOPT_0x24
001006 940e 1bc6 	CALL SUBOPT_0x1F
                 _0x3F5:
001008 93ea      	ST   -Y,R30
001009 2dab      	MOV  R26,R11
00100a de92      	RCALL _digit6
                 ; 0000 0939 
                 ; 0000 093A 
                 ; 0000 093B             digit = 2;
00100b e0e2      	LDI  R30,LOW(2)
00100c e0f0      	LDI  R31,HIGH(2)
                +
00100d 2ebe     +MOV R11 , R30
00100e 2ecf     +MOV R12 , R31
                 	__PUTW1R 11,12
                 ; 0000 093C             if(bat_volt_1 < 100)
00100f 940e 1bec 	CALL SUBOPT_0x26
001011 36a4      	CPI  R26,LOW(0x64)
001012 e0e0      	LDI  R30,HIGH(0x64)
001013 07be      	CPC  R27,R30
001014 f524      	BRGE _0x210
                 ; 0000 093D             {
                 ; 0000 093E               digit1(0,digit);
001015 e0e0      	LDI  R30,LOW(0)
001016 940e 1b9e 	CALL SUBOPT_0x16
                 ; 0000 093F                if(bat_volt_1<10)
001018 940e 1bec 	CALL SUBOPT_0x26
00101a 971a      	SBIW R26,10
00101b f414      	BRGE _0x211
                 ; 0000 0940                 {
                 ; 0000 0941                    digit2(0,digit);
00101c e0e0      	LDI  R30,LOW(0)
00101d c006      	RJMP _0x3F6
                 ; 0000 0942                 }
                 ; 0000 0943                 else
                 _0x211:
                 ; 0000 0944                 {
                 ; 0000 0945                    digit2(bat_volt_1/10,digit);
00101e 940e 1bec 	CALL SUBOPT_0x26
001020 e0ea      	LDI  R30,LOW(10)
001021 e0f0      	LDI  R31,HIGH(10)
001022 940e 1c95 	CALL __DIVW21
                 _0x3F6:
001024 93ea      	ST   -Y,R30
001025 2dab      	MOV  R26,R11
001026 de48      	RCALL _digit2
                 ; 0000 0946                 }
                 ; 0000 0947             if(bat_volt_1 == 0){ digit3(0,digit);}else{digit3(bat_volt_1%10,digit);}
001027 91e0 0a08 	LDS  R30,_bat_volt_1
001029 91f0 0a09 	LDS  R31,_bat_volt_1+1
00102b 9730      	SBIW R30,0
00102c f411      	BRNE _0x213
00102d e0e0      	LDI  R30,LOW(0)
00102e c006      	RJMP _0x3F7
                 _0x213:
00102f 940e 1bec 	CALL SUBOPT_0x26
001031 e0ea      	LDI  R30,LOW(10)
001032 e0f0      	LDI  R31,HIGH(10)
001033 940e 1c9d 	CALL __MODW21
                 _0x3F7:
001035 93ea      	ST   -Y,R30
001036 2dab      	MOV  R26,R11
001037 de4a      	RCALL _digit3
                 ; 0000 0948             }
                 ; 0000 0949             else
001038 c00a      	RJMP _0x215
                 _0x210:
                 ; 0000 094A             {
                 ; 0000 094B                 digit1(1,digit);
001039 e0e1      	LDI  R30,LOW(1)
00103a 940e 1b9e 	CALL SUBOPT_0x16
                 ; 0000 094C                 digit2(0,digit);
00103c e0e0      	LDI  R30,LOW(0)
00103d 940e 1ba2 	CALL SUBOPT_0x17
                 ; 0000 094D                 digit3(0,digit);
00103f e0e0      	LDI  R30,LOW(0)
001040 93ea      	ST   -Y,R30
001041 2dab      	MOV  R26,R11
001042 de3f      	RCALL _digit3
                 ; 0000 094E             }
                 _0x215:
                 ; 0000 094F 
                 ; 0000 0950             if(bat_volt_2 < 100)
001043 940e 1bf1 	CALL SUBOPT_0x27
001045 36a4      	CPI  R26,LOW(0x64)
001046 e0e0      	LDI  R30,HIGH(0x64)
001047 07be      	CPC  R27,R30
001048 f524      	BRGE _0x216
                 ; 0000 0951             {
                 ; 0000 0952               digit4(0,digit);
001049 e0e0      	LDI  R30,LOW(0)
00104a 940e 1ba6 	CALL SUBOPT_0x18
                 ; 0000 0953                if(bat_volt_2<10)
00104c 940e 1bf1 	CALL SUBOPT_0x27
00104e 971a      	SBIW R26,10
00104f f414      	BRGE _0x217
                 ; 0000 0954                 {
                 ; 0000 0955                    digit5(0,digit);
001050 e0e0      	LDI  R30,LOW(0)
001051 c006      	RJMP _0x3F8
                 ; 0000 0956                 }
                 ; 0000 0957                 else
                 _0x217:
                 ; 0000 0958                 {
                 ; 0000 0959                    digit5(bat_volt_2/10,digit);
001052 940e 1bf1 	CALL SUBOPT_0x27
001054 e0ea      	LDI  R30,LOW(10)
001055 e0f0      	LDI  R31,HIGH(10)
001056 940e 1c95 	CALL __DIVW21
                 _0x3F8:
001058 93ea      	ST   -Y,R30
001059 2dab      	MOV  R26,R11
00105a de2f      	RCALL _digit5
                 ; 0000 095A                 }
                 ; 0000 095B             if(bat_volt_2 == 0){ digit6(0,digit);}else{digit6(bat_volt_2%10,digit);}
00105b 91e0 0a0a 	LDS  R30,_bat_volt_2
00105d 91f0 0a0b 	LDS  R31,_bat_volt_2+1
00105f 9730      	SBIW R30,0
001060 f411      	BRNE _0x219
001061 e0e0      	LDI  R30,LOW(0)
001062 c006      	RJMP _0x3F9
                 _0x219:
001063 940e 1bf1 	CALL SUBOPT_0x27
001065 e0ea      	LDI  R30,LOW(10)
001066 e0f0      	LDI  R31,HIGH(10)
001067 940e 1c9d 	CALL __MODW21
                 _0x3F9:
001069 93ea      	ST   -Y,R30
00106a 2dab      	MOV  R26,R11
00106b de31      	RCALL _digit6
                 ; 0000 095C             }
                 ; 0000 095D             else
00106c c00a      	RJMP _0x21B
                 _0x216:
                 ; 0000 095E             {
                 ; 0000 095F                 digit4(1,digit);
00106d e0e1      	LDI  R30,LOW(1)
00106e 940e 1ba6 	CALL SUBOPT_0x18
                 ; 0000 0960                 digit5(0,digit);
001070 e0e0      	LDI  R30,LOW(0)
001071 940e 1baa 	CALL SUBOPT_0x19
                 ; 0000 0961                 digit6(0,digit);
001073 e0e0      	LDI  R30,LOW(0)
001074 93ea      	ST   -Y,R30
001075 2dab      	MOV  R26,R11
001076 de26      	RCALL _digit6
                 ; 0000 0962             }
                 _0x21B:
                 ; 0000 0963 
                 ; 0000 0964 
                 ; 0000 0965 }
001077 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Common_CHeckLink(void)
                 ; 0000 0968 {
                 _Response_Common_CHeckLink:
                 ; .FSTART _Response_Common_CHeckLink
                 ; 0000 0969  putchar1(0x38);//type
001078 e3a8      	LDI  R26,LOW(56)
001079 d9b5      	RCALL _putchar1
                 ; 0000 096A  putchar1(0xf1);//id
00107a efa1      	LDI  R26,LOW(241)
00107b 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 096B  putchar1(0x28); //sol_data
                 ; 0000 096C  putchar1(0x20); //dest_data
                 ; 0000 096D  putchar1(Common_CheckLink_number);//number
00107d 91a0 0b7a 	LDS  R26,_Common_CheckLink_number
00107f 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 096E  putchar1(0x24);//style
                 ; 0000 096F  putchar1(0x00);//length
001081 940e 1c03 	CALL SUBOPT_0x2A
                 ; 0000 0970  putchar1(0x00);//length
                 ; 0000 0971  if(Common_CheckLink_number >= 0xff){Common_CheckLink_number = 0;}else{Common_CheckLink_number++;}
001083 91a0 0b7a 	LDS  R26,_Common_CheckLink_number
001085 3faf      	CPI  R26,LOW(0xFF)
001086 f010      	BRLO _0x21C
001087 e0e0      	LDI  R30,LOW(0)
001088 c003      	RJMP _0x3FA
                 _0x21C:
001089 91e0 0b7a 	LDS  R30,_Common_CheckLink_number
00108b 5fef      	SUBI R30,-LOW(1)
                 _0x3FA:
00108c 93e0 0b7a 	STS  _Common_CheckLink_number,R30
                 ; 0000 0972  Common_CHeckLink_act = 0;
00108e e0e0      	LDI  R30,LOW(0)
00108f 93e0 0b83 	STS  _Common_CHeckLink_act,R30
                 ; 0000 0973 }
001091 9508      	RET
                 ; .FEND
                 ;
                 ;//void Response_PoBITResult(void)
                 ;//{
                 ;// putchar1(0x38); //type
                 ;// putchar1(0x01); //id
                 ;// putchar1(0x28); //sol_data
                 ;// putchar1(0x20); //dest_data
                 ;// putchar1(PoBITResult_number);
                 ;// putchar1(0x25); //tm
                 ;// putchar1(0x00);//length_1
                 ;// putchar1(0x02);//length_2
                 ;// putchar1(0x05);//po bit»óÅÂ
                 ;//
                 ;// if(gen_err == 1){pobit_result |= 0x40;}else{pobit_result &= ~0x40;}
                 ;// if(batt_link_err_act_1 == 1){pobit_result |= 0x20;}else{pobit_result &= ~0x20;}
                 ;// if(batt_link_err_act_1 == 1){pobit_result |= 0x10;}else{pobit_result &= ~0x10;}
                 ;// if(batt_link_err_act_2 == 1){pobit_result |= 0x08;}else{pobit_result &= ~0x08;}
                 ;// if(power_link_1 & 0x80 != 0x80){pobit_result |= 0x04;}else{pobit_result &= ~0x04;}
                 ;// if(power_link_2 & 0x80 != 0x80){pobit_result |= 0x02;}else{pobit_result &= ~0x02;}
                 ;// if(DT_ERR == 1){pobit_result |= 0x01;}else{pobit_result &= ~0x01;}
                 ;// if(PoBITResult_number >= 0xff){PoBITResult_number = 0;}else{PoBITResult_number++;}
                 ;//
                 ;// PoBITResult_act = 0;
                 ;//}
                 ;
                 ;//¹èÀü±â PBITÀÀ´ä
                 ;void Response_Distributor_PBIT(void)
                 ; 0000 098F {
                 _Response_Distributor_PBIT:
                 ; .FSTART _Response_Distributor_PBIT
                 ; 0000 0990  putchar1(0x38); //type
001092 e3a8      	LDI  R26,LOW(56)
001093 d99b      	RCALL _putchar1
                 ; 0000 0991  putchar1(0xf3); //id
001094 efa3      	LDI  R26,LOW(243)
001095 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 0992  putchar1(0x28); //sol_data
                 ; 0000 0993  putchar1(0x20); //dest_data
                 ; 0000 0994  putchar1(Distributor_PBIT_number);
001097 91a0 0b7d 	LDS  R26,_Distributor_PBIT_number
001099 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 0995  putchar1(0x24); //tm
                 ; 0000 0996  putchar1(0x01);//length_1
00109b 940e 1c09 	CALL SUBOPT_0x2B
                 ; 0000 0997  putchar1(0x00);//length_2
                 ; 0000 0998  pbit_result = 0x00;//ÃÊ±â
00109d e0e0      	LDI  R30,LOW(0)
00109e 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0999 
                 ; 0000 099A  //Åë½Å»óÅÂ
                 ; 0000 099B  //bit 5 reserve
                 ; 0000 099C  if((comm_ge_err == ERR)||(power_link1_err == 1)||(power_link2_err == 1)||(batt_link_err_act_1 == 1)||
                 ; 0000 099D  (batt_link_err_act_2 == 1)||(DT_ERR == 1)){pbit_result |= 0x80;}else{pbit_result &= ~0x80;}//batt ¿Âµµ ºÒ·®///batt Àü·ù ...
0010a0 fc20      	SBRC R2,0
0010a1 c00e      	RJMP _0x21F
0010a2 91a0 0b64 	LDS  R26,_power_link1_err
0010a4 30a1      	CPI  R26,LOW(0x1)
0010a5 f051      	BREQ _0x21F
0010a6 91a0 0b65 	LDS  R26,_power_link2_err
0010a8 30a1      	CPI  R26,LOW(0x1)
0010a9 f031      	BREQ _0x21F
0010aa 99f2      	SBIC 0x1E,2
0010ab c004      	RJMP _0x21F
0010ac 99f3      	SBIC 0x1E,3
0010ad c002      	RJMP _0x21F
0010ae 9b15      	SBIS 0x2,5
0010af c004      	RJMP _0x21E
                 _0x21F:
0010b0 91e0 0b46 	LDS  R30,_pbit_result
0010b2 68e0      	ORI  R30,0x80
0010b3 c003      	RJMP _0x3FB
                 _0x21E:
0010b4 91e0 0b46 	LDS  R30,_pbit_result
0010b6 77ef      	ANDI R30,0x7F
                 _0x3FB:
0010b7 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 099E 
                 ; 0000 099F  if((ge_err_act == ERR)&&(comm_ge_err == NOR)){pbit_result |= 0x20;}else{pbit_result &= ~0x20;}//Åë½Å´ÜÀý½Ã ¿¡·¯Ç¥½Ã 0À¸ ...
0010b9 91a0 0b43 	LDS  R26,_ge_err_act
0010bb 30a1      	CPI  R26,LOW(0x1)
0010bc f411      	BRNE _0x223
0010bd fe20      	SBRS R2,0
0010be c001      	RJMP _0x224
                 _0x223:
0010bf c004      	RJMP _0x222
                 _0x224:
0010c0 91e0 0b46 	LDS  R30,_pbit_result
0010c2 62e0      	ORI  R30,0x20
0010c3 c003      	RJMP _0x3FC
                 _0x222:
0010c4 91e0 0b46 	LDS  R30,_pbit_result
0010c6 7def      	ANDI R30,0xDF
                 _0x3FC:
0010c7 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A0  if((err_bat2_volt == 1)||(err_bat2_temp == 1)||(err_bat2_curr == 1)){pbit_result |= 0x10;}else{pbit_result &= ~0x10;}
0010c9 91a0 0b77 	LDS  R26,_err_bat2_volt
0010cb 30a1      	CPI  R26,LOW(0x1)
0010cc f041      	BREQ _0x227
0010cd 91a0 0b75 	LDS  R26,_err_bat2_temp
0010cf 30a1      	CPI  R26,LOW(0x1)
0010d0 f021      	BREQ _0x227
0010d1 91a0 0b79 	LDS  R26,_err_bat2_curr
0010d3 30a1      	CPI  R26,LOW(0x1)
0010d4 f421      	BRNE _0x226
                 _0x227:
0010d5 91e0 0b46 	LDS  R30,_pbit_result
0010d7 61e0      	ORI  R30,0x10
0010d8 c003      	RJMP _0x3FD
                 _0x226:
0010d9 91e0 0b46 	LDS  R30,_pbit_result
0010db 7eef      	ANDI R30,0xEF
                 _0x3FD:
0010dc 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A1  if((err_bat1_volt == 1)||(err_bat1_temp == 1)||(err_bat1_curr == 1)){pbit_result |= 0x08;}else{pbit_result &= ~0x08;}
0010de 91a0 0b76 	LDS  R26,_err_bat1_volt
0010e0 30a1      	CPI  R26,LOW(0x1)
0010e1 f041      	BREQ _0x22B
0010e2 91a0 0b74 	LDS  R26,_err_bat1_temp
0010e4 30a1      	CPI  R26,LOW(0x1)
0010e5 f021      	BREQ _0x22B
0010e6 91a0 0b78 	LDS  R26,_err_bat1_curr
0010e8 30a1      	CPI  R26,LOW(0x1)
0010e9 f421      	BRNE _0x22A
                 _0x22B:
0010ea 91e0 0b46 	LDS  R30,_pbit_result
0010ec 60e8      	ORI  R30,8
0010ed c003      	RJMP _0x3FE
                 _0x22A:
0010ee 91e0 0b46 	LDS  R30,_pbit_result
0010f0 7fe7      	ANDI R30,0XF7
                 _0x3FE:
0010f1 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A2  if(power_2_err == 1){pbit_result |= 0x04;}else{pbit_result &= ~0x04;}
0010f3 91a0 0b73 	LDS  R26,_power_2_err
0010f5 30a1      	CPI  R26,LOW(0x1)
0010f6 f411      	BRNE _0x22E
0010f7 60e4      	ORI  R30,4
0010f8 c003      	RJMP _0x3FF
                 _0x22E:
0010f9 91e0 0b46 	LDS  R30,_pbit_result
0010fb 7feb      	ANDI R30,0xFB
                 _0x3FF:
0010fc 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A3  if(power_1_err == 1){pbit_result |= 0x02;}else{pbit_result &= ~0x02;}
0010fe 91a0 0b72 	LDS  R26,_power_1_err
001100 30a1      	CPI  R26,LOW(0x1)
001101 f411      	BRNE _0x230
001102 60e2      	ORI  R30,2
001103 c003      	RJMP _0x400
                 _0x230:
001104 91e0 0b46 	LDS  R30,_pbit_result
001106 7fed      	ANDI R30,0xFD
                 _0x400:
001107 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A4  if(deiver_48_err == ERR){pbit_result |= 0x01;}else{pbit_result &= ~0x01;}
001109 91a0 0a69 	LDS  R26,_deiver_48_err
00110b 30a1      	CPI  R26,LOW(0x1)
00110c f411      	BRNE _0x232
00110d 60e1      	ORI  R30,1
00110e c003      	RJMP _0x401
                 _0x232:
00110f 91e0 0b46 	LDS  R30,_pbit_result
001111 7fee      	ANDI R30,0xFE
                 _0x401:
001112 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09A5 
                 ; 0000 09A6  putchar1(pbit_result);//pobit°á°ú
001114 91a0 0b46 	LDS  R26,_pbit_result
001116 d918      	RCALL _putchar1
                 ; 0000 09A7  if(Distributor_PBIT_number >= 0xff){Distributor_PBIT_number = 0;}else{Distributor_PBIT_number++;}
001117 91a0 0b7d 	LDS  R26,_Distributor_PBIT_number
001119 3faf      	CPI  R26,LOW(0xFF)
00111a f010      	BRLO _0x234
00111b e0e0      	LDI  R30,LOW(0)
00111c c003      	RJMP _0x402
                 _0x234:
00111d 91e0 0b7d 	LDS  R30,_Distributor_PBIT_number
00111f 5fef      	SUBI R30,-LOW(1)
                 _0x402:
001120 93e0 0b7d 	STS  _Distributor_PBIT_number,R30
                 ; 0000 09A8  Distributor_PBIT_act = 0;
001122 e0e0      	LDI  R30,LOW(0)
001123 93e0 0b84 	STS  _Distributor_PBIT_act,R30
                 ; 0000 09A9 }
001125 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Distributor_ShutdownResponse(void)
                 ; 0000 09AC {
                 _Response_Distributor_ShutdownResponse:
                 ; .FSTART _Response_Distributor_ShutdownResponse
                 ; 0000 09AD  putchar1(0x38); //type
001126 e3a8      	LDI  R26,LOW(56)
001127 d907      	RCALL _putchar1
                 ; 0000 09AE  putchar1(0x00); //id
001128 e0a0      	LDI  R26,LOW(0)
001129 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 09AF  putchar1(0x28); //sol_data
                 ; 0000 09B0  putchar1(0x20); //dest_data
                 ; 0000 09B1  putchar1(Distributor_ShutdownResponse_number);
00112b 91a0 0b7f 	LDS  R26,_Distributor_ShutdownResponse_number
00112d 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 09B2  putchar1(0x24); //tm
                 ; 0000 09B3  putchar1(0x01);//length_1
00112f e0a1      	LDI  R26,LOW(1)
001130 d8fe      	RCALL _putchar1
                 ; 0000 09B4  putchar1(0x00);//length_2
001131 940e 1c03 	CALL SUBOPT_0x2A
                 ; 0000 09B5  putchar1(0x00);//pobit°á°ú
                 ; 0000 09B6  if(Distributor_ShutdownResponse_number >= 0xff){Distributor_ShutdownResponse_number = 0;}else{Distributor_ShutdownRespo ...
001133 91a0 0b7f 	LDS  R26,_Distributor_ShutdownResponse_number
001135 3faf      	CPI  R26,LOW(0xFF)
001136 f010      	BRLO _0x236
001137 e0e0      	LDI  R30,LOW(0)
001138 c003      	RJMP _0x403
                 _0x236:
001139 91e0 0b7f 	LDS  R30,_Distributor_ShutdownResponse_number
00113b 5fef      	SUBI R30,-LOW(1)
                 _0x403:
00113c 93e0 0b7f 	STS  _Distributor_ShutdownResponse_number,R30
                 ; 0000 09B7  Distributor_ShutdownResponse_act = 0;
00113e e0e0      	LDI  R30,LOW(0)
00113f 93e0 0b85 	STS  _Distributor_ShutdownResponse_act,R30
                 ; 0000 09B8 }
001141 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Distributor_ShutdownErroResponse(void)
                 ; 0000 09BB {
                 _Response_Distributor_ShutdownErroResponse:
                 ; .FSTART _Response_Distributor_ShutdownErroResponse
                 ; 0000 09BC  putchar1(0x38); //type
001142 e3a8      	LDI  R26,LOW(56)
001143 d8eb      	RCALL _putchar1
                 ; 0000 09BD  putchar1(0x03); //id
001144 e0a3      	LDI  R26,LOW(3)
001145 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 09BE  putchar1(0x28); //sol_data
                 ; 0000 09BF  putchar1(0x20); //dest_data
                 ; 0000 09C0  putchar1(Distributor_ShutdownErroResponse_number);
001147 91a0 0b7b 	LDS  R26,_Distributor_ShutdownErroResponse_number
001149 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 09C1  putchar1(0x24); //tm
                 ; 0000 09C2  putchar1(0x07); //length 1
00114b e0a7      	LDI  R26,LOW(7)
00114c 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 09C3  putchar1(0x00); //length 2
                 ; 0000 09C4  putchar1(keep_year);//year
00114e e0a2      	LDI  R26,LOW(_keep_year)
00114f e0b0      	LDI  R27,HIGH(_keep_year)
001150 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09C5  putchar1(keep_month);//month
001152 e0a4      	LDI  R26,LOW(_keep_month)
001153 e0b0      	LDI  R27,HIGH(_keep_month)
001154 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09C6  putchar1(keep_day);//day
001156 e0a6      	LDI  R26,LOW(_keep_day)
001157 e0b0      	LDI  R27,HIGH(_keep_day)
001158 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09C7  putchar1(keep_hour);//hour
00115a e0a7      	LDI  R26,LOW(_keep_hour)
00115b e0b0      	LDI  R27,HIGH(_keep_hour)
00115c 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09C8  putchar1(keep_minute);//minute
00115e e0a9      	LDI  R26,LOW(_keep_minute)
00115f e0b0      	LDI  R27,HIGH(_keep_minute)
001160 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09C9  putchar1(keep_sec);//sec
001162 e0ab      	LDI  R26,LOW(_keep_sec)
001163 e0b0      	LDI  R27,HIGH(_keep_sec)
001164 940e 1c14 	CALL SUBOPT_0x2D
                 ; 0000 09CA  putchar1(0x01);//error device
001166 e0a1      	LDI  R26,LOW(1)
001167 d8c7      	RCALL _putchar1
                 ; 0000 09CB  if(Distributor_ShutdownErroResponse_number >= 0xff){Distributor_ShutdownErroResponse_number = 0;}else{Distributor_Shutd ...
001168 91a0 0b7b 	LDS  R26,_Distributor_ShutdownErroResponse_number
00116a 3faf      	CPI  R26,LOW(0xFF)
00116b f010      	BRLO _0x238
00116c e0e0      	LDI  R30,LOW(0)
00116d c003      	RJMP _0x404
                 _0x238:
00116e 91e0 0b7b 	LDS  R30,_Distributor_ShutdownErroResponse_number
001170 5fef      	SUBI R30,-LOW(1)
                 _0x404:
001171 93e0 0b7b 	STS  _Distributor_ShutdownErroResponse_number,R30
                 ; 0000 09CC  Distributor_ShutdownErroResponse_act = 0;
001173 e0e0      	LDI  R30,LOW(0)
001174 93e0 0b86 	STS  _Distributor_ShutdownErroResponse_act,R30
                 ; 0000 09CD }
001176 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Distributor_TimeSyncAck(void)
                 ; 0000 09D0 {
                 _Response_Distributor_TimeSyncAck:
                 ; .FSTART _Response_Distributor_TimeSyncAck
                 ; 0000 09D1  putchar1(0x38); //type
001177 e3a8      	LDI  R26,LOW(56)
001178 d8b6      	RCALL _putchar1
                 ; 0000 09D2  putchar1(0x04); //id
001179 e0a4      	LDI  R26,LOW(4)
00117a 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 09D3  putchar1(0x28); //sol_data
                 ; 0000 09D4  putchar1(0x20); //dest_data
                 ; 0000 09D5  putchar1(Distributor_TimeSyncAck_number);
00117c 91a0 0b7e 	LDS  R26,_Distributor_TimeSyncAck_number
00117e 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 09D6  putchar1(0x24); //tm
                 ; 0000 09D7  putchar1(0x01); //length 1
001180 940e 1c09 	CALL SUBOPT_0x2B
                 ; 0000 09D8  putchar1(0x00); //length 2
                 ; 0000 09D9  putchar1(0x01); //¼³Á¤ ¿Ï·á ÀÀ´ä
001182 e0a1      	LDI  R26,LOW(1)
001183 d8ab      	RCALL _putchar1
                 ; 0000 09DA  if(Distributor_TimeSyncAck_number >= 0xff){Distributor_TimeSyncAck_number = 0;}else{Distributor_TimeSyncAck_number++;}
001184 91a0 0b7e 	LDS  R26,_Distributor_TimeSyncAck_number
001186 3faf      	CPI  R26,LOW(0xFF)
001187 f010      	BRLO _0x23A
001188 e0e0      	LDI  R30,LOW(0)
001189 c003      	RJMP _0x405
                 _0x23A:
00118a 91e0 0b7e 	LDS  R30,_Distributor_TimeSyncAck_number
00118c 5fef      	SUBI R30,-LOW(1)
                 _0x405:
00118d 93e0 0b7e 	STS  _Distributor_TimeSyncAck_number,R30
                 ; 0000 09DB  Distributor_TimeSyncAck_act = 0;
00118f e0e0      	LDI  R30,LOW(0)
001190 93e0 0b87 	STS  _Distributor_TimeSyncAck_act,R30
                 ; 0000 09DC }
001192 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void Response_Distributor_PoBITResponse_pre(void)
                 ; 0000 09E0 {
                 _Response_Distributor_PoBITResponse_pre:
                 ; .FSTART _Response_Distributor_PoBITResponse_pre
                 ; 0000 09E1  //ackÃ³¸®
                 ; 0000 09E2  putchar1(0x38); //type
001193 940e 1c19 	CALL SUBOPT_0x2E
                 ; 0000 09E3  putchar1(0x01); //id
                 ; 0000 09E4  putchar1(0x28); //sol_data
                 ; 0000 09E5  putchar1(0x20); //dest_data
                 ; 0000 09E6  putchar1(PoBITResult_number_ack);
001195 91a0 0b81 	LDS  R26,_PoBITResult_number_ack
001197 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 09E7  putchar1(0x24); //tm
                 ; 0000 09E8  putchar1(0x02);//length_1
001199 e0a2      	LDI  R26,LOW(2)
00119a 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 09E9  putchar1(0x00);//length_2
                 ; 0000 09EA  putchar1(0x01);//ack
00119c 940e 1c09 	CALL SUBOPT_0x2B
                 ; 0000 09EB  putchar1(0x00);//µ¥ÀÌÅÍ ¾øÀ½
                 ; 0000 09EC  if(PoBITResult_number_ack >= 0xff){PoBITResult_number_ack = 0;}else{PoBITResult_number_ack++;}
00119e 91a0 0b81 	LDS  R26,_PoBITResult_number_ack
0011a0 3faf      	CPI  R26,LOW(0xFF)
0011a1 f010      	BRLO _0x23C
0011a2 e0e0      	LDI  R30,LOW(0)
0011a3 c003      	RJMP _0x406
                 _0x23C:
0011a4 91e0 0b81 	LDS  R30,_PoBITResult_number_ack
0011a6 5fef      	SUBI R30,-LOW(1)
                 _0x406:
0011a7 93e0 0b81 	STS  _PoBITResult_number_ack,R30
                 ; 0000 09ED  Distributor_PoBIT_act_pre= 0;
0011a9 e0e0      	LDI  R30,LOW(0)
0011aa 93e0 0b8a 	STS  _Distributor_PoBIT_act_pre,R30
                 ; 0000 09EE }
0011ac 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Distributor_PoBITResponse(void)
                 ; 0000 09F1 {
                 _Response_Distributor_PoBITResponse:
                 ; .FSTART _Response_Distributor_PoBITResponse
                 ; 0000 09F2  putchar1(0x38); //type
0011ad 940e 1c19 	CALL SUBOPT_0x2E
                 ; 0000 09F3  putchar1(0x01); //id
                 ; 0000 09F4  putchar1(0x28); //sol_data
                 ; 0000 09F5  putchar1(0x20); //dest_data
                 ; 0000 09F6  putchar1(PoBITResult_number);
0011af 91a0 0b80 	LDS  R26,_PoBITResult_number
0011b1 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 09F7  putchar1(0x24); //tm
                 ; 0000 09F8  putchar1(0x02);//length_1
0011b3 e0a2      	LDI  R26,LOW(2)
0011b4 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 09F9  putchar1(0x00);//length_2
                 ; 0000 09FA  putchar1(0x05);//po bit»óÅÂ
0011b6 e0a5      	LDI  R26,LOW(5)
0011b7 d877      	RCALL _putchar1
                 ; 0000 09FB  if(PoBITResult_number >= 0xff){PoBITResult_number = 0;}else{PoBITResult_number++;}
0011b8 91a0 0b80 	LDS  R26,_PoBITResult_number
0011ba 3faf      	CPI  R26,LOW(0xFF)
0011bb f010      	BRLO _0x23E
0011bc e0e0      	LDI  R30,LOW(0)
0011bd c003      	RJMP _0x407
                 _0x23E:
0011be 91e0 0b80 	LDS  R30,_PoBITResult_number
0011c0 5fef      	SUBI R30,-LOW(1)
                 _0x407:
0011c1 93e0 0b80 	STS  _PoBITResult_number,R30
                 ; 0000 09FC  //Åë½Å»óÅÂ
                 ; 0000 09FD  //bit 5 reserve
                 ; 0000 09FE  if((comm_ge_err == ERR)||(power_link1_err == 1)||(power_link2_err == 1)||(batt_link_err_act_1 == 1)||(batt_link_err_act ...
0011c3 fc20      	SBRC R2,0
0011c4 c00e      	RJMP _0x241
0011c5 91a0 0b64 	LDS  R26,_power_link1_err
0011c7 30a1      	CPI  R26,LOW(0x1)
0011c8 f051      	BREQ _0x241
0011c9 91a0 0b65 	LDS  R26,_power_link2_err
0011cb 30a1      	CPI  R26,LOW(0x1)
0011cc f031      	BREQ _0x241
0011cd 99f2      	SBIC 0x1E,2
0011ce c004      	RJMP _0x241
0011cf 99f3      	SBIC 0x1E,3
0011d0 c002      	RJMP _0x241
0011d1 9b15      	SBIS 0x2,5
0011d2 c004      	RJMP _0x240
                 _0x241:
0011d3 91e0 0b46 	LDS  R30,_pbit_result
0011d5 68e0      	ORI  R30,0x80
0011d6 c003      	RJMP _0x408
                 _0x240:
0011d7 91e0 0b46 	LDS  R30,_pbit_result
0011d9 77ef      	ANDI R30,0x7F
                 _0x408:
0011da 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 09FF  if(ge_err_act == ERR){pbit_result |= 0x20;}else{pbit_result &= ~0x20;}
0011dc 91a0 0b43 	LDS  R26,_ge_err_act
0011de 30a1      	CPI  R26,LOW(0x1)
0011df f411      	BRNE _0x244
0011e0 62e0      	ORI  R30,0x20
0011e1 c003      	RJMP _0x409
                 _0x244:
0011e2 91e0 0b46 	LDS  R30,_pbit_result
0011e4 7def      	ANDI R30,0xDF
                 _0x409:
0011e5 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A00  if((err_bat2_volt == 1)||(err_bat2_temp == 1)||(err_bat2_curr == 1)){pbit_result |= 0x10;}else{pbit_result &= ~0x10;}
0011e7 91a0 0b77 	LDS  R26,_err_bat2_volt
0011e9 30a1      	CPI  R26,LOW(0x1)
0011ea f041      	BREQ _0x247
0011eb 91a0 0b75 	LDS  R26,_err_bat2_temp
0011ed 30a1      	CPI  R26,LOW(0x1)
0011ee f021      	BREQ _0x247
0011ef 91a0 0b79 	LDS  R26,_err_bat2_curr
0011f1 30a1      	CPI  R26,LOW(0x1)
0011f2 f421      	BRNE _0x246
                 _0x247:
0011f3 91e0 0b46 	LDS  R30,_pbit_result
0011f5 61e0      	ORI  R30,0x10
0011f6 c003      	RJMP _0x40A
                 _0x246:
0011f7 91e0 0b46 	LDS  R30,_pbit_result
0011f9 7eef      	ANDI R30,0xEF
                 _0x40A:
0011fa 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A01  if((err_bat1_volt == 1)||(err_bat1_temp == 1)||(err_bat1_curr == 1)){pbit_result |= 0x08;}else{pbit_result &= ~0x08;}
0011fc 91a0 0b76 	LDS  R26,_err_bat1_volt
0011fe 30a1      	CPI  R26,LOW(0x1)
0011ff f041      	BREQ _0x24B
001200 91a0 0b74 	LDS  R26,_err_bat1_temp
001202 30a1      	CPI  R26,LOW(0x1)
001203 f021      	BREQ _0x24B
001204 91a0 0b78 	LDS  R26,_err_bat1_curr
001206 30a1      	CPI  R26,LOW(0x1)
001207 f421      	BRNE _0x24A
                 _0x24B:
001208 91e0 0b46 	LDS  R30,_pbit_result
00120a 60e8      	ORI  R30,8
00120b c003      	RJMP _0x40B
                 _0x24A:
00120c 91e0 0b46 	LDS  R30,_pbit_result
00120e 7fe7      	ANDI R30,0XF7
                 _0x40B:
00120f 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A02  if(power_2_err == 1){pbit_result |= 0x04;}else{pbit_result &= ~0x04;}
001211 91a0 0b73 	LDS  R26,_power_2_err
001213 30a1      	CPI  R26,LOW(0x1)
001214 f411      	BRNE _0x24E
001215 60e4      	ORI  R30,4
001216 c003      	RJMP _0x40C
                 _0x24E:
001217 91e0 0b46 	LDS  R30,_pbit_result
001219 7feb      	ANDI R30,0xFB
                 _0x40C:
00121a 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A03  if(power_1_err == 1){pbit_result |= 0x02;}else{pbit_result &= ~0x02;}
00121c 91a0 0b72 	LDS  R26,_power_1_err
00121e 30a1      	CPI  R26,LOW(0x1)
00121f f411      	BRNE _0x250
001220 60e2      	ORI  R30,2
001221 c003      	RJMP _0x40D
                 _0x250:
001222 91e0 0b46 	LDS  R30,_pbit_result
001224 7fed      	ANDI R30,0xFD
                 _0x40D:
001225 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A04  if(deiver_48_err == ERR){pbit_result |= 0x01;}else{pbit_result &= ~0x01;}
001227 91a0 0a69 	LDS  R26,_deiver_48_err
001229 30a1      	CPI  R26,LOW(0x1)
00122a f411      	BRNE _0x252
00122b 60e1      	ORI  R30,1
00122c c003      	RJMP _0x40E
                 _0x252:
00122d 91e0 0b46 	LDS  R30,_pbit_result
00122f 7fee      	ANDI R30,0xFE
                 _0x40E:
001230 93e0 0b46 	STS  _pbit_result,R30
                 ; 0000 0A05 
                 ; 0000 0A06  putchar1(pobit_result);//pobit°á°ú
001232 91a0 0b45 	LDS  R26,_pobit_result
001234 940e 0a2f 	CALL _putchar1
                 ; 0000 0A07  if(PoBITResult_number >= 0xff){PoBITResult_number = 0;}else{PoBITResult_number++;}
001236 91a0 0b80 	LDS  R26,_PoBITResult_number
001238 3faf      	CPI  R26,LOW(0xFF)
001239 f010      	BRLO _0x254
00123a e0e0      	LDI  R30,LOW(0)
00123b c003      	RJMP _0x40F
                 _0x254:
00123c 91e0 0b80 	LDS  R30,_PoBITResult_number
00123e 5fef      	SUBI R30,-LOW(1)
                 _0x40F:
00123f 93e0 0b80 	STS  _PoBITResult_number,R30
                 ; 0000 0A08  Distributor_PoBIT_act= 0;
001241 e0e0      	LDI  R30,LOW(0)
001242 93e0 0b89 	STS  _Distributor_PoBIT_act,R30
                 ; 0000 0A09 }
001244 9508      	RET
                 ; .FEND
                 ;
                 ;void Response_Distributor_BITDetailResponse(void)
                 ; 0000 0A0C {
                 _Response_Distributor_BITDetailResponse:
                 ; .FSTART _Response_Distributor_BITDetailResponse
                 ; 0000 0A0D  putchar1(0x38); //type
001245 e3a8      	LDI  R26,LOW(56)
001246 940e 0a2f 	CALL _putchar1
                 ; 0000 0A0E  putchar1(0x02); //id
001248 e0a2      	LDI  R26,LOW(2)
001249 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 0A0F  putchar1(0x28); //sol_data
                 ; 0000 0A10  putchar1(0x20); //dest_data
                 ; 0000 0A11  putchar1(Distributor_BITBetailResponse_number);
00124b 91a0 0b7c 	LDS  R26,_Distributor_BITBetailResponse_number
00124d 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 0A12  putchar1(0x24); //tm
                 ; 0000 0A13  putchar1(0x02); //length 1
00124f e0a2      	LDI  R26,LOW(2)
001250 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 0A14  putchar1(0x00); //length 2
                 ; 0000 0A15  //Åë½Å»óÅÂ
                 ; 0000 0A16  //bit 5 reserve
                 ; 0000 0A17 // if(gen_err  == 1){pbit_result |= 0x20;}else{pbit_result &= ~0x20;}//5
                 ; 0000 0A18 // if(batt_link_err_act_2 == 1){pbit_result |= 0x10;}else{pbit_result &= ~0x10;}
                 ; 0000 0A19 // if(batt_link_err_act_1 == 1){pbit_result |= 0x08;}else{pbit_result &= ~0x08;}
                 ; 0000 0A1A // if(power_link2_err == 1){pbit_result |= 0x04;}else{pbit_result &= ~0x04;}
                 ; 0000 0A1B // if(power_link1_err == 1){pbit_result |= 0x02;}else{pbit_result &= ~0x02;}
                 ; 0000 0A1C // if(DT_ERR == 1){pbit_result |= 0x01;}else{pbit_result &= ~0x01;}
                 ; 0000 0A1D  putchar1(po_bit_recive_data_detail);//pobit°á°ú
001252 91a0 0b8c 	LDS  R26,_po_bit_recive_data_detail
001254 940e 0a2f 	CALL _putchar1
                 ; 0000 0A1E 
                 ; 0000 0A1F // //µ¥ÀÌÅÍ ÃÊ±âÈ­
                 ; 0000 0A20 // link_err_detail = 0x00;
                 ; 0000 0A21 // div_err_detail = 0x00;
                 ; 0000 0A22 // power_1_err_detail = 0x00;
                 ; 0000 0A23 // power_2_err_detail = 0x00;
                 ; 0000 0A24 // bat_1_err_detail = 0x00;
                 ; 0000 0A25 // bat_2_err_detail = 0x00;
                 ; 0000 0A26 // gen_err_detail = 0x00;
                 ; 0000 0A27 
                 ; 0000 0A28  //*****************
                 ; 0000 0A29  //¿¡·¯ µ¥ÀÌÅÍ Á¤·Ä
                 ; 0000 0A2A  //*****************
                 ; 0000 0A2B 
                 ; 0000 0A2C  //¸µÅ©¿¡·¯
                 ; 0000 0A2D // link_err_detail = 0x00;
                 ; 0000 0A2E 
                 ; 0000 0A2F  if(comm_ge_err == ERR){link_err_detail |= 0x20;}else{link_err_detail &= ~0x20;} //¹ßÀü±â ¸µÅ© ¿¡·¯
001256 fe20      	SBRS R2,0
001257 c004      	RJMP _0x256
001258 940e 1c1e 	CALL SUBOPT_0x2F
00125a 62e0      	ORI  R30,0x20
00125b c003      	RJMP _0x410
                 _0x256:
00125c 940e 1c1e 	CALL SUBOPT_0x2F
00125e 7def      	ANDI R30,LOW(0xFFDF)
                 _0x410:
00125f 93e0 0b6a 	STS  _link_err_detail,R30
001261 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A30  if(batt_link_err_act_2 == ERR){link_err_detail |= 0x10;}else{link_err_detail &= ~0x10;} //¹èÅÍ¸®1 ¸µÅ© ¿¡·¯
001263 9bf3      	SBIS 0x1E,3
001264 c004      	RJMP _0x258
001265 940e 1c1e 	CALL SUBOPT_0x2F
001267 61e0      	ORI  R30,0x10
001268 c003      	RJMP _0x411
                 _0x258:
001269 940e 1c1e 	CALL SUBOPT_0x2F
00126b 7eef      	ANDI R30,LOW(0xFFEF)
                 _0x411:
00126c 93e0 0b6a 	STS  _link_err_detail,R30
00126e 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A31  if(batt_link_err_act_1 == ERR){link_err_detail |= 0x08;}else{link_err_detail &= ~0x08;} //¹èÅÍ¸®2 ¸µÅ© ¿¡·¯
001270 9bf2      	SBIS 0x1E,2
001271 c004      	RJMP _0x25A
001272 940e 1c1e 	CALL SUBOPT_0x2F
001274 60e8      	ORI  R30,8
001275 c003      	RJMP _0x412
                 _0x25A:
001276 940e 1c1e 	CALL SUBOPT_0x2F
001278 7fe7      	ANDI R30,LOW(0xFFF7)
                 _0x412:
001279 93e0 0b6a 	STS  _link_err_detail,R30
00127b 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A32  if((power_link_2 & 0x80) != 0x80){link_err_detail |= 0x04;}else{link_err_detail &= ~0x04;} //Àü¿ø¹Ý1 ¸µÅ© ¿¡·¯
00127d 91e0 0b63 	LDS  R30,_power_link_2
00127f 78e0      	ANDI R30,LOW(0x80)
001280 38e0      	CPI  R30,LOW(0x80)
001281 f021      	BREQ _0x25C
001282 940e 1c1e 	CALL SUBOPT_0x2F
001284 60e4      	ORI  R30,4
001285 c003      	RJMP _0x413
                 _0x25C:
001286 940e 1c1e 	CALL SUBOPT_0x2F
001288 7feb      	ANDI R30,LOW(0xFFFB)
                 _0x413:
001289 93e0 0b6a 	STS  _link_err_detail,R30
00128b 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A33  if((power_link_1 & 0x80) != 0x80){link_err_detail |= 0x02;}else{link_err_detail &= ~0x02;} //Àü¿ø¹Ý2 ¸µÅ© ¿¡·¯
00128d 91e0 0b62 	LDS  R30,_power_link_1
00128f 78e0      	ANDI R30,LOW(0x80)
001290 38e0      	CPI  R30,LOW(0x80)
001291 f021      	BREQ _0x25E
001292 940e 1c1e 	CALL SUBOPT_0x2F
001294 60e2      	ORI  R30,2
001295 c003      	RJMP _0x414
                 _0x25E:
001296 940e 1c1e 	CALL SUBOPT_0x2F
001298 7fed      	ANDI R30,LOW(0xFFFD)
                 _0x414:
001299 93e0 0b6a 	STS  _link_err_detail,R30
00129b 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A34  if((comm_err == 1)||(dt_err_act == 1)){link_err_detail |= 0x01;}else{link_err_detail &= ~0x01;} //ºÐ¹è±â ¸µÅ© ¿¡·¯
00129d 99f7      	SBIC 0x1E,7
00129e c002      	RJMP _0x261
00129f 9bf6      	SBIS 0x1E,6
0012a0 c004      	RJMP _0x260
                 _0x261:
0012a1 940e 1c1e 	CALL SUBOPT_0x2F
0012a3 60e1      	ORI  R30,1
0012a4 c003      	RJMP _0x415
                 _0x260:
0012a5 940e 1c1e 	CALL SUBOPT_0x2F
0012a7 7fee      	ANDI R30,LOW(0xFFFE)
                 _0x415:
0012a8 93e0 0b6a 	STS  _link_err_detail,R30
0012aa 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A35 
                 ; 0000 0A36  //¹ßÀü±â
                 ; 0000 0A37  if(comm_ge_err == ERR)
0012ac fe20      	SBRS R2,0
0012ad c002      	RJMP _0x264
                 ; 0000 0A38  {
                 ; 0000 0A39   gen_err_detail = 0x00;
0012ae e0e0      	LDI  R30,LOW(0)
0012af c044      	RJMP _0x416
                 ; 0000 0A3A  }
                 ; 0000 0A3B  else
                 _0x264:
                 ; 0000 0A3C  {
                 ; 0000 0A3D  if((ge_err_data & 0x10) == 0x10){gen_err_detail |= 0x10;}else{gen_err_detail &= ~0x10;} //¹ßÀü±â ¿ÀÀÏ ¾Ð·Â
0012b0 91e0 0b3e 	LDS  R30,_ge_err_data
0012b2 71e0      	ANDI R30,LOW(0x10)
0012b3 31e0      	CPI  R30,LOW(0x10)
0012b4 f421      	BRNE _0x266
0012b5 91e0 0b71 	LDS  R30,_gen_err_detail
0012b7 61e0      	ORI  R30,0x10
0012b8 c003      	RJMP _0x417
                 _0x266:
0012b9 91e0 0b71 	LDS  R30,_gen_err_detail
0012bb 7eef      	ANDI R30,0xEF
                 _0x417:
0012bc 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A3E  if((ge_err_data & 0x08) == 0x08){gen_err_detail |= 0x08;}else{gen_err_detail &= ~0x08;} //¹ßÀü±â °ú¼Óµµ
0012be 91e0 0b3e 	LDS  R30,_ge_err_data
0012c0 70e8      	ANDI R30,LOW(0x8)
0012c1 30e8      	CPI  R30,LOW(0x8)
0012c2 f421      	BRNE _0x268
0012c3 91e0 0b71 	LDS  R30,_gen_err_detail
0012c5 60e8      	ORI  R30,8
0012c6 c003      	RJMP _0x418
                 _0x268:
0012c7 91e0 0b71 	LDS  R30,_gen_err_detail
0012c9 7fe7      	ANDI R30,0XF7
                 _0x418:
0012ca 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A3F  if((ge_err_data & 0x04) == 0x04){gen_err_detail |= 0x04;}else{gen_err_detail &= ~0x04;} //¹ßÀü±â ¿£Áø°ú¿Âµµ
0012cc 91e0 0b3e 	LDS  R30,_ge_err_data
0012ce 70e4      	ANDI R30,LOW(0x4)
0012cf 30e4      	CPI  R30,LOW(0x4)
0012d0 f421      	BRNE _0x26A
0012d1 91e0 0b71 	LDS  R30,_gen_err_detail
0012d3 60e4      	ORI  R30,4
0012d4 c003      	RJMP _0x419
                 _0x26A:
0012d5 91e0 0b71 	LDS  R30,_gen_err_detail
0012d7 7feb      	ANDI R30,0xFB
                 _0x419:
0012d8 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A40  if((ge_err_data & 0x02) == 0x02){gen_err_detail |= 0x02;}else{gen_err_detail &= ~0x02;} //¹ßÀü±â Àü¾ÐÀÌ»ó
0012da 91e0 0b3e 	LDS  R30,_ge_err_data
0012dc 70e2      	ANDI R30,LOW(0x2)
0012dd 30e2      	CPI  R30,LOW(0x2)
0012de f421      	BRNE _0x26C
0012df 91e0 0b71 	LDS  R30,_gen_err_detail
0012e1 60e2      	ORI  R30,2
0012e2 c003      	RJMP _0x41A
                 _0x26C:
0012e3 91e0 0b71 	LDS  R30,_gen_err_detail
0012e5 7fed      	ANDI R30,0xFD
                 _0x41A:
0012e6 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A41  if((ge_err_data & 0x01) == 0x01){gen_err_detail |= 0x01;}else{gen_err_detail &= ~0x01;} //¹ßÀü±â °úÀü·ù
0012e8 91e0 0b3e 	LDS  R30,_ge_err_data
0012ea 70e1      	ANDI R30,LOW(0x1)
0012eb 30e1      	CPI  R30,LOW(0x1)
0012ec f421      	BRNE _0x26E
0012ed 91e0 0b71 	LDS  R30,_gen_err_detail
0012ef 60e1      	ORI  R30,1
0012f0 c003      	RJMP _0x416
                 _0x26E:
0012f1 91e0 0b71 	LDS  R30,_gen_err_detail
0012f3 7fee      	ANDI R30,0xFE
                 _0x416:
0012f4 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A42  }
                 ; 0000 0A43 
                 ; 0000 0A44   //¹èÅÍ¸®2
                 ; 0000 0A45  if(err_bat2_temp == 1){bat_2_err_detail |= 0x04;}else{bat_2_err_detail &= ~0x04;} //batt ¿Âµµ ºÒ·®
0012f6 91a0 0b75 	LDS  R26,_err_bat2_temp
0012f8 30a1      	CPI  R26,LOW(0x1)
0012f9 f421      	BRNE _0x270
0012fa 91e0 0b70 	LDS  R30,_bat_2_err_detail
0012fc 60e4      	ORI  R30,4
0012fd c003      	RJMP _0x41B
                 _0x270:
0012fe 91e0 0b70 	LDS  R30,_bat_2_err_detail
001300 7feb      	ANDI R30,0xFB
                 _0x41B:
001301 93e0 0b70 	STS  _bat_2_err_detail,R30
                 ; 0000 0A46  if(err_bat2_curr == 1){bat_2_err_detail |= 0x02;}else{bat_2_err_detail &= ~0x02;} //batt Àü·ù ºÒ·®
001303 91a0 0b79 	LDS  R26,_err_bat2_curr
001305 30a1      	CPI  R26,LOW(0x1)
001306 f411      	BRNE _0x272
001307 60e2      	ORI  R30,2
001308 c003      	RJMP _0x41C
                 _0x272:
001309 91e0 0b70 	LDS  R30,_bat_2_err_detail
00130b 7fed      	ANDI R30,0xFD
                 _0x41C:
00130c 93e0 0b70 	STS  _bat_2_err_detail,R30
                 ; 0000 0A47  if(err_bat2_volt == 1){bat_2_err_detail |= 0x01;}else{bat_2_err_detail &= ~0x01;} //batt Àü¾Ð ºÒ·®
00130e 91a0 0b77 	LDS  R26,_err_bat2_volt
001310 30a1      	CPI  R26,LOW(0x1)
001311 f411      	BRNE _0x274
001312 60e1      	ORI  R30,1
001313 c003      	RJMP _0x41D
                 _0x274:
001314 91e0 0b70 	LDS  R30,_bat_2_err_detail
001316 7fee      	ANDI R30,0xFE
                 _0x41D:
001317 93e0 0b70 	STS  _bat_2_err_detail,R30
                 ; 0000 0A48 
                 ; 0000 0A49 // if((err_main_2 & 0x40) == 0x40){bat_2_err_detail |= 0x04;}else{bat_1_err_detail &= ~0x04;} //batt ¿Âµµ ºÒ·®
                 ; 0000 0A4A // if((err_main_2 & 0x08) == 0x08){bat_2_err_detail |= 0x02;}else{bat_1_err_detail &= ~0x02;} //batt Àü·ù ºÒ·®
                 ; 0000 0A4B // if((err_main_2 & 0x10) == 0x10){bat_2_err_detail |= 0x01;}else{bat_1_err_detail &= ~0x01;} //batt Àü¾Ð ºÒ·®
                 ; 0000 0A4C 
                 ; 0000 0A4D  //¹èÅÍ¸®1
                 ; 0000 0A4E  if(err_bat1_temp == 1){bat_1_err_detail |= 0x04;}else{bat_1_err_detail &= ~0x04;} //batt ¿Âµµ ºÒ·®
001319 91a0 0b74 	LDS  R26,_err_bat1_temp
00131b 30a1      	CPI  R26,LOW(0x1)
00131c f421      	BRNE _0x276
00131d 91e0 0b6f 	LDS  R30,_bat_1_err_detail
00131f 60e4      	ORI  R30,4
001320 c003      	RJMP _0x41E
                 _0x276:
001321 91e0 0b6f 	LDS  R30,_bat_1_err_detail
001323 7feb      	ANDI R30,0xFB
                 _0x41E:
001324 93e0 0b6f 	STS  _bat_1_err_detail,R30
                 ; 0000 0A4F  if(err_bat1_curr == 1){bat_1_err_detail |= 0x02;}else{bat_1_err_detail &= ~0x02;} //batt Àü·ù ºÒ·®
001326 91a0 0b78 	LDS  R26,_err_bat1_curr
001328 30a1      	CPI  R26,LOW(0x1)
001329 f411      	BRNE _0x278
00132a 60e2      	ORI  R30,2
00132b c003      	RJMP _0x41F
                 _0x278:
00132c 91e0 0b6f 	LDS  R30,_bat_1_err_detail
00132e 7fed      	ANDI R30,0xFD
                 _0x41F:
00132f 93e0 0b6f 	STS  _bat_1_err_detail,R30
                 ; 0000 0A50  if(err_bat1_volt == 1){bat_1_err_detail |= 0x01;}else{bat_1_err_detail &= ~0x01;} //batt Àü¾Ð ºÒ·®
001331 91a0 0b76 	LDS  R26,_err_bat1_volt
001333 30a1      	CPI  R26,LOW(0x1)
001334 f411      	BRNE _0x27A
001335 60e1      	ORI  R30,1
001336 c003      	RJMP _0x420
                 _0x27A:
001337 91e0 0b6f 	LDS  R30,_bat_1_err_detail
001339 7fee      	ANDI R30,0xFE
                 _0x420:
00133a 93e0 0b6f 	STS  _bat_1_err_detail,R30
                 ; 0000 0A51 
                 ; 0000 0A52 
                 ; 0000 0A53 // if((err_main_1 & 0x40) == 0x40){bat_1_err_detail |= 0x04;}else{bat_1_err_detail &= ~0x04;} //batt ¿Âµµ ºÒ·®
                 ; 0000 0A54 // if((err_main_1 & 0x08) == 0x08){bat_1_err_detail |= 0x02;}else{bat_1_err_detail &= ~0x02;} //batt Àü·ù ºÒ·®
                 ; 0000 0A55 // if((err_main_1 & 0x10) == 0x10){bat_1_err_detail |= 0x01;}else{bat_1_err_detail &= ~0x01;} //batt Àü¾Ð ºÒ·®
                 ; 0000 0A56 
                 ; 0000 0A57  //Àü¿ø¹Ý 2 ¿¡·¯
                 ; 0000 0A58   if((err_main_2 & 0x80)==0x80){power_2_err_detail = 0x01;}else{power_2_err_detail = 0x00;}  //Àü¿ø¹Ý2ÀÌ ÇÏ³ª¶óµµ ¿¡·¯¸¸ ...
00133c 91e0 0b34 	LDS  R30,_err_main_2
00133e 78e0      	ANDI R30,LOW(0x80)
00133f 38e0      	CPI  R30,LOW(0x80)
001340 f411      	BRNE _0x27C
001341 e0e1      	LDI  R30,LOW(1)
001342 c001      	RJMP _0x421
                 _0x27C:
001343 e0e0      	LDI  R30,LOW(0)
                 _0x421:
001344 93e0 0b6e 	STS  _power_2_err_detail,R30
                 ; 0000 0A59 // if((power_link_2 & 0x80) != 0x80){power_2_err_detail = 0x01;}else{power_2_err_detail = 0x00;}
                 ; 0000 0A5A 
                 ; 0000 0A5B  //Àü¿ø¹Ý 1 ¿¡·¯
                 ; 0000 0A5C    if((err_main_1 & 0x80)==0x80){power_1_err_detail = 0x01;}else{power_1_err_detail = 0x00;}  //Àü¿ø¹Ý1ÀÌ ÇÏ³ª¶óµµ ¿¡·¯¸ ...
001346 91e0 0b2f 	LDS  R30,_err_main_1
001348 78e0      	ANDI R30,LOW(0x80)
001349 38e0      	CPI  R30,LOW(0x80)
00134a f411      	BRNE _0x27E
00134b e0e1      	LDI  R30,LOW(1)
00134c c001      	RJMP _0x422
                 _0x27E:
00134d e0e0      	LDI  R30,LOW(0)
                 _0x422:
00134e 93e0 0b6d 	STS  _power_1_err_detail,R30
                 ; 0000 0A5D //  if((power_link_1 & 0x80)!=0x80){power_1_err_detail = 0x01;}else{power_1_err_detail = 0x00;}  //Àü¿ø¹Ý1ÀÌ ÇÏ³ª¶óµµ ¿¡ ...
                 ; 0000 0A5E 
                 ; 0000 0A5F  //ºÐ¹è±â ¿¡·¯
                 ; 0000 0A60  if(deiver_48_err == ERR){div_err_detail = 0x01;}else{div_err_detail = 0x00;}
001350 91a0 0a69 	LDS  R26,_deiver_48_err
001352 30a1      	CPI  R26,LOW(0x1)
001353 f411      	BRNE _0x280
001354 e0e1      	LDI  R30,LOW(1)
001355 c001      	RJMP _0x423
                 _0x280:
001356 e0e0      	LDI  R30,LOW(0)
                 _0x423:
001357 93e0 0b6c 	STS  _div_err_detail,R30
                 ; 0000 0A61 
                 ; 0000 0A62  //*****************
                 ; 0000 0A63  //½ÃÇè¿ë µ¥ÀÌÅÍ Ãâ·Â
                 ; 0000 0A64  //****************
                 ; 0000 0A65  if(ADDRESS_2 == 0)
001359 91e0 0103 	LDS  R30,259
00135b 70e2      	ANDI R30,LOW(0x2)
00135c 30e2      	CPI  R30,LOW(0x2)
00135d f0c1      	BREQ _0x282
                 ; 0000 0A66  {
                 ; 0000 0A67      link_err_detail = 0x80;
00135e e8e0      	LDI  R30,LOW(128)
00135f e0f0      	LDI  R31,HIGH(128)
001360 93e0 0b6a 	STS  _link_err_detail,R30
001362 93f0 0b6b 	STS  _link_err_detail+1,R31
                 ; 0000 0A68      gen_err_detail = 0x20;
001364 e2e0      	LDI  R30,LOW(32)
001365 93e0 0b71 	STS  _gen_err_detail,R30
                 ; 0000 0A69      bat_2_err_detail = 0x10;
001367 e1e0      	LDI  R30,LOW(16)
001368 93e0 0b70 	STS  _bat_2_err_detail,R30
                 ; 0000 0A6A      bat_1_err_detail = 0x08;
00136a e0e8      	LDI  R30,LOW(8)
00136b 93e0 0b6f 	STS  _bat_1_err_detail,R30
                 ; 0000 0A6B      power_2_err_detail = 0x04;
00136d e0e4      	LDI  R30,LOW(4)
00136e 93e0 0b6e 	STS  _power_2_err_detail,R30
                 ; 0000 0A6C      power_1_err_detail = 0x02;
001370 e0e2      	LDI  R30,LOW(2)
001371 93e0 0b6d 	STS  _power_1_err_detail,R30
                 ; 0000 0A6D      div_err_detail = 0x01;
001373 e0e1      	LDI  R30,LOW(1)
001374 93e0 0b6c 	STS  _div_err_detail,R30
                 ; 0000 0A6E  }
                 ; 0000 0A6F 
                 ; 0000 0A70 
                 ; 0000 0A71  //reserve
                 ; 0000 0A72  if((po_bit_recive_data_detail & 0x80) == 0x80){putchar1(link_err_detail);} //link connection    ÀÓ¹«Ã³¸®±â °íÀå(1)
                 _0x282:
001376 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
001378 78e0      	ANDI R30,LOW(0x80)
001379 38e0      	CPI  R30,LOW(0x80)
00137a f421      	BRNE _0x283
00137b 91a0 0b6a 	LDS  R26,_link_err_detail
00137d 940e 0a2f 	CALL _putchar1
                 ; 0000 0A73  if((po_bit_recive_data_detail & 0x20) == 0x20){putchar1(gen_err_detail);} //general device ¹ßÀü±â ¿ÀÀÏ¾Ð·Â(4) ¿£Áø °ú¼Ó ...
                 _0x283:
00137f 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
001381 72e0      	ANDI R30,LOW(0x20)
001382 32e0      	CPI  R30,LOW(0x20)
001383 f421      	BRNE _0x284
001384 91a0 0b71 	LDS  R26,_gen_err_detail
001386 940e 0a2f 	CALL _putchar1
                 ; 0000 0A74  if((po_bit_recive_data_detail & 0x10) == 0x10){putchar1(bat_2_err_detail);} //nattery device #2 ¹èÅÍ¸®2 ¿Âµµ(2) Àü·ù(1) ...
                 _0x284:
001388 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
00138a 71e0      	ANDI R30,LOW(0x10)
00138b 31e0      	CPI  R30,LOW(0x10)
00138c f421      	BRNE _0x285
00138d 91a0 0b70 	LDS  R26,_bat_2_err_detail
00138f 940e 0a2f 	CALL _putchar1
                 ; 0000 0A75  if((po_bit_recive_data_detail & 0x08) == 0x08){putchar1(bat_1_err_detail);} //battery device #1 ¹èÅÍ¸®1 ¿Âµµ(2) Àü·ù(1) ...
                 _0x285:
001391 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
001393 70e8      	ANDI R30,LOW(0x8)
001394 30e8      	CPI  R30,LOW(0x8)
001395 f421      	BRNE _0x286
001396 91a0 0b6f 	LDS  R26,_bat_1_err_detail
001398 940e 0a2f 	CALL _putchar1
                 ; 0000 0A76  if((po_bit_recive_data_detail & 0x04) == 0x04){putchar1(power_2_err_detail);} //power device#2  Àü¿ø°ø±Þ±â2 °íÀå(1)
                 _0x286:
00139a 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
00139c 70e4      	ANDI R30,LOW(0x4)
00139d 30e4      	CPI  R30,LOW(0x4)
00139e f421      	BRNE _0x287
00139f 91a0 0b6e 	LDS  R26,_power_2_err_detail
0013a1 940e 0a2f 	CALL _putchar1
                 ; 0000 0A77  if((po_bit_recive_data_detail & 0x02) == 0x02){putchar1(power_1_err_detail);} //power device#1  Àü¿ø°ø±Þ±â1 °íÀå(1)
                 _0x287:
0013a3 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
0013a5 70e2      	ANDI R30,LOW(0x2)
0013a6 30e2      	CPI  R30,LOW(0x2)
0013a7 f421      	BRNE _0x288
0013a8 91a0 0b6d 	LDS  R26,_power_1_err_detail
0013aa 940e 0a2f 	CALL _putchar1
                 ; 0000 0A78  if((po_bit_recive_data_detail & 0x01) == 0x01){putchar1(div_err_detail);} //¹èÀü±â »óÅÂ   ¹èÀü±â »óÅÂ °íÀå(1)
                 _0x288:
0013ac 91e0 0b8c 	LDS  R30,_po_bit_recive_data_detail
0013ae 70e1      	ANDI R30,LOW(0x1)
0013af 30e1      	CPI  R30,LOW(0x1)
0013b0 f421      	BRNE _0x289
0013b1 91a0 0b6c 	LDS  R26,_div_err_detail
0013b3 940e 0a2f 	CALL _putchar1
                 ; 0000 0A79 
                 ; 0000 0A7A  if(Distributor_BITBetailResponse_number >= 0xff){Distributor_BITBetailResponse_number = 0;}else{Distributor_BITBetailRe ...
                 _0x289:
0013b5 91a0 0b7c 	LDS  R26,_Distributor_BITBetailResponse_number
0013b7 3faf      	CPI  R26,LOW(0xFF)
0013b8 f010      	BRLO _0x28A
0013b9 e0e0      	LDI  R30,LOW(0)
0013ba c003      	RJMP _0x424
                 _0x28A:
0013bb 91e0 0b7c 	LDS  R30,_Distributor_BITBetailResponse_number
0013bd 5fef      	SUBI R30,-LOW(1)
                 _0x424:
0013be 93e0 0b7c 	STS  _Distributor_BITBetailResponse_number,R30
                 ; 0000 0A7B  Distributor_BITDetailResponse_act = 0;
0013c0 e0e0      	LDI  R30,LOW(0)
0013c1 93e0 0b88 	STS  _Distributor_BITDetailResponse_act,R30
                 ; 0000 0A7C }
0013c3 9508      	RET
                 ; .FEND
                 ;
                 ;void Report_Distributor_DeviceStatus(void) //ÀåÄ¡ »óÅÂ Ãâ·Â 10hz ÁÖ±âÀû
                 ; 0000 0A7F {
                 _Report_Distributor_DeviceStatus:
                 ; .FSTART _Report_Distributor_DeviceStatus
                 ; 0000 0A80  putchar1(0x38); //type
0013c4 e3a8      	LDI  R26,LOW(56)
0013c5 940e 0a2f 	CALL _putchar1
                 ; 0000 0A81  putchar1(0xf6); //id
0013c7 efa6      	LDI  R26,LOW(246)
0013c8 940e 1bf6 	CALL SUBOPT_0x28
                 ; 0000 0A82  putchar1(0x28); //sol_data
                 ; 0000 0A83  putchar1(0x20); //dest_data
                 ; 0000 0A84  putchar1(Distributor_devicestatus_number);
0013ca 91a0 0b82 	LDS  R26,_Distributor_devicestatus_number
0013cc 940e 1bfe 	CALL SUBOPT_0x29
                 ; 0000 0A85  putchar1(0x24); //tm
                 ; 0000 0A86  putchar1(0x2a); //length 1
0013ce e2aa      	LDI  R26,LOW(42)
0013cf 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 0A87  putchar1(0x00); //length 2 //39¹ÙÀÌÆ®
                 ; 0000 0A88 
                 ; 0000 0A89  //switch_»óÅÂ »ç¿ë Àü¿ø ±¸ºÐ
                 ; 0000 0A8A  if((batt_run_act_1 == ON)||(batt_run_act_2 == ON))
0013d1 99f4      	SBIC 0x1E,4
0013d2 c002      	RJMP _0x28D
0013d3 9bf5      	SBIS 0x1E,5
0013d4 c002      	RJMP _0x28C
                 _0x28D:
                 ; 0000 0A8B  {
                 ; 0000 0A8C   putchar1(0x04);
0013d5 e0a4      	LDI  R26,LOW(4)
0013d6 c002      	RJMP _0x425
                 ; 0000 0A8D  }
                 ; 0000 0A8E  else
                 _0x28C:
                 ; 0000 0A8F  {
                 ; 0000 0A90   putchar1(sw_status);//¹èÅÍ¸®(2) ¿ÜºÎÀü¿ø(1) ¹ßÀü±â(0)
0013d7 91a0 0b61 	LDS  R26,_sw_status
                 _0x425:
0013d9 940e 0a2f 	CALL _putchar1
                 ; 0000 0A91  }
                 ; 0000 0A92  //****************
                 ; 0000 0A93  //½ÃÇè¿ë µ¥ÀÌÅÍ Ãâ·Â
                 ; 0000 0A94  //****************
                 ; 0000 0A95  if(ADDRESS_1 == 0)
0013db 91e0 0103 	LDS  R30,259
0013dd 70e4      	ANDI R30,LOW(0x4)
0013de 30e4      	CPI  R30,LOW(0x4)
0013df f409      	BRNE PC+2
0013e0 c0ce      	RJMP _0x290
                 ; 0000 0A96  {
                 ; 0000 0A97   voltage_ge = 450;
0013e1 ece2      	LDI  R30,LOW(450)
0013e2 e0f1      	LDI  R31,HIGH(450)
0013e3 93e0 0b3f 	STS  _voltage_ge,R30
0013e5 93f0 0b40 	STS  _voltage_ge+1,R31
                 ; 0000 0A98   currunt_ge = 100;
0013e7 e6e4      	LDI  R30,LOW(100)
0013e8 e0f0      	LDI  R31,HIGH(100)
0013e9 93e0 0b41 	STS  _currunt_ge,R30
0013eb 93f0 0b42 	STS  _currunt_ge+1,R31
                 ; 0000 0A99 
                 ; 0000 0A9A   voltage_m24_1 = 280;
0013ed e1e8      	LDI  R30,LOW(280)
0013ee e0f1      	LDI  R31,HIGH(280)
0013ef 93e0 0a3b 	STS  _voltage_m24_1,R30
0013f1 93f0 0a3c 	STS  _voltage_m24_1+1,R31
                 ; 0000 0A9B   currunt_1 = 101;
0013f3 e6e5      	LDI  R30,LOW(101)
0013f4 e0f0      	LDI  R31,HIGH(101)
0013f5 940e 1ad1 	CALL SUBOPT_0x3
                 ; 0000 0A9C 
                 ; 0000 0A9D   voltage_m24_2 = 280;
0013f7 e1e8      	LDI  R30,LOW(280)
0013f8 e0f1      	LDI  R31,HIGH(280)
0013f9 93e0 0a5f 	STS  _voltage_m24_2,R30
0013fb 93f0 0a60 	STS  _voltage_m24_2+1,R31
                 ; 0000 0A9E   currunt_2 = 102;
0013fd e6e6      	LDI  R30,LOW(102)
0013fe e0f0      	LDI  R31,HIGH(102)
0013ff 940e 1af0 	CALL SUBOPT_0x6
                 ; 0000 0A9F 
                 ; 0000 0AA0   voltage_ch1_1 = 281;
001401 e1e9      	LDI  R30,LOW(281)
001402 e0f1      	LDI  R31,HIGH(281)
001403 93e0 0a1b 	STS  _voltage_ch1_1,R30
001405 93f0 0a1c 	STS  _voltage_ch1_1+1,R31
                 ; 0000 0AA1   voltage_ch2_1 = 282;
001407 e1ea      	LDI  R30,LOW(282)
001408 e0f1      	LDI  R31,HIGH(282)
001409 93e0 0a1d 	STS  _voltage_ch2_1,R30
00140b 93f0 0a1e 	STS  _voltage_ch2_1+1,R31
                 ; 0000 0AA2   voltage_ch3_1 = 283;
00140d e1eb      	LDI  R30,LOW(283)
00140e e0f1      	LDI  R31,HIGH(283)
00140f 93e0 0a1f 	STS  _voltage_ch3_1,R30
001411 93f0 0a20 	STS  _voltage_ch3_1+1,R31
                 ; 0000 0AA3   voltage_ch4_1 = 284;
001413 e1ec      	LDI  R30,LOW(284)
001414 e0f1      	LDI  R31,HIGH(284)
001415 93e0 0a21 	STS  _voltage_ch4_1,R30
001417 93f0 0a22 	STS  _voltage_ch4_1+1,R31
                 ; 0000 0AA4   voltage_ch5_1 = 285;
001419 e1ed      	LDI  R30,LOW(285)
00141a e0f1      	LDI  R31,HIGH(285)
00141b 93e0 0a23 	STS  _voltage_ch5_1,R30
00141d 93f0 0a24 	STS  _voltage_ch5_1+1,R31
                 ; 0000 0AA5   voltage_ch6_1 = 286;
00141f e1ee      	LDI  R30,LOW(286)
001420 e0f1      	LDI  R31,HIGH(286)
001421 93e0 0a25 	STS  _voltage_ch6_1,R30
001423 93f0 0a26 	STS  _voltage_ch6_1+1,R31
                 ; 0000 0AA6   voltage_ch7_1 = 287;
001425 e1ef      	LDI  R30,LOW(287)
001426 e0f1      	LDI  R31,HIGH(287)
001427 93e0 0a27 	STS  _voltage_ch7_1,R30
001429 93f0 0a28 	STS  _voltage_ch7_1+1,R31
                 ; 0000 0AA7 
                 ; 0000 0AA8   voltage_ch1_2 = 281;
00142b e1e9      	LDI  R30,LOW(281)
00142c e0f1      	LDI  R31,HIGH(281)
00142d 93e0 0a3f 	STS  _voltage_ch1_2,R30
00142f 93f0 0a40 	STS  _voltage_ch1_2+1,R31
                 ; 0000 0AA9   voltage_ch2_2 = 282;
001431 e1ea      	LDI  R30,LOW(282)
001432 e0f1      	LDI  R31,HIGH(282)
001433 93e0 0a41 	STS  _voltage_ch2_2,R30
001435 93f0 0a42 	STS  _voltage_ch2_2+1,R31
                 ; 0000 0AAA   voltage_ch3_2 = 283;
001437 e1eb      	LDI  R30,LOW(283)
001438 e0f1      	LDI  R31,HIGH(283)
001439 93e0 0a43 	STS  _voltage_ch3_2,R30
00143b 93f0 0a44 	STS  _voltage_ch3_2+1,R31
                 ; 0000 0AAB   voltage_ch4_2 = 284;
00143d e1ec      	LDI  R30,LOW(284)
00143e e0f1      	LDI  R31,HIGH(284)
00143f 93e0 0a45 	STS  _voltage_ch4_2,R30
001441 93f0 0a46 	STS  _voltage_ch4_2+1,R31
                 ; 0000 0AAC   voltage_ch5_2 = 285;
001443 e1ed      	LDI  R30,LOW(285)
001444 e0f1      	LDI  R31,HIGH(285)
001445 93e0 0a47 	STS  _voltage_ch5_2,R30
001447 93f0 0a48 	STS  _voltage_ch5_2+1,R31
                 ; 0000 0AAD   voltage_ch6_2 = 286;
001449 e1ee      	LDI  R30,LOW(286)
00144a e0f1      	LDI  R31,HIGH(286)
00144b 93e0 0a49 	STS  _voltage_ch6_2,R30
00144d 93f0 0a4a 	STS  _voltage_ch6_2+1,R31
                 ; 0000 0AAE   voltage_ch7_2 = 287;
00144f e1ef      	LDI  R30,LOW(287)
001450 e0f1      	LDI  R31,HIGH(287)
001451 93e0 0a4b 	STS  _voltage_ch7_2,R30
001453 93f0 0a4c 	STS  _voltage_ch7_2+1,R31
                 ; 0000 0AAF 
                 ; 0000 0AB0   currunt_ch1_1 = 151;
001455 e9e7      	LDI  R30,LOW(151)
001456 e0f0      	LDI  R31,HIGH(151)
001457 93e0 0a2d 	STS  _currunt_ch1_1,R30
001459 93f0 0a2e 	STS  _currunt_ch1_1+1,R31
                 ; 0000 0AB1   currunt_ch2_1 = 152;
00145b e9e8      	LDI  R30,LOW(152)
00145c e0f0      	LDI  R31,HIGH(152)
00145d 93e0 0a2f 	STS  _currunt_ch2_1,R30
00145f 93f0 0a30 	STS  _currunt_ch2_1+1,R31
                 ; 0000 0AB2   currunt_ch3_1 = 153;
001461 e9e9      	LDI  R30,LOW(153)
001462 e0f0      	LDI  R31,HIGH(153)
001463 93e0 0a31 	STS  _currunt_ch3_1,R30
001465 93f0 0a32 	STS  _currunt_ch3_1+1,R31
                 ; 0000 0AB3   currunt_ch4_1 = 154;
001467 e9ea      	LDI  R30,LOW(154)
001468 e0f0      	LDI  R31,HIGH(154)
001469 93e0 0a33 	STS  _currunt_ch4_1,R30
00146b 93f0 0a34 	STS  _currunt_ch4_1+1,R31
                 ; 0000 0AB4   currunt_ch5_1 = 155;
00146d e9eb      	LDI  R30,LOW(155)
00146e e0f0      	LDI  R31,HIGH(155)
00146f 93e0 0a35 	STS  _currunt_ch5_1,R30
001471 93f0 0a36 	STS  _currunt_ch5_1+1,R31
                 ; 0000 0AB5   currunt_ch6_1 = 156;
001473 e9ec      	LDI  R30,LOW(156)
001474 e0f0      	LDI  R31,HIGH(156)
001475 93e0 0a37 	STS  _currunt_ch6_1,R30
001477 93f0 0a38 	STS  _currunt_ch6_1+1,R31
                 ; 0000 0AB6   currunt_ch7_1 = 157;
001479 e9ed      	LDI  R30,LOW(157)
00147a e0f0      	LDI  R31,HIGH(157)
00147b 93e0 0a39 	STS  _currunt_ch7_1,R30
00147d 93f0 0a3a 	STS  _currunt_ch7_1+1,R31
                 ; 0000 0AB7 
                 ; 0000 0AB8   currunt_ch1_2 = 151;
00147f e9e7      	LDI  R30,LOW(151)
001480 e0f0      	LDI  R31,HIGH(151)
001481 93e0 0a51 	STS  _currunt_ch1_2,R30
001483 93f0 0a52 	STS  _currunt_ch1_2+1,R31
                 ; 0000 0AB9   currunt_ch2_2 = 152;
001485 e9e8      	LDI  R30,LOW(152)
001486 e0f0      	LDI  R31,HIGH(152)
001487 93e0 0a53 	STS  _currunt_ch2_2,R30
001489 93f0 0a54 	STS  _currunt_ch2_2+1,R31
                 ; 0000 0ABA   currunt_ch3_2 = 153;
00148b e9e9      	LDI  R30,LOW(153)
00148c e0f0      	LDI  R31,HIGH(153)
00148d 93e0 0a55 	STS  _currunt_ch3_2,R30
00148f 93f0 0a56 	STS  _currunt_ch3_2+1,R31
                 ; 0000 0ABB   currunt_ch4_2 = 154;
001491 e9ea      	LDI  R30,LOW(154)
001492 e0f0      	LDI  R31,HIGH(154)
001493 93e0 0a57 	STS  _currunt_ch4_2,R30
001495 93f0 0a58 	STS  _currunt_ch4_2+1,R31
                 ; 0000 0ABC   currunt_ch5_2 = 155;
001497 e9eb      	LDI  R30,LOW(155)
001498 e0f0      	LDI  R31,HIGH(155)
001499 93e0 0a59 	STS  _currunt_ch5_2,R30
00149b 93f0 0a5a 	STS  _currunt_ch5_2+1,R31
                 ; 0000 0ABD   currunt_ch6_2 = 156;
00149d e9ec      	LDI  R30,LOW(156)
00149e e0f0      	LDI  R31,HIGH(156)
00149f 93e0 0a5b 	STS  _currunt_ch6_2,R30
0014a1 93f0 0a5c 	STS  _currunt_ch6_2+1,R31
                 ; 0000 0ABE   currunt_ch7_2 = 157;
0014a3 e9ed      	LDI  R30,LOW(157)
0014a4 e0f0      	LDI  R31,HIGH(157)
0014a5 93e0 0a5d 	STS  _currunt_ch7_2,R30
0014a7 93f0 0a5e 	STS  _currunt_ch7_2+1,R31
                 ; 0000 0ABF 
                 ; 0000 0AC0   batt_level_1 = 40;
0014a9 e2e8      	LDI  R30,LOW(40)
0014aa 93e0 0b2e 	STS  _batt_level_1,R30
                 ; 0000 0AC1   batt_level_2 = 80;
0014ac e5e0      	LDI  R30,LOW(80)
0014ad 93e0 0b33 	STS  _batt_level_2,R30
                 ; 0000 0AC2  }
                 ; 0000 0AC3 
                 ; 0000 0AC4 
                 ; 0000 0AC5 
                 ; 0000 0AC6  //Àü¿ø°ø±Þ±â #1 Àü¾Ð Àü·ù
                 ; 0000 0AC7  if((voltage_m24_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_m24_1 - 150);}else{putchar1(0x00);}    // current1
                 _0x290:
0014af 91a0 0a3b 	LDS  R26,_voltage_m24_1
0014b1 91b0 0a3c 	LDS  R27,_voltage_m24_1+1
0014b3 39a7      	CPI  R26,LOW(0x97)
0014b4 e0e0      	LDI  R30,HIGH(0x97)
0014b5 07be      	CPC  R27,R30
0014b6 f010      	BRLO _0x292
0014b7 9b15      	SBIS 0x2,5
0014b8 c001      	RJMP _0x293
                 _0x292:
0014b9 c004      	RJMP _0x291
                 _0x293:
0014ba 91a0 0a3b 	LDS  R26,_voltage_m24_1
0014bc 59a6      	SUBI R26,LOW(150)
0014bd c001      	RJMP _0x426
                 _0x291:
0014be e0a0      	LDI  R26,LOW(0)
                 _0x426:
0014bf 940e 0a2f 	CALL _putchar1
                 ; 0000 0AC8  if(DT_ERR == NOR)
0014c1 9915      	SBIC 0x2,5
0014c2 c009      	RJMP _0x295
                 ; 0000 0AC9  {
                 ; 0000 0ACA  putchar1(currunt_2%256);
0014c3 91e0 0a19 	LDS  R30,_currunt_2
0014c5 2fae      	MOV  R26,R30
0014c6 940e 0a2f 	CALL _putchar1
                 ; 0000 0ACB  putchar1(currunt_2/256);
0014c8 91e0 0a1a 	LDS  R30,_currunt_2+1
0014ca 2fae      	MOV  R26,R30
0014cb c004      	RJMP _0x427
                 ; 0000 0ACC  }
                 ; 0000 0ACD  else
                 _0x295:
                 ; 0000 0ACE  {
                 ; 0000 0ACF  putchar1(0x00);
0014cc e0a0      	LDI  R26,LOW(0)
0014cd 940e 0a2f 	CALL _putchar1
                 ; 0000 0AD0  putchar1(0x00);
0014cf e0a0      	LDI  R26,LOW(0)
                 _0x427:
0014d0 940e 0a2f 	CALL _putchar1
                 ; 0000 0AD1  }
                 ; 0000 0AD2 
                 ; 0000 0AD3 
                 ; 0000 0AD4  //Àü¿ø°ø±Þ±â #2 Àü¾Ð Àü·ù
                 ; 0000 0AD5  if((voltage_m24_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_m24_2 - 150);}else{putchar1(0x00);}     // current2
0014d2 91a0 0a5f 	LDS  R26,_voltage_m24_2
0014d4 91b0 0a60 	LDS  R27,_voltage_m24_2+1
0014d6 39a7      	CPI  R26,LOW(0x97)
0014d7 e0e0      	LDI  R30,HIGH(0x97)
0014d8 07be      	CPC  R27,R30
0014d9 f010      	BRLO _0x298
0014da 9b15      	SBIS 0x2,5
0014db c001      	RJMP _0x299
                 _0x298:
0014dc c004      	RJMP _0x297
                 _0x299:
0014dd 91a0 0a5f 	LDS  R26,_voltage_m24_2
0014df 59a6      	SUBI R26,LOW(150)
0014e0 c001      	RJMP _0x428
                 _0x297:
0014e1 e0a0      	LDI  R26,LOW(0)
                 _0x428:
0014e2 940e 0a2f 	CALL _putchar1
                 ; 0000 0AD6   if(DT_ERR == NOR)
0014e4 9915      	SBIC 0x2,5
0014e5 c009      	RJMP _0x29B
                 ; 0000 0AD7   {
                 ; 0000 0AD8   putchar1(currunt_1%256);
0014e6 91e0 0a15 	LDS  R30,_currunt_1
0014e8 2fae      	MOV  R26,R30
0014e9 940e 0a2f 	CALL _putchar1
                 ; 0000 0AD9   putchar1(currunt_1/256);
0014eb 91e0 0a16 	LDS  R30,_currunt_1+1
0014ed 2fae      	MOV  R26,R30
0014ee c004      	RJMP _0x429
                 ; 0000 0ADA   }
                 ; 0000 0ADB   else
                 _0x29B:
                 ; 0000 0ADC   {
                 ; 0000 0ADD   putchar1(0x00);
0014ef e0a0      	LDI  R26,LOW(0)
0014f0 940e 0a2f 	CALL _putchar1
                 ; 0000 0ADE   putchar1(0x00);
0014f2 e0a0      	LDI  R26,LOW(0)
                 _0x429:
0014f3 940e 0a2f 	CALL _putchar1
                 ; 0000 0ADF   }
                 ; 0000 0AE0 
                 ; 0000 0AE1  //MCU POWER
                 ; 0000 0AE2  if((voltage_ch1_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch1_2 - 150);}else{putchar1(0x00);}   //1-2  7-1
0014f5 91a0 0a3f 	LDS  R26,_voltage_ch1_2
0014f7 91b0 0a40 	LDS  R27,_voltage_ch1_2+1
0014f9 39a7      	CPI  R26,LOW(0x97)
0014fa e0e0      	LDI  R30,HIGH(0x97)
0014fb 07be      	CPC  R27,R30
0014fc f010      	BRLO _0x29E
0014fd 9b15      	SBIS 0x2,5
0014fe c001      	RJMP _0x29F
                 _0x29E:
0014ff c004      	RJMP _0x29D
                 _0x29F:
001500 91a0 0a3f 	LDS  R26,_voltage_ch1_2
001502 59a6      	SUBI R26,LOW(150)
001503 c001      	RJMP _0x42A
                 _0x29D:
001504 e0a0      	LDI  R26,LOW(0)
                 _0x42A:
001505 940e 0a2f 	CALL _putchar1
                 ; 0000 0AE3 
                 ; 0000 0AE4   if(DT_ERR == NOR){putchar1(currunt_ch1_2);}else{putchar1(0x00);}
001507 9915      	SBIC 0x2,5
001508 c003      	RJMP _0x2A1
001509 91a0 0a51 	LDS  R26,_currunt_ch1_2
00150b c001      	RJMP _0x42B
                 _0x2A1:
00150c e0a0      	LDI  R26,LOW(0)
                 _0x42B:
00150d 940e 0a2f 	CALL _putchar1
                 ; 0000 0AE5 
                 ; 0000 0AE6  //OPU1 POWER
                 ; 0000 0AE7  if((voltage_ch2_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch2_2 - 150);}else{putchar1(0x00);}  //2-2 6-1
00150f 91a0 0a41 	LDS  R26,_voltage_ch2_2
001511 91b0 0a42 	LDS  R27,_voltage_ch2_2+1
001513 39a7      	CPI  R26,LOW(0x97)
001514 e0e0      	LDI  R30,HIGH(0x97)
001515 07be      	CPC  R27,R30
001516 f010      	BRLO _0x2A4
001517 9b15      	SBIS 0x2,5
001518 c001      	RJMP _0x2A5
                 _0x2A4:
001519 c004      	RJMP _0x2A3
                 _0x2A5:
00151a 91a0 0a41 	LDS  R26,_voltage_ch2_2
00151c 59a6      	SUBI R26,LOW(150)
00151d c001      	RJMP _0x42C
                 _0x2A3:
00151e e0a0      	LDI  R26,LOW(0)
                 _0x42C:
00151f 940e 0a2f 	CALL _putchar1
                 ; 0000 0AE8   if(DT_ERR == NOR){putchar1(currunt_ch2_2);}else{putchar1(0x00);}
001521 9915      	SBIC 0x2,5
001522 c003      	RJMP _0x2A7
001523 91a0 0a53 	LDS  R26,_currunt_ch2_2
001525 c001      	RJMP _0x42D
                 _0x2A7:
001526 e0a0      	LDI  R26,LOW(0)
                 _0x42D:
001527 940e 0a2f 	CALL _putchar1
                 ; 0000 0AE9 
                 ; 0000 0AEA  //ODU1 POWER
                 ; 0000 0AEB  if((voltage_ch1_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch1_1 - 150);}else{putchar1(0x00);}  //1-1 7-2
001529 91a0 0a1b 	LDS  R26,_voltage_ch1_1
00152b 91b0 0a1c 	LDS  R27,_voltage_ch1_1+1
00152d 39a7      	CPI  R26,LOW(0x97)
00152e e0e0      	LDI  R30,HIGH(0x97)
00152f 07be      	CPC  R27,R30
001530 f010      	BRLO _0x2AA
001531 9b15      	SBIS 0x2,5
001532 c001      	RJMP _0x2AB
                 _0x2AA:
001533 c004      	RJMP _0x2A9
                 _0x2AB:
001534 91a0 0a1b 	LDS  R26,_voltage_ch1_1
001536 59a6      	SUBI R26,LOW(150)
001537 c001      	RJMP _0x42E
                 _0x2A9:
001538 e0a0      	LDI  R26,LOW(0)
                 _0x42E:
001539 940e 0a2f 	CALL _putchar1
                 ; 0000 0AEC   if(DT_ERR == NOR){putchar1(currunt_ch1_1);}else{putchar1(0x00);}
00153b 9915      	SBIC 0x2,5
00153c c003      	RJMP _0x2AD
00153d 91a0 0a2d 	LDS  R26,_currunt_ch1_1
00153f c001      	RJMP _0x42F
                 _0x2AD:
001540 e0a0      	LDI  R26,LOW(0)
                 _0x42F:
001541 940e 0a2f 	CALL _putchar1
                 ; 0000 0AED 
                 ; 0000 0AEE  //OCU1 POWER
                 ; 0000 0AEF  if((voltage_ch2_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch2_1 - 150);}else{putchar1(0x00);}  //2-1 6-2
001543 91a0 0a1d 	LDS  R26,_voltage_ch2_1
001545 91b0 0a1e 	LDS  R27,_voltage_ch2_1+1
001547 39a7      	CPI  R26,LOW(0x97)
001548 e0e0      	LDI  R30,HIGH(0x97)
001549 07be      	CPC  R27,R30
00154a f010      	BRLO _0x2B0
00154b 9b15      	SBIS 0x2,5
00154c c001      	RJMP _0x2B1
                 _0x2B0:
00154d c004      	RJMP _0x2AF
                 _0x2B1:
00154e 91a0 0a1d 	LDS  R26,_voltage_ch2_1
001550 59a6      	SUBI R26,LOW(150)
001551 c001      	RJMP _0x430
                 _0x2AF:
001552 e0a0      	LDI  R26,LOW(0)
                 _0x430:
001553 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF0   if(DT_ERR == NOR){ putchar1(currunt_ch2_1);}else{putchar1(0x00);}
001555 9915      	SBIC 0x2,5
001556 c003      	RJMP _0x2B3
001557 91a0 0a2f 	LDS  R26,_currunt_ch2_1
001559 c001      	RJMP _0x431
                 _0x2B3:
00155a e0a0      	LDI  R26,LOW(0)
                 _0x431:
00155b 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF1 
                 ; 0000 0AF2  //OPU2 POWER
                 ; 0000 0AF3  if((voltage_ch6_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch6_2 - 150);}else{putchar1(0x00);}  // 6-2 2-1
00155d 91a0 0a49 	LDS  R26,_voltage_ch6_2
00155f 91b0 0a4a 	LDS  R27,_voltage_ch6_2+1
001561 39a7      	CPI  R26,LOW(0x97)
001562 e0e0      	LDI  R30,HIGH(0x97)
001563 07be      	CPC  R27,R30
001564 f010      	BRLO _0x2B6
001565 9b15      	SBIS 0x2,5
001566 c001      	RJMP _0x2B7
                 _0x2B6:
001567 c004      	RJMP _0x2B5
                 _0x2B7:
001568 91a0 0a49 	LDS  R26,_voltage_ch6_2
00156a 59a6      	SUBI R26,LOW(150)
00156b c001      	RJMP _0x432
                 _0x2B5:
00156c e0a0      	LDI  R26,LOW(0)
                 _0x432:
00156d 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF4   if(DT_ERR == NOR){ putchar1(currunt_ch6_2);}else{putchar1(0x00);}
00156f 9915      	SBIC 0x2,5
001570 c003      	RJMP _0x2B9
001571 91a0 0a5b 	LDS  R26,_currunt_ch6_2
001573 c001      	RJMP _0x433
                 _0x2B9:
001574 e0a0      	LDI  R26,LOW(0)
                 _0x433:
001575 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF5 
                 ; 0000 0AF6  //ODU2 POWER
                 ; 0000 0AF7  if((voltage_ch3_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch3_2 - 150);}else{putchar1(0x00);}   //3-2 5-1
001577 91a0 0a43 	LDS  R26,_voltage_ch3_2
001579 91b0 0a44 	LDS  R27,_voltage_ch3_2+1
00157b 39a7      	CPI  R26,LOW(0x97)
00157c e0e0      	LDI  R30,HIGH(0x97)
00157d 07be      	CPC  R27,R30
00157e f010      	BRLO _0x2BC
00157f 9b15      	SBIS 0x2,5
001580 c001      	RJMP _0x2BD
                 _0x2BC:
001581 c004      	RJMP _0x2BB
                 _0x2BD:
001582 91a0 0a43 	LDS  R26,_voltage_ch3_2
001584 59a6      	SUBI R26,LOW(150)
001585 c001      	RJMP _0x434
                 _0x2BB:
001586 e0a0      	LDI  R26,LOW(0)
                 _0x434:
001587 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF8    if(DT_ERR == NOR){putchar1(currunt_ch3_2);}else{putchar1(0x00);}
001589 9915      	SBIC 0x2,5
00158a c003      	RJMP _0x2BF
00158b 91a0 0a55 	LDS  R26,_currunt_ch3_2
00158d c001      	RJMP _0x435
                 _0x2BF:
00158e e0a0      	LDI  R26,LOW(0)
                 _0x435:
00158f 940e 0a2f 	CALL _putchar1
                 ; 0000 0AF9 
                 ; 0000 0AFA  //OCU2
                 ; 0000 0AFB  if((voltage_ch5_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch5_2 - 150);}else{putchar1(0x00);}   //5-2 3-1
001591 91a0 0a47 	LDS  R26,_voltage_ch5_2
001593 91b0 0a48 	LDS  R27,_voltage_ch5_2+1
001595 39a7      	CPI  R26,LOW(0x97)
001596 e0e0      	LDI  R30,HIGH(0x97)
001597 07be      	CPC  R27,R30
001598 f010      	BRLO _0x2C2
001599 9b15      	SBIS 0x2,5
00159a c001      	RJMP _0x2C3
                 _0x2C2:
00159b c004      	RJMP _0x2C1
                 _0x2C3:
00159c 91a0 0a47 	LDS  R26,_voltage_ch5_2
00159e 59a6      	SUBI R26,LOW(150)
00159f c001      	RJMP _0x436
                 _0x2C1:
0015a0 e0a0      	LDI  R26,LOW(0)
                 _0x436:
0015a1 940e 0a2f 	CALL _putchar1
                 ; 0000 0AFC    if(DT_ERR == NOR){putchar1(currunt_ch5_2);}else{putchar1(0x00);}
0015a3 9915      	SBIC 0x2,5
0015a4 c003      	RJMP _0x2C5
0015a5 91a0 0a59 	LDS  R26,_currunt_ch5_2
0015a7 c001      	RJMP _0x437
                 _0x2C5:
0015a8 e0a0      	LDI  R26,LOW(0)
                 _0x437:
0015a9 940e 0a2f 	CALL _putchar1
                 ; 0000 0AFD 
                 ; 0000 0AFE 
                 ; 0000 0AFF 
                 ; 0000 0B00  //MAIN LINK POWER
                 ; 0000 0B01  if((voltage_ch3_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch3_1 - 150);}else{putchar1(0x00);}  //3- 1 5-2
0015ab 91a0 0a1f 	LDS  R26,_voltage_ch3_1
0015ad 91b0 0a20 	LDS  R27,_voltage_ch3_1+1
0015af 39a7      	CPI  R26,LOW(0x97)
0015b0 e0e0      	LDI  R30,HIGH(0x97)
0015b1 07be      	CPC  R27,R30
0015b2 f010      	BRLO _0x2C8
0015b3 9b15      	SBIS 0x2,5
0015b4 c001      	RJMP _0x2C9
                 _0x2C8:
0015b5 c004      	RJMP _0x2C7
                 _0x2C9:
0015b6 91a0 0a1f 	LDS  R26,_voltage_ch3_1
0015b8 59a6      	SUBI R26,LOW(150)
0015b9 c001      	RJMP _0x438
                 _0x2C7:
0015ba e0a0      	LDI  R26,LOW(0)
                 _0x438:
0015bb 940e 0a2f 	CALL _putchar1
                 ; 0000 0B02  if(DT_ERR == NOR){putchar1(currunt_ch3_1);}else{putchar1(0x00);}
0015bd 9915      	SBIC 0x2,5
0015be c003      	RJMP _0x2CB
0015bf 91a0 0a31 	LDS  R26,_currunt_ch3_1
0015c1 c001      	RJMP _0x439
                 _0x2CB:
0015c2 e0a0      	LDI  R26,LOW(0)
                 _0x439:
0015c3 940e 0a2f 	CALL _putchar1
                 ; 0000 0B03 
                 ; 0000 0B04  if(DT_ERR == NOR)
0015c5 9915      	SBIC 0x2,5
0015c6 c01e      	RJMP _0x2CD
                 ; 0000 0B05  {
                 ; 0000 0B06  if(voltage_fan_1 <= 150){putchar1(0x00);}else{putchar1(voltage_fan_1 - 150);} //main fan Àü¾Ð Àü·ù ¼öÁ¤ 191212
0015c7 91a0 0a2b 	LDS  R26,_voltage_fan_1
0015c9 91b0 0a2c 	LDS  R27,_voltage_fan_1+1
0015cb 39a7      	CPI  R26,LOW(0x97)
0015cc e0e0      	LDI  R30,HIGH(0x97)
0015cd 07be      	CPC  R27,R30
0015ce f410      	BRSH _0x2CE
0015cf e0a0      	LDI  R26,LOW(0)
0015d0 c003      	RJMP _0x43A
                 _0x2CE:
0015d1 91a0 0a2b 	LDS  R26,_voltage_fan_1
0015d3 59a6      	SUBI R26,LOW(150)
                 _0x43A:
0015d4 940e 0a2f 	CALL _putchar1
                 ; 0000 0B07  if(currunt_fan_1 >= 255){putchar1(0xff);}else{putchar1(currunt_fan_1);}
0015d6 91a0 0a3d 	LDS  R26,_currunt_fan_1
0015d8 91b0 0a3e 	LDS  R27,_currunt_fan_1+1
0015da 3faf      	CPI  R26,LOW(0xFF)
0015db e0e0      	LDI  R30,HIGH(0xFF)
0015dc 07be      	CPC  R27,R30
0015dd f010      	BRLO _0x2D0
0015de efaf      	LDI  R26,LOW(255)
0015df c002      	RJMP _0x43B
                 _0x2D0:
0015e0 91a0 0a3d 	LDS  R26,_currunt_fan_1
                 _0x43B:
0015e2 940e 0a2f 	CALL _putchar1
                 ; 0000 0B08  }
                 ; 0000 0B09  else
0015e4 c002      	RJMP _0x2D2
                 _0x2CD:
                 ; 0000 0B0A  {
                 ; 0000 0B0B   putchar1(0x00);
0015e5 940e 1c03 	CALL SUBOPT_0x2A
                 ; 0000 0B0C   putchar1(0x00);
                 ; 0000 0B0D  }
                 _0x2D2:
                 ; 0000 0B0E 
                 ; 0000 0B0F 
                 ; 0000 0B10  //SUB LINK POWER
                 ; 0000 0B11  if((voltage_ch4_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch4_1 - 150);}else{putchar1(0x00);}  //4-1 4-2
0015e7 91a0 0a21 	LDS  R26,_voltage_ch4_1
0015e9 91b0 0a22 	LDS  R27,_voltage_ch4_1+1
0015eb 39a7      	CPI  R26,LOW(0x97)
0015ec e0e0      	LDI  R30,HIGH(0x97)
0015ed 07be      	CPC  R27,R30
0015ee f010      	BRLO _0x2D4
0015ef 9b15      	SBIS 0x2,5
0015f0 c001      	RJMP _0x2D5
                 _0x2D4:
0015f1 c004      	RJMP _0x2D3
                 _0x2D5:
0015f2 91a0 0a21 	LDS  R26,_voltage_ch4_1
0015f4 59a6      	SUBI R26,LOW(150)
0015f5 c001      	RJMP _0x43C
                 _0x2D3:
0015f6 e0a0      	LDI  R26,LOW(0)
                 _0x43C:
0015f7 940e 0a2f 	CALL _putchar1
                 ; 0000 0B12    if(DT_ERR == NOR){ putchar1(currunt_ch4_1);}else{putchar1(0x00);}
0015f9 9915      	SBIC 0x2,5
0015fa c003      	RJMP _0x2D7
0015fb 91a0 0a33 	LDS  R26,_currunt_ch4_1
0015fd c001      	RJMP _0x43D
                 _0x2D7:
0015fe e0a0      	LDI  R26,LOW(0)
                 _0x43D:
0015ff 940e 0a2f 	CALL _putchar1
                 ; 0000 0B13 
                 ; 0000 0B14  //ANT MAST POWER
                 ; 0000 0B15  if((voltage_ch7_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch7_1 - 150);}else{putchar1(0x00);}  //7-1 1-2
001601 91a0 0a27 	LDS  R26,_voltage_ch7_1
001603 91b0 0a28 	LDS  R27,_voltage_ch7_1+1
001605 39a7      	CPI  R26,LOW(0x97)
001606 e0e0      	LDI  R30,HIGH(0x97)
001607 07be      	CPC  R27,R30
001608 f010      	BRLO _0x2DA
001609 9b15      	SBIS 0x2,5
00160a c001      	RJMP _0x2DB
                 _0x2DA:
00160b c004      	RJMP _0x2D9
                 _0x2DB:
00160c 91a0 0a27 	LDS  R26,_voltage_ch7_1
00160e 59a6      	SUBI R26,LOW(150)
00160f c001      	RJMP _0x43E
                 _0x2D9:
001610 e0a0      	LDI  R26,LOW(0)
                 _0x43E:
001611 940e 0a2f 	CALL _putchar1
                 ; 0000 0B16    if(DT_ERR == NOR){ putchar1(currunt_ch7_1);}else{putchar1(0x00);}
001613 9915      	SBIC 0x2,5
001614 c003      	RJMP _0x2DD
001615 91a0 0a39 	LDS  R26,_currunt_ch7_1
001617 c001      	RJMP _0x43F
                 _0x2DD:
001618 e0a0      	LDI  R26,LOW(0)
                 _0x43F:
001619 940e 0a2f 	CALL _putchar1
                 ; 0000 0B17 
                 ; 0000 0B18  if(DT_ERR == NOR)
00161b 9915      	SBIC 0x2,5
00161c c01e      	RJMP _0x2DF
                 ; 0000 0B19  {
                 ; 0000 0B1A  if(voltage_fan_2 <= 150){putchar1(0x00);}else{putchar1(voltage_fan_2 - 150);}  //ant fan Àü¾Ð Àü·ù ¼öÁ¤ 191212
00161d 91a0 0a4f 	LDS  R26,_voltage_fan_2
00161f 91b0 0a50 	LDS  R27,_voltage_fan_2+1
001621 39a7      	CPI  R26,LOW(0x97)
001622 e0e0      	LDI  R30,HIGH(0x97)
001623 07be      	CPC  R27,R30
001624 f410      	BRSH _0x2E0
001625 e0a0      	LDI  R26,LOW(0)
001626 c003      	RJMP _0x440
                 _0x2E0:
001627 91a0 0a4f 	LDS  R26,_voltage_fan_2
001629 59a6      	SUBI R26,LOW(150)
                 _0x440:
00162a 940e 0a2f 	CALL _putchar1
                 ; 0000 0B1B  if(currunt_fan_2 >= 255){putchar1(0xff);}else{putchar1(currunt_fan_2);}
00162c 91a0 0a61 	LDS  R26,_currunt_fan_2
00162e 91b0 0a62 	LDS  R27,_currunt_fan_2+1
001630 3faf      	CPI  R26,LOW(0xFF)
001631 e0e0      	LDI  R30,HIGH(0xFF)
001632 07be      	CPC  R27,R30
001633 f010      	BRLO _0x2E2
001634 efaf      	LDI  R26,LOW(255)
001635 c002      	RJMP _0x441
                 _0x2E2:
001636 91a0 0a61 	LDS  R26,_currunt_fan_2
                 _0x441:
001638 940e 0a2f 	CALL _putchar1
                 ; 0000 0B1C  }
                 ; 0000 0B1D  else
00163a c002      	RJMP _0x2E4
                 _0x2DF:
                 ; 0000 0B1E  {
                 ; 0000 0B1F   putchar1(0x00);
00163b 940e 1c03 	CALL SUBOPT_0x2A
                 ; 0000 0B20   putchar1(0x00);
                 ; 0000 0B21  }
                 _0x2E4:
                 ; 0000 0B22 
                 ; 0000 0B23 
                 ; 0000 0B24  //INS POWER
                 ; 0000 0B25  if((voltage_ch4_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch4_2 - 150);}else{putchar1(0x00);} //4-2 4-1
00163d 91a0 0a45 	LDS  R26,_voltage_ch4_2
00163f 91b0 0a46 	LDS  R27,_voltage_ch4_2+1
001641 39a7      	CPI  R26,LOW(0x97)
001642 e0e0      	LDI  R30,HIGH(0x97)
001643 07be      	CPC  R27,R30
001644 f010      	BRLO _0x2E6
001645 9b15      	SBIS 0x2,5
001646 c001      	RJMP _0x2E7
                 _0x2E6:
001647 c004      	RJMP _0x2E5
                 _0x2E7:
001648 91a0 0a45 	LDS  R26,_voltage_ch4_2
00164a 59a6      	SUBI R26,LOW(150)
00164b c001      	RJMP _0x442
                 _0x2E5:
00164c e0a0      	LDI  R26,LOW(0)
                 _0x442:
00164d 940e 0a2f 	CALL _putchar1
                 ; 0000 0B26    if(DT_ERR == NOR){ putchar1(currunt_ch4_2);}else{putchar1(0x00);}
00164f 9915      	SBIC 0x2,5
001650 c003      	RJMP _0x2E9
001651 91a0 0a57 	LDS  R26,_currunt_ch4_2
001653 c001      	RJMP _0x443
                 _0x2E9:
001654 e0a0      	LDI  R26,LOW(0)
                 _0x443:
001655 940e 0a2f 	CALL _putchar1
                 ; 0000 0B27 
                 ; 0000 0B28  //C2VREC POWER
                 ; 0000 0B29  if((voltage_ch6_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch6_1 - 150);}else{putchar1(0x00);}  //6-1 2-2
001657 91a0 0a25 	LDS  R26,_voltage_ch6_1
001659 91b0 0a26 	LDS  R27,_voltage_ch6_1+1
00165b 39a7      	CPI  R26,LOW(0x97)
00165c e0e0      	LDI  R30,HIGH(0x97)
00165d 07be      	CPC  R27,R30
00165e f010      	BRLO _0x2EC
00165f 9b15      	SBIS 0x2,5
001660 c001      	RJMP _0x2ED
                 _0x2EC:
001661 c004      	RJMP _0x2EB
                 _0x2ED:
001662 91a0 0a25 	LDS  R26,_voltage_ch6_1
001664 59a6      	SUBI R26,LOW(150)
001665 c001      	RJMP _0x444
                 _0x2EB:
001666 e0a0      	LDI  R26,LOW(0)
                 _0x444:
001667 940e 0a2f 	CALL _putchar1
                 ; 0000 0B2A    if(DT_ERR == NOR){ putchar1(currunt_ch6_1);}else{putchar1(0x00);}
001669 9915      	SBIC 0x2,5
00166a c003      	RJMP _0x2EF
00166b 91a0 0a37 	LDS  R26,_currunt_ch6_1
00166d c001      	RJMP _0x445
                 _0x2EF:
00166e e0a0      	LDI  R26,LOW(0)
                 _0x445:
00166f 940e 0a2f 	CALL _putchar1
                 ; 0000 0B2B 
                 ; 0000 0B2C  //ROUTER POWER
                 ; 0000 0B2D  if((voltage_ch7_2 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch7_2 - 150);}else{putchar1(0x00);}  //7-2 1-1
001671 91a0 0a4b 	LDS  R26,_voltage_ch7_2
001673 91b0 0a4c 	LDS  R27,_voltage_ch7_2+1
001675 39a7      	CPI  R26,LOW(0x97)
001676 e0e0      	LDI  R30,HIGH(0x97)
001677 07be      	CPC  R27,R30
001678 f010      	BRLO _0x2F2
001679 9b15      	SBIS 0x2,5
00167a c001      	RJMP _0x2F3
                 _0x2F2:
00167b c004      	RJMP _0x2F1
                 _0x2F3:
00167c 91a0 0a4b 	LDS  R26,_voltage_ch7_2
00167e 59a6      	SUBI R26,LOW(150)
00167f c001      	RJMP _0x446
                 _0x2F1:
001680 e0a0      	LDI  R26,LOW(0)
                 _0x446:
001681 940e 0a2f 	CALL _putchar1
                 ; 0000 0B2E   if(DT_ERR == NOR){ putchar1(currunt_ch7_2); }else{putchar1(0x00);}
001683 9915      	SBIC 0x2,5
001684 c003      	RJMP _0x2F5
001685 91a0 0a5d 	LDS  R26,_currunt_ch7_2
001687 c001      	RJMP _0x447
                 _0x2F5:
001688 e0a0      	LDI  R26,LOW(0)
                 _0x447:
001689 940e 0a2f 	CALL _putchar1
                 ; 0000 0B2F 
                 ; 0000 0B30  //SWITCH POWER
                 ; 0000 0B31  if((voltage_ch5_1 > 150)&&(DT_ERR == NOR)){putchar1(voltage_ch5_1 - 150);}else{putchar1(0x00);} //5-1  3-2
00168b 91a0 0a23 	LDS  R26,_voltage_ch5_1
00168d 91b0 0a24 	LDS  R27,_voltage_ch5_1+1
00168f 39a7      	CPI  R26,LOW(0x97)
001690 e0e0      	LDI  R30,HIGH(0x97)
001691 07be      	CPC  R27,R30
001692 f010      	BRLO _0x2F8
001693 9b15      	SBIS 0x2,5
001694 c001      	RJMP _0x2F9
                 _0x2F8:
001695 c004      	RJMP _0x2F7
                 _0x2F9:
001696 91a0 0a23 	LDS  R26,_voltage_ch5_1
001698 59a6      	SUBI R26,LOW(150)
001699 c001      	RJMP _0x448
                 _0x2F7:
00169a e0a0      	LDI  R26,LOW(0)
                 _0x448:
00169b 940e 0a2f 	CALL _putchar1
                 ; 0000 0B32    if(DT_ERR == NOR){ putchar1(currunt_ch5_1);}else{putchar1(0x00);}
00169d 9915      	SBIC 0x2,5
00169e c003      	RJMP _0x2FB
00169f 91a0 0a35 	LDS  R26,_currunt_ch5_1
0016a1 c001      	RJMP _0x449
                 _0x2FB:
0016a2 e0a0      	LDI  R26,LOW(0)
                 _0x449:
0016a3 940e 0a2f 	CALL _putchar1
                 ; 0000 0B33 
                 ; 0000 0B34  //BTTERY 1 STATUS
                 ; 0000 0B35   if(DT_ERR == NOR){putchar1(batt_level_1);}else{putchar1(0x00);}
0016a5 9915      	SBIC 0x2,5
0016a6 c003      	RJMP _0x2FD
0016a7 91a0 0b2e 	LDS  R26,_batt_level_1
0016a9 c001      	RJMP _0x44A
                 _0x2FD:
0016aa e0a0      	LDI  R26,LOW(0)
                 _0x44A:
0016ab 940e 0a2f 	CALL _putchar1
                 ; 0000 0B36 
                 ; 0000 0B37  //BATTERY 2 STATUS
                 ; 0000 0B38   if(DT_ERR == NOR){putchar1(batt_level_2);}else{putchar1(0x00);}
0016ad 9915      	SBIC 0x2,5
0016ae c003      	RJMP _0x2FF
0016af 91a0 0b33 	LDS  R26,_batt_level_2
0016b1 c001      	RJMP _0x44B
                 _0x2FF:
0016b2 e0a0      	LDI  R26,LOW(0)
                 _0x44B:
0016b3 940e 0a2f 	CALL _putchar1
                 ; 0000 0B39 
                 ; 0000 0B3A  //¹ßÀü±â Àü¾Ð ¹× Àü·ù
                 ; 0000 0B3B if(comm_ge_err == ERR)
0016b5 fe20      	SBRS R2,0
0016b6 c00b      	RJMP _0x301
                 ; 0000 0B3C {
                 ; 0000 0B3D voltage_ge = 0;
0016b7 e0e0      	LDI  R30,LOW(0)
0016b8 93e0 0b3f 	STS  _voltage_ge,R30
0016ba 93e0 0b40 	STS  _voltage_ge+1,R30
                 ; 0000 0B3E putchar1(voltage_ge);
0016bc 91a0 0b3f 	LDS  R26,_voltage_ge
0016be 940e 1c0f 	CALL SUBOPT_0x2C
                 ; 0000 0B3F putchar1(0x00);  //Àü·ù¸¦ 0À¸·Î Ã³¸®
                 ; 0000 0B40 putchar1(0x00);  //Àü·ù¸¦ 0À¸·Î Ã³¸®
0016c0 e0a0      	LDI  R26,LOW(0)
0016c1 c01d      	RJMP _0x44C
                 ; 0000 0B41 }
                 ; 0000 0B42 else
                 _0x301:
                 ; 0000 0B43 {
                 ; 0000 0B44 if(voltage_ge > 350){putchar1(voltage_ge - 350);}else{putchar1(0x00);}
0016c2 91a0 0b3f 	LDS  R26,_voltage_ge
0016c4 91b0 0b40 	LDS  R27,_voltage_ge+1
0016c6 35af      	CPI  R26,LOW(0x15F)
0016c7 e0e1      	LDI  R30,HIGH(0x15F)
0016c8 07be      	CPC  R27,R30
0016c9 f020      	BRLO _0x303
0016ca 91a0 0b3f 	LDS  R26,_voltage_ge
0016cc 55ae      	SUBI R26,LOW(94)
0016cd c001      	RJMP _0x44D
                 _0x303:
0016ce e0a0      	LDI  R26,LOW(0)
                 _0x44D:
0016cf 940e 0a2f 	CALL _putchar1
                 ; 0000 0B45  putchar1(currunt_ge % 256);   //¸®Æ²ÀÎµð¾ð Àû¿ë
0016d1 91e0 0b41 	LDS  R30,_currunt_ge
0016d3 2fae      	MOV  R26,R30
0016d4 940e 0a2f 	CALL _putchar1
                 ; 0000 0B46  putchar1(currunt_ge / 255);
0016d6 91a0 0b41 	LDS  R26,_currunt_ge
0016d8 91b0 0b42 	LDS  R27,_currunt_ge+1
0016da efef      	LDI  R30,LOW(255)
0016db e0f0      	LDI  R31,HIGH(255)
0016dc 940e 1c82 	CALL __DIVW21U
0016de 2fae      	MOV  R26,R30
                 _0x44C:
0016df 940e 0a2f 	CALL _putchar1
                 ; 0000 0B47 }
                 ; 0000 0B48   if(Distributor_devicestatus_number >= 0xff){Distributor_devicestatus_number = 0;}else{Distributor_devicestatus_number+ ...
0016e1 91a0 0b82 	LDS  R26,_Distributor_devicestatus_number
0016e3 3faf      	CPI  R26,LOW(0xFF)
0016e4 f010      	BRLO _0x305
0016e5 e0e0      	LDI  R30,LOW(0)
0016e6 c003      	RJMP _0x44E
                 _0x305:
0016e7 91e0 0b82 	LDS  R30,_Distributor_devicestatus_number
0016e9 5fef      	SUBI R30,-LOW(1)
                 _0x44E:
0016ea 93e0 0b82 	STS  _Distributor_devicestatus_number,R30
                 ; 0000 0B49 }
0016ec 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0B4C {
                 _main:
                 ; .FSTART _main
                 ; 0000 0B4D // Declare your local variables here
                 ; 0000 0B4E 
                 ; 0000 0B4F // Crystal Oscillator division factor: 1
                 ; 0000 0B50 #pragma optsize-
                 ; 0000 0B51 CLKPR=(1<<CLKPCE);
0016ed e8e0      	LDI  R30,LOW(128)
0016ee 93e0 0061 	STS  97,R30
                 ; 0000 0B52 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
0016f0 e0e0      	LDI  R30,LOW(0)
0016f1 93e0 0061 	STS  97,R30
                 ; 0000 0B53 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0B54 #pragma optsize+
                 ; 0000 0B55 #endif
                 ; 0000 0B56 
                 ; 0000 0B57 // Input/Output Ports initialization
                 ; 0000 0B58 // Port A initialization
                 ; 0000 0B59 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B5A DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0016f3 efe0      	LDI  R30,LOW(240)
0016f4 b9e1      	OUT  0x1,R30
                 ; 0000 0B5B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B5C PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0016f5 e0e0      	LDI  R30,LOW(0)
0016f6 b9e2      	OUT  0x2,R30
                 ; 0000 0B5D 
                 ; 0000 0B5E // Port B initialization
                 ; 0000 0B5F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B60 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0016f7 e6e0      	LDI  R30,LOW(96)
0016f8 b9e4      	OUT  0x4,R30
                 ; 0000 0B61 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B62 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (1<<PORTB0);
0016f9 e0e1      	LDI  R30,LOW(1)
0016fa b9e5      	OUT  0x5,R30
                 ; 0000 0B63 
                 ; 0000 0B64 // Port C initialization
                 ; 0000 0B65 // Function: Bit7=In Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B66 DDRC=(0<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0016fb e7ef      	LDI  R30,LOW(127)
0016fc b9e7      	OUT  0x7,R30
                 ; 0000 0B67 // State: Bit7=T Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B68 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0016fd e0e0      	LDI  R30,LOW(0)
0016fe b9e8      	OUT  0x8,R30
                 ; 0000 0B69 
                 ; 0000 0B6A // Port D initialization
                 ; 0000 0B6B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B6C DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (1<<DDD1) | (1<<DDD0);
0016ff e1e3      	LDI  R30,LOW(19)
001700 b9ea      	OUT  0xA,R30
                 ; 0000 0B6D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B6E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
001701 e0e0      	LDI  R30,LOW(0)
001702 b9eb      	OUT  0xB,R30
                 ; 0000 0B6F 
                 ; 0000 0B70 // Port E initialization
                 ; 0000 0B71 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B72 DDRE=(1<<DDE7) | (1<<DDE6) | (1<<DDE5) | (1<<DDE4) | (1<<DDE3) | (1<<DDE2) | (0<<DDE1) | (0<<DDE0);
001703 efec      	LDI  R30,LOW(252)
001704 b9ed      	OUT  0xD,R30
                 ; 0000 0B73 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B74 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
001705 e0e0      	LDI  R30,LOW(0)
001706 b9ee      	OUT  0xE,R30
                 ; 0000 0B75 
                 ; 0000 0B76 // Port F initialization
                 ; 0000 0B77 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B78 DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
001707 bbe0      	OUT  0x10,R30
                 ; 0000 0B79 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B7A PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
001708 bbe1      	OUT  0x11,R30
                 ; 0000 0B7B 
                 ; 0000 0B7C // Port G initialization
                 ; 0000 0B7D // Function: Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B7E DDRG=(0<<DDG5) | (0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
001709 bbe3      	OUT  0x13,R30
                 ; 0000 0B7F // State: Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B80 PORTG=(0<<PORTG5) | (0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
00170a bbe4      	OUT  0x14,R30
                 ; 0000 0B81 
                 ; 0000 0B82 // Port H initialization
                 ; 0000 0B83 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B84 DDRH=(0<<DDH7) | (0<<DDH6) | (0<<DDH5) | (0<<DDH4) | (0<<DDH3) | (0<<DDH2) | (0<<DDH1) | (0<<DDH0);
00170b 93e0 0101 	STS  257,R30
                 ; 0000 0B85 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B86 PORTH=(0<<PORTH7) | (0<<PORTH6) | (0<<PORTH5) | (0<<PORTH4) | (0<<PORTH3) | (0<<PORTH2) | (0<<PORTH1) | (0<<PORTH0);
00170d 93e0 0102 	STS  258,R30
                 ; 0000 0B87 
                 ; 0000 0B88 // Port J initialization
                 ; 0000 0B89 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B8A DDRJ=(0<<DDJ7) | (0<<DDJ6) | (0<<DDJ5) | (0<<DDJ4) | (0<<DDJ3) | (0<<DDJ2) | (0<<DDJ1) | (0<<DDJ0);
00170f 93e0 0104 	STS  260,R30
                 ; 0000 0B8B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B8C PORTJ=(0<<PORTJ7) | (0<<PORTJ6) | (0<<PORTJ5) | (0<<PORTJ4) | (0<<PORTJ3) | (0<<PORTJ2) | (0<<PORTJ1) | (0<<PORTJ0);
001711 93e0 0105 	STS  261,R30
                 ; 0000 0B8D 
                 ; 0000 0B8E // Port K initialization
                 ; 0000 0B8F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B90 DDRK=(0<<DDK7) | (0<<DDK6) | (0<<DDK5) | (0<<DDK4) | (0<<DDK3) | (0<<DDK2) | (0<<DDK1) | (0<<DDK0);
001713 93e0 0107 	STS  263,R30
                 ; 0000 0B91 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B92 PORTK=(0<<PORTK7) | (0<<PORTK6) | (0<<PORTK5) | (0<<PORTK4) | (0<<PORTK3) | (0<<PORTK2) | (0<<PORTK1) | (0<<PORTK0);
001715 93e0 0108 	STS  264,R30
                 ; 0000 0B93 
                 ; 0000 0B94 // Port L initialization
                 ; 0000 0B95 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0B96 DDRL=(0<<DDL7) | (0<<DDL6) | (0<<DDL5) | (0<<DDL4) | (0<<DDL3) | (0<<DDL2) | (0<<DDL1) | (0<<DDL0);
001717 93e0 010a 	STS  266,R30
                 ; 0000 0B97 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0B98 PORTL=(0<<PORTL7) | (0<<PORTL6) | (0<<PORTL5) | (0<<PORTL4) | (0<<PORTL3) | (0<<PORTL2) | (0<<PORTL1) | (0<<PORTL0);
001719 93e0 010b 	STS  267,R30
                 ; 0000 0B99 
                 ; 0000 0B9A // Timer/Counter 0 initialization
                 ; 0000 0B9B // Clock source: System Clock
                 ; 0000 0B9C // Clock value: 11059.200 kHz
                 ; 0000 0B9D // Mode: Normal top=0xFF
                 ; 0000 0B9E // OC0A output: Disconnected
                 ; 0000 0B9F // OC0B output: Disconnected
                 ; 0000 0BA0 // Timer Period: 0.023148 ms
                 ; 0000 0BA1 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
00171b bde4      	OUT  0x24,R30
                 ; 0000 0BA2 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
00171c e0e1      	LDI  R30,LOW(1)
00171d bde5      	OUT  0x25,R30
                 ; 0000 0BA3 TCNT0=0x00;
00171e e0e0      	LDI  R30,LOW(0)
00171f bde6      	OUT  0x26,R30
                 ; 0000 0BA4 OCR0A=0x00;
001720 bde7      	OUT  0x27,R30
                 ; 0000 0BA5 OCR0B=0x00;
001721 bde8      	OUT  0x28,R30
                 ; 0000 0BA6 
                 ; 0000 0BA7 // Timer/Counter 1 initialization
                 ; 0000 0BA8 // Clock source: System Clock
                 ; 0000 0BA9 // Clock value: 11059.200 kHz
                 ; 0000 0BAA // Mode: Fast PWM top=OCR1A
                 ; 0000 0BAB // OC1A output: Disconnected
                 ; 0000 0BAC // OC1B output: Non-Inverted PWM
                 ; 0000 0BAD // OC1C output: Disconnected
                 ; 0000 0BAE // Noise Canceler: Off
                 ; 0000 0BAF // Input Capture on Falling Edge
                 ; 0000 0BB0 // Timer Period: 0.50004 ms
                 ; 0000 0BB1 // Output Pulse(s):
                 ; 0000 0BB2 // OC1B Period: 0.50004 ms Width: 0.24997 ms
                 ; 0000 0BB3 // Timer1 Overflow Interrupt: Off
                 ; 0000 0BB4 // Input Capture Interrupt: Off
                 ; 0000 0BB5 // Compare A Match Interrupt: Off
                 ; 0000 0BB6 // Compare B Match Interrupt: Off
                 ; 0000 0BB7 // Compare C Match Interrupt: Off
                 ; 0000 0BB8 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (1<<WGM11) | (1<<WGM10);
001722 e2e3      	LDI  R30,LOW(35)
001723 93e0 0080 	STS  128,R30
                 ; 0000 0BB9 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (1<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
001725 e1e9      	LDI  R30,LOW(25)
001726 93e0 0081 	STS  129,R30
                 ; 0000 0BBA TCNT1H=0x00;
001728 e0e0      	LDI  R30,LOW(0)
001729 93e0 0085 	STS  133,R30
                 ; 0000 0BBB TCNT1L=0x00;
00172b 93e0 0084 	STS  132,R30
                 ; 0000 0BBC ICR1H=0x00;
00172d 93e0 0087 	STS  135,R30
                 ; 0000 0BBD ICR1L=0x00;
00172f 93e0 0086 	STS  134,R30
                 ; 0000 0BBE OCR1AH=0x15;
001731 e1e5      	LDI  R30,LOW(21)
001732 93e0 0089 	STS  137,R30
                 ; 0000 0BBF OCR1AL=0x99;
001734 e9e9      	LDI  R30,LOW(153)
001735 93e0 0088 	STS  136,R30
                 ; 0000 0BC0 OCR1BH=0x0A;
001737 e0ea      	LDI  R30,LOW(10)
001738 93e0 008b 	STS  139,R30
                 ; 0000 0BC1 OCR1BL=0xCC;
00173a ecec      	LDI  R30,LOW(204)
00173b 93e0 008a 	STS  138,R30
                 ; 0000 0BC2 OCR1CH=0x00;
00173d e0e0      	LDI  R30,LOW(0)
00173e 93e0 008d 	STS  141,R30
                 ; 0000 0BC3 OCR1CL=0x00;
001740 93e0 008c 	STS  140,R30
                 ; 0000 0BC4 
                 ; 0000 0BC5 // Timer/Counter 2 initialization
                 ; 0000 0BC6 // Clock source: System Clock
                 ; 0000 0BC7 // Clock value: Timer2 Stopped
                 ; 0000 0BC8 // Mode: Normal top=0xFF
                 ; 0000 0BC9 // OC2A output: Disconnected
                 ; 0000 0BCA // OC2B output: Disconnected
                 ; 0000 0BCB ASSR=(0<<EXCLK) | (0<<AS2);
001742 93e0 00b6 	STS  182,R30
                 ; 0000 0BCC TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
001744 93e0 00b0 	STS  176,R30
                 ; 0000 0BCD TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
001746 93e0 00b1 	STS  177,R30
                 ; 0000 0BCE TCNT2=0x00;
001748 93e0 00b2 	STS  178,R30
                 ; 0000 0BCF OCR2A=0x00;
00174a 93e0 00b3 	STS  179,R30
                 ; 0000 0BD0 OCR2B=0x00;
00174c 93e0 00b4 	STS  180,R30
                 ; 0000 0BD1 
                 ; 0000 0BD2 // Timer/Counter 3 initialization
                 ; 0000 0BD3 // Clock source: System Clock
                 ; 0000 0BD4 // Clock value: Timer3 Stopped
                 ; 0000 0BD5 // Mode: Normal top=0xFFFF
                 ; 0000 0BD6 // OC3A output: Disconnected
                 ; 0000 0BD7 // OC3B output: Disconnected
                 ; 0000 0BD8 // OC3C output: Disconnected
                 ; 0000 0BD9 // Noise Canceler: Off
                 ; 0000 0BDA // Input Capture on Falling Edge
                 ; 0000 0BDB // Timer3 Overflow Interrupt: Off
                 ; 0000 0BDC // Input Capture Interrupt: Off
                 ; 0000 0BDD // Compare A Match Interrupt: Off
                 ; 0000 0BDE // Compare B Match Interrupt: Off
                 ; 0000 0BDF // Compare C Match Interrupt: Off
                 ; 0000 0BE0 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
00174e 93e0 0090 	STS  144,R30
                 ; 0000 0BE1 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
001750 93e0 0091 	STS  145,R30
                 ; 0000 0BE2 TCNT3H=0x00;
001752 93e0 0095 	STS  149,R30
                 ; 0000 0BE3 TCNT3L=0x00;
001754 93e0 0094 	STS  148,R30
                 ; 0000 0BE4 ICR3H=0x00;
001756 93e0 0097 	STS  151,R30
                 ; 0000 0BE5 ICR3L=0x00;
001758 93e0 0096 	STS  150,R30
                 ; 0000 0BE6 OCR3AH=0x00;
00175a 93e0 0099 	STS  153,R30
                 ; 0000 0BE7 OCR3AL=0x00;
00175c 93e0 0098 	STS  152,R30
                 ; 0000 0BE8 OCR3BH=0x00;
00175e 93e0 009b 	STS  155,R30
                 ; 0000 0BE9 OCR3BL=0x00;
001760 93e0 009a 	STS  154,R30
                 ; 0000 0BEA OCR3CH=0x00;
001762 93e0 009d 	STS  157,R30
                 ; 0000 0BEB OCR3CL=0x00;
001764 93e0 009c 	STS  156,R30
                 ; 0000 0BEC 
                 ; 0000 0BED // Timer/Counter 4 initialization
                 ; 0000 0BEE // Clock source: System Clock
                 ; 0000 0BEF // Clock value: Timer4 Stopped
                 ; 0000 0BF0 // Mode: Normal top=0xFFFF
                 ; 0000 0BF1 // OC4A output: Disconnected
                 ; 0000 0BF2 // OC4B output: Disconnected
                 ; 0000 0BF3 // OC4C output: Disconnected
                 ; 0000 0BF4 // Noise Canceler: Off
                 ; 0000 0BF5 // Input Capture on Falling Edge
                 ; 0000 0BF6 // Timer4 Overflow Interrupt: Off
                 ; 0000 0BF7 // Input Capture Interrupt: Off
                 ; 0000 0BF8 // Compare A Match Interrupt: Off
                 ; 0000 0BF9 // Compare B Match Interrupt: Off
                 ; 0000 0BFA // Compare C Match Interrupt: Off
                 ; 0000 0BFB TCCR4A=(0<<COM4A1) | (0<<COM4A0) | (0<<COM4B1) | (0<<COM4B0) | (0<<COM4C1) | (0<<COM4C0) | (0<<WGM41) | (0<<WGM40);
001766 93e0 00a0 	STS  160,R30
                 ; 0000 0BFC TCCR4B=(0<<ICNC4) | (0<<ICES4) | (0<<WGM43) | (0<<WGM42) | (0<<CS42) | (0<<CS41) | (0<<CS40);
001768 93e0 00a1 	STS  161,R30
                 ; 0000 0BFD TCNT4H=0x00;
00176a 93e0 00a5 	STS  165,R30
                 ; 0000 0BFE TCNT4L=0x00;
00176c 93e0 00a4 	STS  164,R30
                 ; 0000 0BFF ICR4H=0x00;
00176e 93e0 00a7 	STS  167,R30
                 ; 0000 0C00 ICR4L=0x00;
001770 93e0 00a6 	STS  166,R30
                 ; 0000 0C01 OCR4AH=0x00;
001772 93e0 00a9 	STS  169,R30
                 ; 0000 0C02 OCR4AL=0x00;
001774 93e0 00a8 	STS  168,R30
                 ; 0000 0C03 OCR4BH=0x00;
001776 93e0 00ab 	STS  171,R30
                 ; 0000 0C04 OCR4BL=0x00;
001778 93e0 00aa 	STS  170,R30
                 ; 0000 0C05 OCR4CH=0x00;
00177a 93e0 00ad 	STS  173,R30
                 ; 0000 0C06 OCR4CL=0x00;
00177c 93e0 00ac 	STS  172,R30
                 ; 0000 0C07 
                 ; 0000 0C08 // Timer/Counter 5 initialization
                 ; 0000 0C09 // Clock source: System Clock
                 ; 0000 0C0A // Clock value: Timer5 Stopped
                 ; 0000 0C0B // Mode: Normal top=0xFFFF
                 ; 0000 0C0C // OC5A output: Disconnected
                 ; 0000 0C0D // OC5B output: Disconnected
                 ; 0000 0C0E // OC5C output: Disconnected
                 ; 0000 0C0F // Noise Canceler: Off
                 ; 0000 0C10 // Input Capture on Falling Edge
                 ; 0000 0C11 // Timer5 Overflow Interrupt: Off
                 ; 0000 0C12 // Input Capture Interrupt: Off
                 ; 0000 0C13 // Compare A Match Interrupt: Off
                 ; 0000 0C14 // Compare B Match Interrupt: Off
                 ; 0000 0C15 // Compare C Match Interrupt: Off
                 ; 0000 0C16 TCCR5A=(0<<COM5A1) | (0<<COM5A0) | (0<<COM5B1) | (0<<COM5B0) | (0<<COM5C1) | (0<<COM5C0) | (0<<WGM51) | (0<<WGM50);
00177e 93e0 0120 	STS  288,R30
                 ; 0000 0C17 TCCR5B=(0<<ICNC5) | (0<<ICES5) | (0<<WGM53) | (0<<WGM52) | (0<<CS52) | (0<<CS51) | (0<<CS50);
001780 93e0 0121 	STS  289,R30
                 ; 0000 0C18 TCNT5H=0x00;
001782 93e0 0125 	STS  293,R30
                 ; 0000 0C19 TCNT5L=0x00;
001784 93e0 0124 	STS  292,R30
                 ; 0000 0C1A ICR5H=0x00;
001786 93e0 0127 	STS  295,R30
                 ; 0000 0C1B ICR5L=0x00;
001788 93e0 0126 	STS  294,R30
                 ; 0000 0C1C OCR5AH=0x00;
00178a 93e0 0129 	STS  297,R30
                 ; 0000 0C1D OCR5AL=0x00;
00178c 93e0 0128 	STS  296,R30
                 ; 0000 0C1E OCR5BH=0x00;
00178e 93e0 012b 	STS  299,R30
                 ; 0000 0C1F OCR5BL=0x00;
001790 93e0 012a 	STS  298,R30
                 ; 0000 0C20 OCR5CH=0x00;
001792 93e0 012d 	STS  301,R30
                 ; 0000 0C21 OCR5CL=0x00;
001794 93e0 012c 	STS  300,R30
                 ; 0000 0C22 
                 ; 0000 0C23 // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 0C24 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0);
001796 e0e1      	LDI  R30,LOW(1)
001797 93e0 006e 	STS  110,R30
                 ; 0000 0C25 
                 ; 0000 0C26 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 0C27 TIMSK1=(0<<ICIE1) | (0<<OCIE1C) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
001799 e0e0      	LDI  R30,LOW(0)
00179a 93e0 006f 	STS  111,R30
                 ; 0000 0C28 
                 ; 0000 0C29 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 0C2A TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
00179c 93e0 0070 	STS  112,R30
                 ; 0000 0C2B 
                 ; 0000 0C2C // Timer/Counter 3 Interrupt(s) initialization
                 ; 0000 0C2D TIMSK3=(0<<ICIE3) | (0<<OCIE3C) | (0<<OCIE3B) | (0<<OCIE3A) | (0<<TOIE3);
00179e 93e0 0071 	STS  113,R30
                 ; 0000 0C2E 
                 ; 0000 0C2F // Timer/Counter 4 Interrupt(s) initialization
                 ; 0000 0C30 TIMSK4=(0<<ICIE4) | (0<<OCIE4C) | (0<<OCIE4B) | (0<<OCIE4A) | (0<<TOIE4);
0017a0 93e0 0072 	STS  114,R30
                 ; 0000 0C31 
                 ; 0000 0C32 // Timer/Counter 5 Interrupt(s) initialization
                 ; 0000 0C33 TIMSK5=(0<<ICIE5) | (0<<OCIE5C) | (0<<OCIE5B) | (0<<OCIE5A) | (0<<TOIE5);
0017a2 93e0 0073 	STS  115,R30
                 ; 0000 0C34 
                 ; 0000 0C35 // External Interrupt(s) initialization
                 ; 0000 0C36 // INT0: Off
                 ; 0000 0C37 // INT1: Off
                 ; 0000 0C38 // INT2: Off
                 ; 0000 0C39 // INT3: Off
                 ; 0000 0C3A // INT4: Off
                 ; 0000 0C3B // INT5: Off
                 ; 0000 0C3C // INT6: Off
                 ; 0000 0C3D // INT7: Off
                 ; 0000 0C3E EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0017a4 93e0 0069 	STS  105,R30
                 ; 0000 0C3F EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0017a6 93e0 006a 	STS  106,R30
                 ; 0000 0C40 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0017a8 bbed      	OUT  0x1D,R30
                 ; 0000 0C41 // PCINT0 interrupt: Off
                 ; 0000 0C42 // PCINT1 interrupt: Off
                 ; 0000 0C43 // PCINT2 interrupt: Off
                 ; 0000 0C44 // PCINT3 interrupt: Off
                 ; 0000 0C45 // PCINT4 interrupt: Off
                 ; 0000 0C46 // PCINT5 interrupt: Off
                 ; 0000 0C47 // PCINT6 interrupt: Off
                 ; 0000 0C48 // PCINT7 interrupt: Off
                 ; 0000 0C49 // PCINT8 interrupt: Off
                 ; 0000 0C4A // PCINT9 interrupt: Off
                 ; 0000 0C4B // PCINT10 interrupt: Off
                 ; 0000 0C4C // PCINT11 interrupt: Off
                 ; 0000 0C4D // PCINT12 interrupt: Off
                 ; 0000 0C4E // PCINT13 interrupt: Off
                 ; 0000 0C4F // PCINT14 interrupt: Off
                 ; 0000 0C50 // PCINT15 interrupt: Off                                                                             y
                 ; 0000 0C51 // PCINT16 interrupt: Off
                 ; 0000 0C52 // PCINT17 interrupt: Off
                 ; 0000 0C53 // PCINT18 interrupt: Off
                 ; 0000 0C54 // PCINT19 interrupt: Off
                 ; 0000 0C55 // PCINT20 interrupt: Off
                 ; 0000 0C56 // PCINT21 interrupt: Off
                 ; 0000 0C57 // PCINT22 interrupt: Off
                 ; 0000 0C58 // PCINT23 interrupt: Off
                 ; 0000 0C59 PCMSK0=(0<<PCINT7) | (0<<PCINT6) | (0<<PCINT5) | (0<<PCINT4) | (0<<PCINT3) | (0<<PCINT2) | (0<<PCINT1) | (0<<PCINT0);
0017a9 93e0 006b 	STS  107,R30
                 ; 0000 0C5A PCMSK1=(0<<PCINT15) | (0<<PCINT14) | (0<<PCINT13) | (0<<PCINT12) | (0<<PCINT11) | (0<<PCINT10) | (0<<PCINT9) | (0<<PCINT ...
0017ab 93e0 006c 	STS  108,R30
                 ; 0000 0C5B PCMSK2=(0<<PCINT23) | (0<<PCINT22) | (0<<PCINT21) | (0<<PCINT20) | (0<<PCINT19) | (0<<PCINT18) | (0<<PCINT17) | (0<<PCIN ...
0017ad 93e0 006d 	STS  109,R30
                 ; 0000 0C5C PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
0017af 93e0 0068 	STS  104,R30
                 ; 0000 0C5D 
                 ; 0000 0C5E // USART0 initialization
                 ; 0000 0C5F // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0C60 // USART0 Receiver: On
                 ; 0000 0C61 // USART0 Transmitter: On
                 ; 0000 0C62 // USART0 Mode: Asynchronous
                 ; 0000 0C63 // USART0 Baud Rate: 115200
                 ; 0000 0C64 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0017b1 93e0 00c0 	STS  192,R30
                 ; 0000 0C65 UCSR0B=(1<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0017b3 e9e8      	LDI  R30,LOW(152)
0017b4 93e0 00c1 	STS  193,R30
                 ; 0000 0C66 UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0017b6 e0e6      	LDI  R30,LOW(6)
0017b7 93e0 00c2 	STS  194,R30
                 ; 0000 0C67 UBRR0H=0x00;
0017b9 e0e0      	LDI  R30,LOW(0)
0017ba 93e0 00c5 	STS  197,R30
                 ; 0000 0C68 UBRR0L=0x05;
0017bc e0e5      	LDI  R30,LOW(5)
0017bd 93e0 00c4 	STS  196,R30
                 ; 0000 0C69 
                 ; 0000 0C6A // USART1 initialization
                 ; 0000 0C6B // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0C6C // USART1 Receiver: On
                 ; 0000 0C6D // USART1 Transmitter: On
                 ; 0000 0C6E // USART1 Mode: Asynchronous
                 ; 0000 0C6F // USART1 Baud Rate: 115200
                 ; 0000 0C70 UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
0017bf e0e0      	LDI  R30,LOW(0)
0017c0 93e0 00c8 	STS  200,R30
                 ; 0000 0C71 UCSR1B=(1<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0017c2 e9e8      	LDI  R30,LOW(152)
0017c3 93e0 00c9 	STS  201,R30
                 ; 0000 0C72 UCSR1C=(0<<UMSEL11) | (0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
0017c5 e0e6      	LDI  R30,LOW(6)
0017c6 93e0 00ca 	STS  202,R30
                 ; 0000 0C73 UBRR1H=0x00;
0017c8 e0e0      	LDI  R30,LOW(0)
0017c9 93e0 00cd 	STS  205,R30
                 ; 0000 0C74 UBRR1L=0x05;
0017cb e0e5      	LDI  R30,LOW(5)
0017cc 93e0 00cc 	STS  204,R30
                 ; 0000 0C75 
                 ; 0000 0C76 
                 ; 0000 0C77 // USART2 initialization
                 ; 0000 0C78 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0C79 // USART2 Receiver: On
                 ; 0000 0C7A // USART2 Transmitter: On
                 ; 0000 0C7B // USART2 Mode: Asynchronous
                 ; 0000 0C7C // USART2 Baud Rate: 57600
                 ; 0000 0C7D UCSR2A=(0<<RXC2) | (0<<TXC2) | (0<<UDRE2) | (0<<FE2) | (0<<DOR2) | (0<<UPE2) | (0<<U2X2) | (0<<MPCM2);
0017ce e0e0      	LDI  R30,LOW(0)
0017cf 93e0 00d0 	STS  208,R30
                 ; 0000 0C7E UCSR2B=(1<<RXCIE2) | (0<<TXCIE2) | (0<<UDRIE2) | (1<<RXEN2) | (1<<TXEN2) | (0<<UCSZ22) | (0<<RXB82) | (0<<TXB82);
0017d1 e9e8      	LDI  R30,LOW(152)
0017d2 93e0 00d1 	STS  209,R30
                 ; 0000 0C7F UCSR2C=(0<<UMSEL21) | (0<<UMSEL20) | (0<<UPM21) | (0<<UPM20) | (0<<USBS2) | (1<<UCSZ21) | (1<<UCSZ20) | (0<<UCPOL2);
0017d4 e0e6      	LDI  R30,LOW(6)
0017d5 93e0 00d2 	STS  210,R30
                 ; 0000 0C80 UBRR2H=0x00;
0017d7 e0e0      	LDI  R30,LOW(0)
0017d8 93e0 00d5 	STS  213,R30
                 ; 0000 0C81 UBRR2L=0x0B;
0017da e0eb      	LDI  R30,LOW(11)
0017db 93e0 00d4 	STS  212,R30
                 ; 0000 0C82 
                 ; 0000 0C83 /*
                 ; 0000 0C84 // USART2 initialization
                 ; 0000 0C85 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0C86 // USART2 Receiver: On
                 ; 0000 0C87 // USART2 Transmitter: On
                 ; 0000 0C88 // USART2 Mode: Asynchronous
                 ; 0000 0C89 // USART2 Baud Rate: 115200
                 ; 0000 0C8A UCSR2A=(0<<RXC2) | (0<<TXC2) | (0<<UDRE2) | (0<<FE2) | (0<<DOR2) | (0<<UPE2) | (0<<U2X2) | (0<<MPCM2);
                 ; 0000 0C8B UCSR2B=(1<<RXCIE2) | (0<<TXCIE2) | (0<<UDRIE2) | (1<<RXEN2) | (1<<TXEN2) | (0<<UCSZ22) | (0<<RXB82) | (0<<TXB82);
                 ; 0000 0C8C UCSR2C=(0<<UMSEL21) | (0<<UMSEL20) | (0<<UPM21) | (0<<UPM20) | (0<<USBS2) | (1<<UCSZ21) | (1<<UCSZ20) | (0<<UCPOL2);
                 ; 0000 0C8D UBRR2H=0x00;
                 ; 0000 0C8E UBRR2L=0x05;
                 ; 0000 0C8F */
                 ; 0000 0C90 
                 ; 0000 0C91 // USART3 initialization
                 ; 0000 0C92 // USART3 disabled
                 ; 0000 0C93 UCSR3B=(0<<RXCIE3) | (0<<TXCIE3) | (0<<UDRIE3) | (0<<RXEN3) | (0<<TXEN3) | (0<<UCSZ32) | (0<<RXB83) | (0<<TXB83);
0017dd e0e0      	LDI  R30,LOW(0)
0017de 93e0 0131 	STS  305,R30
                 ; 0000 0C94 
                 ; 0000 0C95 // Analog Comparator initialization
                 ; 0000 0C96 // Analog Comparator: Off
                 ; 0000 0C97 // The Analog Comparator's positive input is
                 ; 0000 0C98 // connected to the AIN0 pin
                 ; 0000 0C99 // The Analog Comparator's negative input is
                 ; 0000 0C9A // connected to the AIN1 pin
                 ; 0000 0C9B ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0017e0 e8e0      	LDI  R30,LOW(128)
0017e1 bfe0      	OUT  0x30,R30
                 ; 0000 0C9C ADCSRB=(0<<ACME);
0017e2 e0e0      	LDI  R30,LOW(0)
0017e3 93e0 007b 	STS  123,R30
                 ; 0000 0C9D // Digital input buffer on AIN0: On
                 ; 0000 0C9E // Digital input buffer on AIN1: On
                 ; 0000 0C9F DIDR1=(0<<AIN0D) | (0<<AIN1D);
0017e5 93e0 007f 	STS  127,R30
                 ; 0000 0CA0 
                 ; 0000 0CA1 // ADC initialization
                 ; 0000 0CA2 // ADC disabled
                 ; 0000 0CA3 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0017e7 93e0 007a 	STS  122,R30
                 ; 0000 0CA4 
                 ; 0000 0CA5 // SPI initialization
                 ; 0000 0CA6 // SPI disabled
                 ; 0000 0CA7 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0017e9 bdec      	OUT  0x2C,R30
                 ; 0000 0CA8 
                 ; 0000 0CA9 // TWI initialization
                 ; 0000 0CAA // TWI disabled
                 ; 0000 0CAB TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0017ea 93e0 00bc 	STS  188,R30
                 ; 0000 0CAC 
                 ; 0000 0CAD // Globally enable interrupts
                 ; 0000 0CAE #asm("sei")
0017ec 9478      	SEI
                 ; 0000 0CAF 
                 ; 0000 0CB0 // Bit-Banged I2C Bus initialization
                 ; 0000 0CB1 // SDA signal: PORTF bit: 2
                 ; 0000 0CB2 // SCL signal: PORTA bit: 1
                 ; 0000 0CB3 // Bit Rate: 100 kHz
                 ; 0000 0CB4 // Note: I2C settings are specified in the
                 ; 0000 0CB5 // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 0CB6 i2c_init();
0017ed 940e 1cd6 	CALL _i2c_init
                 ; 0000 0CB7 
                 ; 0000 0CB8 // DS1307 Real Time Clock initialization for Bit-Banged I2C
                 ; 0000 0CB9 // Square wave output on pin SQW/OUT: On
                 ; 0000 0CBA // Square wave frequency: 1 Hz
                 ; 0000 0CBB rtc_init(0,1,0);
0017ef e0e0      	LDI  R30,LOW(0)
0017f0 93ea      	ST   -Y,R30
0017f1 e0e1      	LDI  R30,LOW(1)
0017f2 93ea      	ST   -Y,R30
0017f3 e0a0      	LDI  R26,LOW(0)
0017f4 d22e      	RCALL _rtc_init
                 ; 0000 0CBC 
                 ; 0000 0CBD //³¯Â¥ÃÊ±â ¼³Á¤
                 ; 0000 0CBE 
                 ; 0000 0CBF /* Set time 00:00:00 */
                 ; 0000 0CC0 rtc_set_time(0,0,0);
0017f5 e0e0      	LDI  R30,LOW(0)
0017f6 93ea      	ST   -Y,R30
0017f7 93ea      	ST   -Y,R30
0017f8 e0a0      	LDI  R26,LOW(0)
0017f9 d24d      	RCALL _rtc_set_time
                 ; 0000 0CC1 
                 ; 0000 0CC2 /* Set date Monday 23/07/2018   week,day,month,yea*/
                 ; 0000 0CC3 rtc_set_date(1,1,1,20);
0017fa e0e1      	LDI  R30,LOW(1)
0017fb 93ea      	ST   -Y,R30
0017fc 93ea      	ST   -Y,R30
0017fd 93ea      	ST   -Y,R30
0017fe e1a4      	LDI  R26,LOW(20)
0017ff d272      	RCALL _rtc_set_date
                 ; 0000 0CC4 
                 ; 0000 0CC5 
                 ; 0000 0CC6 
                 ; 0000 0CC7 init();
001800 940e 0eb2 	CALL _init
                 ; 0000 0CC8 
                 ; 0000 0CC9 while (1)
                 _0x307:
                 ; 0000 0CCA       {
                 ; 0000 0CCB             temp_c++;
001802 e0a2      	LDI  R26,LOW(_temp_c)
001803 e0ba      	LDI  R27,HIGH(_temp_c)
001804 940e 1b47 	CALL SUBOPT_0xC
                 ; 0000 0CCC             if(temp_c>2){temp_c = 0;display_out();}
001806 91a0 0a02 	LDS  R26,_temp_c
001808 91b0 0a03 	LDS  R27,_temp_c+1
00180a 9713      	SBIW R26,3
00180b f03c      	BRLT _0x30A
00180c e0e0      	LDI  R30,LOW(0)
00180d 93e0 0a02 	STS  _temp_c,R30
00180f 93e0 0a03 	STS  _temp_c+1,R30
001811 940e 0f13 	CALL _display_out
                 ; 0000 0CCD 
                 ; 0000 0CCE        //LED
                 ; 0000 0CCF           if(((comm_err == 0) && (DIS_HOT_SWAP == 0))&&(power_link1_err == 0)&&(buzzer_out_wait == 1)&&((sw_status == 1) ...
                 _0x30A:
001813 99f7      	SBIC 0x1E,7
001814 c002      	RJMP _0x30C
001815 9b18      	SBIS 0x3,0
001816 c001      	RJMP _0x30D
                 _0x30C:
001817 c00f      	RJMP _0x30E
                 _0x30D:
001818 91a0 0b64 	LDS  R26,_power_link1_err
00181a 30a0      	CPI  R26,LOW(0x0)
00181b f459      	BRNE _0x30E
00181c 91a0 0b90 	LDS  R26,_buzzer_out_wait
00181e 30a1      	CPI  R26,LOW(0x1)
00181f f439      	BRNE _0x30E
001820 91a0 0b61 	LDS  R26,_sw_status
001822 30a1      	CPI  R26,LOW(0x1)
001823 f011      	BREQ _0x30F
001824 30a2      	CPI  R26,LOW(0x2)
001825 f409      	BRNE _0x30E
                 _0x30F:
001826 c001      	RJMP _0x311
                 _0x30E:
001827 c037      	RJMP _0x30B
                 _0x311:
                 ; 0000 0CD0           //if((power_link_1 & 0x80) == 0x80)
                 ; 0000 0CD1            {
                 ; 0000 0CD2                 if((batt_link_err_act_1 == 1)||((err_main_1 & 0x80)==0x80)||(err_bat1_temp == ERR)||(err_bat1_volt == ER ...
001828 99f2      	SBIC 0x1E,2
001829 c011      	RJMP _0x313
00182a 91e0 0b2f 	LDS  R30,_err_main_1
00182c 78e0      	ANDI R30,LOW(0x80)
00182d 38e0      	CPI  R30,LOW(0x80)
00182e f061      	BREQ _0x313
00182f 91a0 0b74 	LDS  R26,_err_bat1_temp
001831 30a1      	CPI  R26,LOW(0x1)
001832 f041      	BREQ _0x313
001833 91a0 0b76 	LDS  R26,_err_bat1_volt
001835 30a1      	CPI  R26,LOW(0x1)
001836 f021      	BREQ _0x313
001837 91a0 0b78 	LDS  R26,_err_bat1_curr
001839 30a1      	CPI  R26,LOW(0x1)
00183a f491      	BRNE _0x312
                 _0x313:
                 ; 0000 0CD3                 {
                 ; 0000 0CD4                 BAT_ERR_1 = ON;
00183b 9a76      	SBI  0xE,6
                 ; 0000 0CD5                 BAT_RUN_1 = OFF;
00183c 9874      	CBI  0xE,4
                 ; 0000 0CD6                 if((batt_err_1_act == OFF)&&(batt_err_1_act_buzzer == OFF)){batt_err_1_act_buzzer = ON;}
00183d 91a0 0b5b 	LDS  R26,_batt_err_1_act
00183f 30a0      	CPI  R26,LOW(0x0)
001840 f421      	BRNE _0x31A
001841 91a0 0b5d 	LDS  R26,_batt_err_1_act_buzzer
001843 30a0      	CPI  R26,LOW(0x0)
001844 f009      	BREQ _0x31B
                 _0x31A:
001845 c003      	RJMP _0x319
                 _0x31B:
001846 e0e1      	LDI  R30,LOW(1)
001847 93e0 0b5d 	STS  _batt_err_1_act_buzzer,R30
                 ; 0000 0CD7                 batt_err_1_act = ON;
                 _0x319:
001849 e0e1      	LDI  R30,LOW(1)
00184a 93e0 0b5b 	STS  _batt_err_1_act,R30
                 ; 0000 0CD8                 }
                 ; 0000 0CD9                 else
00184c c011      	RJMP _0x31C
                 _0x312:
                 ; 0000 0CDA                 {
                 ; 0000 0CDB                 BAT_ERR_1 = OFF;
00184d 9876      	CBI  0xE,6
                 ; 0000 0CDC                 if(batt_run_act_1 == 1){BAT_RUN_1 = ON;}else{if(led_flash == 1){BAT_RUN_1 = ON;}else{BAT_RUN_1 = OFF;}}
00184e 9bf4      	SBIS 0x1E,4
00184f c002      	RJMP _0x31F
001850 9a74      	SBI  0xE,4
001851 c007      	RJMP _0x322
                 _0x31F:
001852 91a0 0b4e 	LDS  R26,_led_flash
001854 30a1      	CPI  R26,LOW(0x1)
001855 f411      	BRNE _0x323
001856 9a74      	SBI  0xE,4
001857 c001      	RJMP _0x326
                 _0x323:
001858 9874      	CBI  0xE,4
                 _0x326:
                 _0x322:
                 ; 0000 0CDD                 batt_err_1_act = OFF;
001859 e0e0      	LDI  R30,LOW(0)
00185a 93e0 0b5b 	STS  _batt_err_1_act,R30
                 ; 0000 0CDE                 batt_err_1_act_buzzer = OFF;
00185c 93e0 0b5d 	STS  _batt_err_1_act_buzzer,R30
                 ; 0000 0CDF                 }
                 _0x31C:
                 ; 0000 0CE0            }
                 ; 0000 0CE1            else
00185e c002      	RJMP _0x329
                 _0x30B:
                 ; 0000 0CE2            {
                 ; 0000 0CE3                 BAT_ERR_1 = OFF;
00185f 9876      	CBI  0xE,6
                 ; 0000 0CE4                 BAT_RUN_1 = OFF;
001860 9874      	CBI  0xE,4
                 ; 0000 0CE5            }
                 _0x329:
                 ; 0000 0CE6 
                 ; 0000 0CE7           // if((power_link_2 & 0x80) == 0x80)// Àü¿ø¹Ý 1,2 ÇÖ½º¿Ò°á°ú 1ÀÌ¸é Á¤»ó 0ÀÌ¸é ¿¡·¯·Î Ã³¸®
                 ; 0000 0CE8 
                 ; 0000 0CE9 
                 ; 0000 0CEA            if(((comm_err == 0) && (DIS_HOT_SWAP == 0))&&(power_link2_err == 0)&&(buzzer_out_wait == 1)&&((sw_status == 1 ...
001861 99f7      	SBIC 0x1E,7
001862 c002      	RJMP _0x32F
001863 9b18      	SBIS 0x3,0
001864 c001      	RJMP _0x330
                 _0x32F:
001865 c00f      	RJMP _0x331
                 _0x330:
001866 91a0 0b65 	LDS  R26,_power_link2_err
001868 30a0      	CPI  R26,LOW(0x0)
001869 f459      	BRNE _0x331
00186a 91a0 0b90 	LDS  R26,_buzzer_out_wait
00186c 30a1      	CPI  R26,LOW(0x1)
00186d f439      	BRNE _0x331
00186e 91a0 0b61 	LDS  R26,_sw_status
001870 30a1      	CPI  R26,LOW(0x1)
001871 f011      	BREQ _0x332
001872 30a2      	CPI  R26,LOW(0x2)
001873 f409      	BRNE _0x331
                 _0x332:
001874 c001      	RJMP _0x334
                 _0x331:
001875 c037      	RJMP _0x32E
                 _0x334:
                 ; 0000 0CEB            {
                 ; 0000 0CEC                 if((batt_link_err_act_2 == 1)||((err_main_2 & 0x80)==0x80)||(err_bat2_temp == ERR)||(err_bat2_volt == ER ...
001876 99f3      	SBIC 0x1E,3
001877 c011      	RJMP _0x336
001878 91e0 0b34 	LDS  R30,_err_main_2
00187a 78e0      	ANDI R30,LOW(0x80)
00187b 38e0      	CPI  R30,LOW(0x80)
00187c f061      	BREQ _0x336
00187d 91a0 0b75 	LDS  R26,_err_bat2_temp
00187f 30a1      	CPI  R26,LOW(0x1)
001880 f041      	BREQ _0x336
001881 91a0 0b77 	LDS  R26,_err_bat2_volt
001883 30a1      	CPI  R26,LOW(0x1)
001884 f021      	BREQ _0x336
001885 91a0 0b79 	LDS  R26,_err_bat2_curr
001887 30a1      	CPI  R26,LOW(0x1)
001888 f491      	BRNE _0x335
                 _0x336:
                 ; 0000 0CED                 {
                 ; 0000 0CEE                 BAT_ERR_2 = ON;
001889 9a77      	SBI  0xE,7
                 ; 0000 0CEF                 BAT_RUN_2 = OFF;
00188a 9875      	CBI  0xE,5
                 ; 0000 0CF0                 if((batt_err_2_act == OFF)&&(batt_err_2_act_buzzer == OFF)){batt_err_2_act_buzzer = ON;}
00188b 91a0 0b5c 	LDS  R26,_batt_err_2_act
00188d 30a0      	CPI  R26,LOW(0x0)
00188e f421      	BRNE _0x33D
00188f 91a0 0b5e 	LDS  R26,_batt_err_2_act_buzzer
001891 30a0      	CPI  R26,LOW(0x0)
001892 f009      	BREQ _0x33E
                 _0x33D:
001893 c003      	RJMP _0x33C
                 _0x33E:
001894 e0e1      	LDI  R30,LOW(1)
001895 93e0 0b5e 	STS  _batt_err_2_act_buzzer,R30
                 ; 0000 0CF1                 batt_err_2_act = ON;
                 _0x33C:
001897 e0e1      	LDI  R30,LOW(1)
001898 93e0 0b5c 	STS  _batt_err_2_act,R30
                 ; 0000 0CF2                 }
                 ; 0000 0CF3                 else
00189a c011      	RJMP _0x33F
                 _0x335:
                 ; 0000 0CF4                 {
                 ; 0000 0CF5                 BAT_ERR_2 = OFF;
00189b 9877      	CBI  0xE,7
                 ; 0000 0CF6                 if(batt_run_act_2 == 1){BAT_RUN_2 = ON;}else{if(led_flash == 1){BAT_RUN_2 = ON;}else{BAT_RUN_2 = OFF;}}
00189c 9bf5      	SBIS 0x1E,5
00189d c002      	RJMP _0x342
00189e 9a75      	SBI  0xE,5
00189f c007      	RJMP _0x345
                 _0x342:
0018a0 91a0 0b4e 	LDS  R26,_led_flash
0018a2 30a1      	CPI  R26,LOW(0x1)
0018a3 f411      	BRNE _0x346
0018a4 9a75      	SBI  0xE,5
0018a5 c001      	RJMP _0x349
                 _0x346:
0018a6 9875      	CBI  0xE,5
                 _0x349:
                 _0x345:
                 ; 0000 0CF7                 batt_err_2_act = OFF;
0018a7 e0e0      	LDI  R30,LOW(0)
0018a8 93e0 0b5c 	STS  _batt_err_2_act,R30
                 ; 0000 0CF8                 batt_err_2_act_buzzer = OFF;
0018aa 93e0 0b5e 	STS  _batt_err_2_act_buzzer,R30
                 ; 0000 0CF9                 }
                 _0x33F:
                 ; 0000 0CFA            }
                 ; 0000 0CFB            else
0018ac c002      	RJMP _0x34C
                 _0x32E:
                 ; 0000 0CFC            {
                 ; 0000 0CFD                 BAT_ERR_2 = OFF;
0018ad 9877      	CBI  0xE,7
                 ; 0000 0CFE                 BAT_RUN_2 = OFF;
0018ae 9875      	CBI  0xE,5
                 ; 0000 0CFF            }
                 _0x34C:
                 ; 0000 0D00 
                 ; 0000 0D01 
                 ; 0000 0D02            //****************
                 ; 0000 0D03            // comm_ge_err = 0; //ÀÓ½ÃÃ³¸® ½ÃÇè ¹× ³³Ç°½Ã »èÁ¦ ÇÊ¿ä
                 ; 0000 0D04            //****************
                 ; 0000 0D05 
                 ; 0000 0D06             if((sw_status == 1)||(sw_status == 2))
0018af 91a0 0b61 	LDS  R26,_sw_status
0018b1 30a1      	CPI  R26,LOW(0x1)
0018b2 f019      	BREQ _0x352
0018b3 30a2      	CPI  R26,LOW(0x2)
0018b4 f009      	BREQ _0x352
0018b5 c04c      	RJMP _0x351
                 _0x352:
                 ; 0000 0D07             {
                 ; 0000 0D08                 if((((comm_err == 1)||(deiver_48_err == ERR))&&(buzzer_out_wait == 1))||(DIS_HOT_SWAP == 1))
0018b6 99f7      	SBIC 0x1E,7
0018b7 c004      	RJMP _0x355
0018b8 91a0 0a69 	LDS  R26,_deiver_48_err
0018ba 30a1      	CPI  R26,LOW(0x1)
0018bb f421      	BRNE _0x357
                 _0x355:
0018bc 91a0 0b90 	LDS  R26,_buzzer_out_wait
0018be 30a1      	CPI  R26,LOW(0x1)
0018bf f011      	BREQ _0x359
                 _0x357:
0018c0 9b18      	SBIS 0x3,0
0018c1 c00e      	RJMP _0x354
                 _0x359:
                 ; 0000 0D09                 {
                 ; 0000 0D0A                 DT_NORMAL = 0;
0018c2 9814      	CBI  0x2,4
                 ; 0000 0D0B                 DT_ERR = 1;
0018c3 9a15      	SBI  0x2,5
                 ; 0000 0D0C                 if((dt_err_act == OFF)&&(dt_err_act_buzzer == OFF)){dt_err_act_buzzer = ON;}
0018c4 99f6      	SBIC 0x1E,6
0018c5 c004      	RJMP _0x360
0018c6 91a0 0b59 	LDS  R26,_dt_err_act_buzzer
0018c8 30a0      	CPI  R26,LOW(0x0)
0018c9 f009      	BREQ _0x361
                 _0x360:
0018ca c003      	RJMP _0x35F
                 _0x361:
0018cb e0e1      	LDI  R30,LOW(1)
0018cc 93e0 0b59 	STS  _dt_err_act_buzzer,R30
                 ; 0000 0D0D                 dt_err_act = ON;
                 _0x35F:
0018ce 9af6      	SBI  0x1E,6
                 ; 0000 0D0E                 }
                 ; 0000 0D0F                 else
0018cf c006      	RJMP _0x364
                 _0x354:
                 ; 0000 0D10                 {
                 ; 0000 0D11                 DT_NORMAL = 1;
0018d0 9a14      	SBI  0x2,4
                 ; 0000 0D12                 DT_ERR = 0;
0018d1 9815      	CBI  0x2,5
                 ; 0000 0D13                 dt_err_act = OFF;
0018d2 98f6      	CBI  0x1E,6
                 ; 0000 0D14                 dt_err_act_buzzer = OFF;
0018d3 e0e0      	LDI  R30,LOW(0)
0018d4 93e0 0b59 	STS  _dt_err_act_buzzer,R30
                 ; 0000 0D15                 }
                 _0x364:
                 ; 0000 0D16 
                 ; 0000 0D17 
                 ; 0000 0D18                 if(((comm_ge_err == ERR)||(ge_err_act == ERR))&&(buzzer_out_wait == 1))
0018d6 fc20      	SBRC R2,0
0018d7 c004      	RJMP _0x36C
0018d8 91a0 0b43 	LDS  R26,_ge_err_act
0018da 30a1      	CPI  R26,LOW(0x1)
0018db f421      	BRNE _0x36E
                 _0x36C:
0018dc 91a0 0b90 	LDS  R26,_buzzer_out_wait
0018de 30a1      	CPI  R26,LOW(0x1)
0018df f009      	BREQ _0x36F
                 _0x36E:
0018e0 c010      	RJMP _0x36B
                 _0x36F:
                 ; 0000 0D19                 {
                 ; 0000 0D1A                  GE_ERR = 1;GE_NORMAL = 0;
0018e1 9a17      	SBI  0x2,7
0018e2 9816      	CBI  0x2,6
                 ; 0000 0D1B                  if((ge_err_latch == OFF)&&(ge_err_act_buzzer == OFF)){ge_err_act_buzzer = ON;}
0018e3 91a0 0b44 	LDS  R26,_ge_err_latch
0018e5 30a0      	CPI  R26,LOW(0x0)
0018e6 f421      	BRNE _0x375
0018e7 91a0 0b5a 	LDS  R26,_ge_err_act_buzzer
0018e9 30a0      	CPI  R26,LOW(0x0)
0018ea f009      	BREQ _0x376
                 _0x375:
0018eb c003      	RJMP _0x374
                 _0x376:
0018ec e0e1      	LDI  R30,LOW(1)
0018ed 93e0 0b5a 	STS  _ge_err_act_buzzer,R30
                 ; 0000 0D1C                  ge_err_latch = ON;
                 _0x374:
0018ef e0e1      	LDI  R30,LOW(1)
0018f0 c005      	RJMP _0x44F
                 ; 0000 0D1D                 }
                 ; 0000 0D1E                 else
                 _0x36B:
                 ; 0000 0D1F                 {
                 ; 0000 0D20                  GE_NORMAL = 1;GE_ERR = 0;
0018f1 9a16      	SBI  0x2,6
0018f2 9817      	CBI  0x2,7
                 ; 0000 0D21                  ge_err_act_buzzer = OFF;
0018f3 e0e0      	LDI  R30,LOW(0)
0018f4 93e0 0b5a 	STS  _ge_err_act_buzzer,R30
                 ; 0000 0D22                  ge_err_latch = OFF;
                 _0x44F:
0018f6 93e0 0b44 	STS  _ge_err_latch,R30
                 ; 0000 0D23                 }
                 ; 0000 0D24 
                 ; 0000 0D25 
                 ; 0000 0D26 
                 ; 0000 0D27                if(init_mod_switch == 0)
0018f8 91e0 0b91 	LDS  R30,_init_mod_switch
0018fa 30e0      	CPI  R30,0
0018fb f429      	BRNE _0x37C
                 ; 0000 0D28                {
                 ; 0000 0D29                 mode_change_and_init = 1; //ÃÊ±â ºÎÀú °æº¸ ¹ß»ý
0018fc e0e1      	LDI  R30,LOW(1)
0018fd 93e0 0b8e 	STS  _mode_change_and_init,R30
                 ; 0000 0D2A                 init_mod_switch = 1;
0018ff 93e0 0b91 	STS  _init_mod_switch,R30
                 ; 0000 0D2B                }
                 ; 0000 0D2C             }
                 _0x37C:
                 ; 0000 0D2D             else
001901 c00d      	RJMP _0x37D
                 _0x351:
                 ; 0000 0D2E             {
                 ; 0000 0D2F               DT_NORMAL = 0;
001902 9814      	CBI  0x2,4
                 ; 0000 0D30               DT_ERR = 0;
001903 9815      	CBI  0x2,5
                 ; 0000 0D31               GE_ERR = 0;
001904 9817      	CBI  0x2,7
                 ; 0000 0D32               GE_NORMAL = 0;
001905 9816      	CBI  0x2,6
                 ; 0000 0D33               buzzer_clear_all();
001906 940e 00c1 	CALL _buzzer_clear_all
                 ; 0000 0D34               init_mod_switch = 0;
001908 e0e0      	LDI  R30,LOW(0)
001909 93e0 0b91 	STS  _init_mod_switch,R30
                 ; 0000 0D35               mode_change_and_init = 0;
00190b 93e0 0b8e 	STS  _mode_change_and_init,R30
                 ; 0000 0D36               buzzer_out_wait = 0;
00190d 93e0 0b90 	STS  _buzzer_out_wait,R30
                 ; 0000 0D37             }
                 _0x37D:
                 ; 0000 0D38 
                 ; 0000 0D39 
                 ; 0000 0D3A 
                 ; 0000 0D3B             //if(LAN_STS == 1){DT_NORMAL = 1;}else{DT_NORMAL = 0;}
                 ; 0000 0D3C             //if(LAN_STS == 1){GE_NORMAL = 1;}else{GE_NORMAL = 0;}
                 ; 0000 0D3D             //if(LAN_STS == 1){DT_ERR = 1;}else{DT_ERR = 0;}
                 ; 0000 0D3E             //if(LAN_STS == 1){GE_ERR = 1;}else{GE_ERR = 0;}
                 ; 0000 0D3F 
                 ; 0000 0D40             //        //COMM ERROR PROCESS of dt
                 ; 0000 0D41             //        if(comm_err == 1) //Åë½Å loss½Ã °ËÃâ
                 ; 0000 0D42             //        {
                 ; 0000 0D43             //         data_clear();
                 ; 0000 0D44             //         if(ADDRESS_0){voltage_1 = 0;}
                 ; 0000 0D45             //        if(ADDRESS_0){ voltage_2 = 0;}
                 ; 0000 0D46             //
                 ; 0000 0D47             //        if(ADDRESS_0){ currunt_1 = 0;}
                 ; 0000 0D48             //        if(ADDRESS_0){ currunt_2 = 0;}
                 ; 0000 0D49             //
                 ; 0000 0D4A             //        if(ADDRESS_0){ bat_volt_1 = 0;}
                 ; 0000 0D4B             //        if(ADDRESS_0){ bat_volt_2 = 0;}
                 ; 0000 0D4C             //        }
                 ; 0000 0D4D 
                 ; 0000 0D4E 
                 ; 0000 0D4F 
                 ; 0000 0D50        if(send_to_div_act == 1){send_to_div();}
00190f 91a0 0b57 	LDS  R26,_send_to_div_act
001911 30a1      	CPI  R26,LOW(0x1)
001912 f411      	BRNE _0x386
001913 940e 0c11 	CALL _send_to_div
                 ; 0000 0D51 
                 ; 0000 0D52         //¼Ë´Ù¿î ½Ã°£ ±â·Ï
                 ; 0000 0D53        if(time_data_get == 1)
                 _0x386:
001915 91a0 0b4f 	LDS  R26,_time_data_get
001917 30a1      	CPI  R26,LOW(0x1)
001918 f559      	BRNE _0x387
                 ; 0000 0D54         {
                 ; 0000 0D55 
                 ; 0000 0D56             rtc_get_date(&week,&day,&month,&year);
001919 940e 1af5 	CALL SUBOPT_0x7
                 ; 0000 0D57             rtc_get_time(&hour,&minute,&sec);
00191b 940e 1ad6 	CALL SUBOPT_0x4
                 ; 0000 0D58              keep_year = year;
00191d 91e0 0a0c 	LDS  R30,_year
00191f e0a2      	LDI  R26,LOW(_keep_year)
001920 e0b0      	LDI  R27,HIGH(_keep_year)
001921 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D59              keep_month = month;
001923 91e0 0a0d 	LDS  R30,_month
001925 e0a4      	LDI  R26,LOW(_keep_month)
001926 e0b0      	LDI  R27,HIGH(_keep_month)
001927 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D5A              keep_day = day;
001929 91e0 0a0f 	LDS  R30,_day
00192b e0a6      	LDI  R26,LOW(_keep_day)
00192c e0b0      	LDI  R27,HIGH(_keep_day)
00192d 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D5B              keep_hour = hour;
00192f 91e0 0a10 	LDS  R30,_hour
001931 e0a7      	LDI  R26,LOW(_keep_hour)
001932 e0b0      	LDI  R27,HIGH(_keep_hour)
001933 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D5C              keep_minute = minute;
001935 91e0 0a11 	LDS  R30,_minute
001937 e0a9      	LDI  R26,LOW(_keep_minute)
001938 e0b0      	LDI  R27,HIGH(_keep_minute)
001939 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D5D              keep_sec = sec;
00193b 91e0 0a12 	LDS  R30,_sec
00193d e0ab      	LDI  R26,LOW(_keep_sec)
00193e e0b0      	LDI  R27,HIGH(_keep_sec)
00193f 940e 1cc5 	CALL __EEPROMWRB
                 ; 0000 0D5E            time_data_get = 0;
001941 e0e0      	LDI  R30,LOW(0)
001942 93e0 0b4f 	STS  _time_data_get,R30
                 ; 0000 0D5F         }
                 ; 0000 0D60 
                 ; 0000 0D61 
                 ; 0000 0D62 
                 ; 0000 0D63         if((((sw_status == 1)||(sw_status == 2))&&((dt_err_act_buzzer == ON) || (ge_err_act_buzzer == ON) ||
                 _0x387:
                 ; 0000 0D64         (batt_err_1_act_buzzer == ON) || (batt_err_2_act_buzzer == ON) ||(power_link1_err_act_buzzer == ON) ||
                 ; 0000 0D65         (power_link2_err_act_buzzer == ON)))&&(buzzer_out_wait == 1))
001944 91a0 0b61 	LDS  R26,_sw_status
001946 30a1      	CPI  R26,LOW(0x1)
001947 f011      	BREQ _0x389
001948 30a2      	CPI  R26,LOW(0x2)
001949 f4c9      	BRNE _0x38B
                 _0x389:
00194a 91a0 0b59 	LDS  R26,_dt_err_act_buzzer
00194c 30a1      	CPI  R26,LOW(0x1)
00194d f0a1      	BREQ _0x38C
00194e 91a0 0b5a 	LDS  R26,_ge_err_act_buzzer
001950 30a1      	CPI  R26,LOW(0x1)
001951 f081      	BREQ _0x38C
001952 91a0 0b5d 	LDS  R26,_batt_err_1_act_buzzer
001954 30a1      	CPI  R26,LOW(0x1)
001955 f061      	BREQ _0x38C
001956 91a0 0b5e 	LDS  R26,_batt_err_2_act_buzzer
001958 30a1      	CPI  R26,LOW(0x1)
001959 f041      	BREQ _0x38C
00195a 91a0 0b5f 	LDS  R26,_power_link1_err_act_buzzer
00195c 30a1      	CPI  R26,LOW(0x1)
00195d f021      	BREQ _0x38C
00195e 91a0 0b60 	LDS  R26,_power_link2_err_act_buzzer
001960 30a1      	CPI  R26,LOW(0x1)
001961 f409      	BRNE _0x38B
                 _0x38C:
001962 c001      	RJMP _0x38E
                 _0x38B:
001963 c004      	RJMP _0x38F
                 _0x38E:
001964 91a0 0b90 	LDS  R26,_buzzer_out_wait
001966 30a1      	CPI  R26,LOW(0x1)
001967 f009      	BREQ _0x390
                 _0x38F:
001968 c014      	RJMP _0x388
                 _0x390:
                 ; 0000 0D66       //  { buzzer_on = ON;}else{buzzer_on = OFF;};
                 ; 0000 0D67         {
                 ; 0000 0D68          buzzer_count++;
001969 e6aa      	LDI  R26,LOW(_buzzer_count)
00196a e0ba      	LDI  R27,HIGH(_buzzer_count)
00196b 940e 1b47 	CALL SUBOPT_0xC
                 ; 0000 0D69          if(buzzer_count >= buzzer_err_delay)       //ºÎÀú ¼Ò¸®³ª¿À´Â°Å ¼öÁ¤ÇÑºÎºÐ    191222
00196d 91a0 0a6a 	LDS  R26,_buzzer_count
00196f 91b0 0a6b 	LDS  R27,_buzzer_count+1
001971 3ba8      	CPI  R26,LOW(0xBB8)
001972 e0eb      	LDI  R30,HIGH(0xBB8)
001973 07be      	CPC  R27,R30
001974 f038      	BRLO _0x391
                 ; 0000 0D6A          {
                 ; 0000 0D6B             buzzer_count =  buzzer_err_delay;
001975 ebe8      	LDI  R30,LOW(3000)
001976 e0fb      	LDI  R31,HIGH(3000)
001977 93e0 0a6a 	STS  _buzzer_count,R30
001979 93f0 0a6b 	STS  _buzzer_count+1,R31
                 ; 0000 0D6C             buzzer_on = ON;
00197b 9af0      	SBI  0x1E,0
                 ; 0000 0D6D          }
                 ; 0000 0D6E         }
                 _0x391:
                 ; 0000 0D6F          else
00197c c006      	RJMP _0x394
                 _0x388:
                 ; 0000 0D70          {
                 ; 0000 0D71             buzzer_on = OFF;
00197d 98f0      	CBI  0x1E,0
                 ; 0000 0D72             buzzer_count = 0;
00197e e0e0      	LDI  R30,LOW(0)
00197f 93e0 0a6a 	STS  _buzzer_count,R30
001981 93e0 0a6b 	STS  _buzzer_count+1,R30
                 ; 0000 0D73          }
                 _0x394:
                 ; 0000 0D74 
                 ; 0000 0D75 
                 ; 0000 0D76         if(BUZZER_STOP_KEY == 0)
001983 991c      	SBIC 0x3,4
001984 c002      	RJMP _0x397
                 ; 0000 0D77         {
                 ; 0000 0D78           buzzer_clear_all();
001985 940e 00c1 	CALL _buzzer_clear_all
                 ; 0000 0D79         }
                 ; 0000 0D7A 
                 ; 0000 0D7B        if(buzzer_on == ON){if(led_flash == ON){BUZZER_HIGH = 1;}else{BUZZER_HIGH = 0;}}else{BUZZER_HIGH = 0;}
                 _0x397:
001987 9bf0      	SBIS 0x1E,0
001988 c008      	RJMP _0x398
001989 91a0 0b4e 	LDS  R26,_led_flash
00198b 30a1      	CPI  R26,LOW(0x1)
00198c f411      	BRNE _0x399
00198d 9a2d      	SBI  0x5,5
00198e c001      	RJMP _0x39C
                 _0x399:
00198f 982d      	CBI  0x5,5
                 _0x39C:
001990 c001      	RJMP _0x39F
                 _0x398:
001991 982d      	CBI  0x5,5
                 _0x39F:
                 ; 0000 0D7C 
                 ; 0000 0D7D        if(send_process_count == 1){if(Common_CHeckLink_act == 1){Response_Common_CHeckLink();fnd_init();}}  //¸µÅ© È®ÀÎ
001992 e0e1      	LDI  R30,LOW(1)
001993 e0f0      	LDI  R31,HIGH(1)
001994 15e7      	CP   R30,R7
001995 05f8      	CPC  R31,R8
001996 f441      	BRNE _0x3A2
001997 91a0 0b83 	LDS  R26,_Common_CHeckLink_act
001999 30a1      	CPI  R26,LOW(0x1)
00199a f421      	BRNE _0x3A3
00199b 940e 1078 	CALL _Response_Common_CHeckLink
00199d 940e 0eac 	CALL _fnd_init
                 _0x3A3:
                 ; 0000 0D7E 
                 ; 0000 0D7F        if(send_process_count == 2){if(Distributor_TimeSyncAck_act == 1){Response_Distributor_TimeSyncAck();}}
                 _0x3A2:
00199f e0e2      	LDI  R30,LOW(2)
0019a0 e0f0      	LDI  R31,HIGH(2)
0019a1 15e7      	CP   R30,R7
0019a2 05f8      	CPC  R31,R8
0019a3 f431      	BRNE _0x3A4
0019a4 91a0 0b87 	LDS  R26,_Distributor_TimeSyncAck_act
0019a6 30a1      	CPI  R26,LOW(0x1)
0019a7 f411      	BRNE _0x3A5
0019a8 940e 1177 	CALL _Response_Distributor_TimeSyncAck
                 _0x3A5:
                 ; 0000 0D80 
                 ; 0000 0D81        if(send_process_count == 3){if(Distributor_BITDetailResponse_act == 1){Response_Distributor_BITDetailResponse();} ...
                 _0x3A4:
0019aa e0e3      	LDI  R30,LOW(3)
0019ab e0f0      	LDI  R31,HIGH(3)
0019ac 15e7      	CP   R30,R7
0019ad 05f8      	CPC  R31,R8
0019ae f429      	BRNE _0x3A6
0019af 91a0 0b88 	LDS  R26,_Distributor_BITDetailResponse_act
0019b1 30a1      	CPI  R26,LOW(0x1)
0019b2 f409      	BRNE _0x3A7
0019b3 d891      	RCALL _Response_Distributor_BITDetailResponse
                 _0x3A7:
                 ; 0000 0D82 
                 ; 0000 0D83        if(send_process_count == 8){if(Distributor_ShutdownResponse_act == 1){Response_Distributor_ShutdownResponse();}}  ...
                 _0x3A6:
0019b4 e0e8      	LDI  R30,LOW(8)
0019b5 e0f0      	LDI  R31,HIGH(8)
0019b6 15e7      	CP   R30,R7
0019b7 05f8      	CPC  R31,R8
0019b8 f431      	BRNE _0x3A8
0019b9 91a0 0b85 	LDS  R26,_Distributor_ShutdownResponse_act
0019bb 30a1      	CPI  R26,LOW(0x1)
0019bc f411      	BRNE _0x3A9
0019bd 940e 1126 	CALL _Response_Distributor_ShutdownResponse
                 _0x3A9:
                 ; 0000 0D84 
                 ; 0000 0D85        if(send_process_count == 5){if(Distributor_ShutdownErroResponse_act == 1){Response_Distributor_ShutdownErroRespon ...
                 _0x3A8:
0019bf e0e5      	LDI  R30,LOW(5)
0019c0 e0f0      	LDI  R31,HIGH(5)
0019c1 15e7      	CP   R30,R7
0019c2 05f8      	CPC  R31,R8
0019c3 f431      	BRNE _0x3AA
0019c4 91a0 0b86 	LDS  R26,_Distributor_ShutdownErroResponse_act
0019c6 30a1      	CPI  R26,LOW(0x1)
0019c7 f411      	BRNE _0x3AB
0019c8 940e 1142 	CALL _Response_Distributor_ShutdownErroResponse
                 _0x3AB:
                 ; 0000 0D86 
                 ; 0000 0D87        if(send_process_count == 6){if(Distributor_PoBIT_act == 1){Response_Distributor_PoBITResponse();}}
                 _0x3AA:
0019ca e0e6      	LDI  R30,LOW(6)
0019cb e0f0      	LDI  R31,HIGH(6)
0019cc 15e7      	CP   R30,R7
0019cd 05f8      	CPC  R31,R8
0019ce f431      	BRNE _0x3AC
0019cf 91a0 0b89 	LDS  R26,_Distributor_PoBIT_act
0019d1 30a1      	CPI  R26,LOW(0x1)
0019d2 f411      	BRNE _0x3AD
0019d3 940e 11ad 	CALL _Response_Distributor_PoBITResponse
                 _0x3AD:
                 ; 0000 0D88 
                 ; 0000 0D89        if(send_process_count == 7){if(Distributor_PoBIT_act_pre == 1){Response_Distributor_PoBITResponse_pre();}}
                 _0x3AC:
0019d5 e0e7      	LDI  R30,LOW(7)
0019d6 e0f0      	LDI  R31,HIGH(7)
0019d7 15e7      	CP   R30,R7
0019d8 05f8      	CPC  R31,R8
0019d9 f431      	BRNE _0x3AE
0019da 91a0 0b8a 	LDS  R26,_Distributor_PoBIT_act_pre
0019dc 30a1      	CPI  R26,LOW(0x1)
0019dd f411      	BRNE _0x3AF
0019de 940e 1193 	CALL _Response_Distributor_PoBITResponse_pre
                 _0x3AF:
                 ; 0000 0D8A 
                 ; 0000 0D8B        if(send_process_count == 4){if((Distributor_PBIT_act == 1) && (ADDRESS_3 == 1)){Response_Distributor_PBIT();}}  / ...
                 _0x3AE:
0019e0 e0e4      	LDI  R30,LOW(4)
0019e1 e0f0      	LDI  R31,HIGH(4)
0019e2 15e7      	CP   R30,R7
0019e3 05f8      	CPC  R31,R8
0019e4 f479      	BRNE _0x3B0
0019e5 91a0 0b84 	LDS  R26,_Distributor_PBIT_act
0019e7 30a1      	CPI  R26,LOW(0x1)
0019e8 f441      	BRNE _0x3B2
0019e9 91e0 0103 	LDS  R30,259
0019eb 70e1      	ANDI R30,LOW(0x1)
0019ec e0a1      	LDI  R26,LOW(1)
0019ed 940e 1c70 	CALL __EQB12
0019ef 30e1      	CPI  R30,LOW(0x1)
0019f0 f009      	BREQ _0x3B3
                 _0x3B2:
0019f1 c002      	RJMP _0x3B1
                 _0x3B3:
0019f2 940e 1092 	CALL _Response_Distributor_PBIT
                 _0x3B1:
                 ; 0000 0D8C 
                 ; 0000 0D8D        if((send_process_count == 9)&&((Distributor_TimeSyncAck_act == 0)&&(Distributor_ShutdownResponse_act == 0)&&(Dist ...
                 _0x3B0:
0019f4 e0e9      	LDI  R30,LOW(9)
0019f5 e0f0      	LDI  R31,HIGH(9)
0019f6 15e7      	CP   R30,R7
0019f7 05f8      	CPC  R31,R8
0019f8 f471      	BRNE _0x3B5
0019f9 91a0 0b87 	LDS  R26,_Distributor_TimeSyncAck_act
0019fb 30a0      	CPI  R26,LOW(0x0)
0019fc f441      	BRNE _0x3B6
0019fd 91a0 0b85 	LDS  R26,_Distributor_ShutdownResponse_act
0019ff 30a0      	CPI  R26,LOW(0x0)
001a00 f421      	BRNE _0x3B6
001a01 91a0 0b86 	LDS  R26,_Distributor_ShutdownErroResponse_act
001a03 30a0      	CPI  R26,LOW(0x0)
001a04 f009      	BREQ _0x3B7
                 _0x3B6:
001a05 c001      	RJMP _0x3B5
                 _0x3B7:
001a06 c001      	RJMP _0x3B8
                 _0x3B5:
001a07 c00d      	RJMP _0x3B4
                 _0x3B8:
001a08 9bf1      	SBIS 0x1E,1
001a09 c008      	RJMP _0x3BA
001a0a 91e0 0103 	LDS  R30,259
001a0c 70e8      	ANDI R30,LOW(0x8)
001a0d e0a8      	LDI  R26,LOW(8)
001a0e 940e 1c70 	CALL __EQB12
001a10 30e1      	CPI  R30,LOW(0x1)
001a11 f009      	BREQ _0x3BB
                 _0x3BA:
001a12 c002      	RJMP _0x3B9
                 _0x3BB:
001a13 d9b0      	RCALL _Report_Distributor_DeviceStatus
001a14 98f1      	CBI  0x1E,1
                 _0x3B9:
                 ; 0000 0D8E 
                 ; 0000 0D8F       // if((send_process_count == 9)&&((Distributor_TimeSyncAck_act == 0)&&(Distributor_ShutdownResponse_act == 0)&&(Di ...
                 ; 0000 0D90 
                 ; 0000 0D91         //if(PoBITResult_act == 1){Response_Distributor_PoBITResponse();}
                 ; 0000 0D92 
                 ; 0000 0D93 
                 ; 0000 0D94         //¹ßÀü±â
                 ; 0000 0D95         if(send_to_ge_active == 1){send_to_ge();}
                 _0x3B4:
001a15 91a0 0b8b 	LDS  R26,_send_to_ge_active
001a17 30a1      	CPI  R26,LOW(0x1)
001a18 f411      	BRNE _0x3BE
001a19 940e 0bce 	CALL _send_to_ge
                 ; 0000 0D96         //ºÐ¹è¹Ý
                 ; 0000 0D97         if(send_to_div_info_act == 1){Request_div_info();}
                 _0x3BE:
001a1b 91a0 0b58 	LDS  R26,_send_to_div_info_act
001a1d 30a1      	CPI  R26,LOW(0x1)
001a1e f411      	BRNE _0x3BF
001a1f 940e 0d66 	CALL _Request_div_info
                 ; 0000 0D98 
                 ; 0000 0D99 
                 ; 0000 0D9A 
                 ; 0000 0D9B       }
                 _0x3BF:
001a21 cde0      	RJMP _0x307
                 ; 0000 0D9C  }
                 _0x3C0:
001a22 cfff      	RJMP _0x3C0
                 ; .FEND
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
001a23 940e 1c23 	CALL SUBOPT_0x30
001a25 7033      	ANDI R19,LOW(3)
001a26 3000      	CPI  R16,0
001a27 f009      	BREQ _0x2000003
001a28 6130      	ORI  R19,LOW(16)
                 _0x2000003:
001a29 3010      	CPI  R17,0
001a2a f009      	BREQ _0x2000004
001a2b 6830      	ORI  R19,LOW(128)
                 _0x2000004:
001a2c 940e 1c28 	CALL SUBOPT_0x31
001a2e e0a7      	LDI  R26,LOW(7)
001a2f 940e 1d0f 	CALL _i2c_write
001a31 2fa3      	MOV  R26,R19
001a32 c021      	RJMP _0x20A0001
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
001a33 940e 1c2d 	CALL SUBOPT_0x32
001a35 e0a0      	LDI  R26,LOW(0)
001a36 940e 1c34 	CALL SUBOPT_0x33
001a38 2fae      	MOV  R26,R30
001a39 d05b      	RCALL _bcd2bin
001a3a 01d8      	MOVW R26,R16
001a3b 940e 1c40 	CALL SUBOPT_0x34
001a3d 940e 1c47 	CALL SUBOPT_0x35
001a3f 01da      	MOVW R26,R20
001a40 93ec      	ST   X,R30
001a41 940e 1cea 	CALL _i2c_stop
001a43 940e 1c65 	CALL __LOADLOCR6
001a45 962a      	ADIW R28,10
001a46 9508      	RET
                 ; .FEND
                 _rtc_set_time:
                 ; .FSTART _rtc_set_time
001a47 940e 1c23 	CALL SUBOPT_0x30
001a49 940e 1c28 	CALL SUBOPT_0x31
001a4b e0a0      	LDI  R26,LOW(0)
001a4c 940e 1c4f 	CALL SUBOPT_0x36
001a4e 2fa0      	MOV  R26,R16
001a4f 940e 1aa2 	CALL _bin2bcd
001a51 2fae      	MOV  R26,R30
001a52 940e 1c57 	CALL SUBOPT_0x37
                 _0x20A0001:
001a54 940e 1d0f 	CALL _i2c_write
001a56 940e 1cea 	CALL _i2c_stop
001a58 940e 1c67 	CALL __LOADLOCR4
001a5a 9626      	ADIW R28,6
001a5b 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
001a5c 940e 1c2d 	CALL SUBOPT_0x32
001a5e e0a3      	LDI  R26,LOW(3)
001a5f 940e 1c34 	CALL SUBOPT_0x33
001a61 85aa      	LDD  R26,Y+10
001a62 85bb      	LDD  R27,Y+10+1
001a63 940e 1c40 	CALL SUBOPT_0x34
001a65 01da      	MOVW R26,R20
001a66 940e 1c40 	CALL SUBOPT_0x34
001a68 940e 1c47 	CALL SUBOPT_0x35
001a6a 01d8      	MOVW R26,R16
001a6b 93ec      	ST   X,R30
001a6c 940e 1cea 	CALL _i2c_stop
001a6e 940e 1c65 	CALL __LOADLOCR6
001a70 962c      	ADIW R28,12
001a71 9508      	RET
                 ; .FEND
                 _rtc_set_date:
                 ; .FSTART _rtc_set_date
001a72 940e 1c23 	CALL SUBOPT_0x30
001a74 812e      	LDD  R18,Y+6
001a75 940e 1c28 	CALL SUBOPT_0x31
001a77 e0a3      	LDI  R26,LOW(3)
001a78 940e 1d0f 	CALL _i2c_write
001a7a 2fa2      	MOV  R26,R18
001a7b 940e 1c57 	CALL SUBOPT_0x37
001a7d 940e 1d0f 	CALL _i2c_write
001a7f 2fa0      	MOV  R26,R16
001a80 940e 1aa2 	CALL _bin2bcd
001a82 2fae      	MOV  R26,R30
001a83 940e 1c4f 	CALL SUBOPT_0x36
001a85 940e 1cea 	CALL _i2c_stop
001a87 940e 1c67 	CALL __LOADLOCR4
001a89 9627      	ADIW R28,7
001a8a 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
001a8b 931a      	ST   -Y,R17
001a8c 2f1a      	MOV  R17,R26
                 _0x2020003:
001a8d 91e0 00c0 	LDS  R30,192
001a8f 72e0      	ANDI R30,LOW(0x20)
001a90 f3e1      	BREQ _0x2020003
001a91 9310 00c6 	STS  198,R17
001a93 9119      	LD   R17,Y+
001a94 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
001a95 93aa      	ST   -Y,R26
001a96 81e8          ld   r30,y
001a97 95e2          swap r30
001a98 70ef          andi r30,0xf
001a99 2fae          mov  r26,r30
001a9a 0faa          lsl  r26
001a9b 0faa          lsl  r26
001a9c 0fea          add  r30,r26
001a9d 0fee          lsl  r30
001a9e 91a9          ld   r26,y+
001a9f 70af          andi r26,0xf
001aa0 0fea          add  r30,r26
001aa1 9508          ret
                 ; .FEND
                 _bin2bcd:
                 ; .FSTART _bin2bcd
001aa2 93aa      	ST   -Y,R26
001aa3 91a9          ld   r26,y+
001aa4 27ee          clr  r30
                 bin2bcd0:
001aa5 50aa          subi r26,10
001aa6 f012          brmi bin2bcd1
001aa7 5fe0          subi r30,-16
001aa8 cffc          rjmp bin2bcd0
                 bin2bcd1:
001aa9 5fa6          subi r26,-10
001aaa 0fea          add  r30,r26
001aab 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _temp_b:
000a00           	.BYTE 0x2
                 _temp_c:
000a02           	.BYTE 0x2
                 _temp_out_to_pc_count:
000a04           	.BYTE 0x2
                 _temp_out_pbit_count:
000a06           	.BYTE 0x2
                 _bat_volt_1:
000a08           	.BYTE 0x2
                 _bat_volt_2:
000a0a           	.BYTE 0x2
                 _year:
000a0c           	.BYTE 0x1
                 _month:
000a0d           	.BYTE 0x1
                 _week:
000a0e           	.BYTE 0x1
                 _day:
000a0f           	.BYTE 0x1
                 _hour:
000a10           	.BYTE 0x1
                 _minute:
000a11           	.BYTE 0x1
                 _sec:
000a12           	.BYTE 0x1
                 
                 	.ESEG
                 
                 	.ORG 0x2
                 _keep_year:
000002           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.ORG 0x4
                 _keep_month:
000004           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.ORG 0x6
                 _keep_day:
000006           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.ORG 0x7
                 _keep_hour:
000007           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.ORG 0x9
                 _keep_minute:
000009           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.ORG 0xB
                 _keep_sec:
00000b           	.BYTE 0x1
                 
                 	.ORG 0x0
                 
                 	.DSEG
                 _voltage_1:
000a13           	.BYTE 0x2
                 _currunt_1:
000a15           	.BYTE 0x2
                 _voltage_2:
000a17           	.BYTE 0x2
                 _currunt_2:
000a19           	.BYTE 0x2
                 _voltage_ch1_1:
000a1b           	.BYTE 0x2
                 _voltage_ch2_1:
000a1d           	.BYTE 0x2
                 _voltage_ch3_1:
000a1f           	.BYTE 0x2
                 _voltage_ch4_1:
000a21           	.BYTE 0x2
                 _voltage_ch5_1:
000a23           	.BYTE 0x2
                 _voltage_ch6_1:
000a25           	.BYTE 0x2
                 _voltage_ch7_1:
000a27           	.BYTE 0x2
                 _voltage_m48_1:
000a29           	.BYTE 0x2
                 _voltage_fan_1:
000a2b           	.BYTE 0x2
                 _currunt_ch1_1:
000a2d           	.BYTE 0x2
                 _currunt_ch2_1:
000a2f           	.BYTE 0x2
                 _currunt_ch3_1:
000a31           	.BYTE 0x2
                 _currunt_ch4_1:
000a33           	.BYTE 0x2
                 _currunt_ch5_1:
000a35           	.BYTE 0x2
                 _currunt_ch6_1:
000a37           	.BYTE 0x2
                 _currunt_ch7_1:
000a39           	.BYTE 0x2
                 _voltage_m24_1:
000a3b           	.BYTE 0x2
                 _currunt_fan_1:
000a3d           	.BYTE 0x2
                 _voltage_ch1_2:
000a3f           	.BYTE 0x2
                 _voltage_ch2_2:
000a41           	.BYTE 0x2
                 _voltage_ch3_2:
000a43           	.BYTE 0x2
                 _voltage_ch4_2:
000a45           	.BYTE 0x2
                 _voltage_ch5_2:
000a47           	.BYTE 0x2
                 _voltage_ch6_2:
000a49           	.BYTE 0x2
                 _voltage_ch7_2:
000a4b           	.BYTE 0x2
                 _voltage_m48_2:
000a4d           	.BYTE 0x2
                 _voltage_fan_2:
000a4f           	.BYTE 0x2
                 _currunt_ch1_2:
000a51           	.BYTE 0x2
                 _currunt_ch2_2:
000a53           	.BYTE 0x2
                 _currunt_ch3_2:
000a55           	.BYTE 0x2
                 _currunt_ch4_2:
000a57           	.BYTE 0x2
                 _currunt_ch5_2:
000a59           	.BYTE 0x2
                 _currunt_ch6_2:
000a5b           	.BYTE 0x2
                 _currunt_ch7_2:
000a5d           	.BYTE 0x2
                 _voltage_m24_2:
000a5f           	.BYTE 0x2
                 _currunt_fan_2:
000a61           	.BYTE 0x2
                 _div_48v:
000a63           	.BYTE 0x2
                 _ac48_ovp:
000a65           	.BYTE 0x1
                 _ac48_lvp:
000a66           	.BYTE 0x1
                 _dc48_ovp:
000a67           	.BYTE 0x1
                 _dc48_lvp:
000a68           	.BYTE 0x1
                 _deiver_48_err:
000a69           	.BYTE 0x1
                 _buzzer_count:
000a6a           	.BYTE 0x2
                 _data_buffer1_temp:
000a6c           	.BYTE 0x5C
                 _data_buffer2_temp:
000ac8           	.BYTE 0x5C
                 _data_buffer_ge_temp:
000b24           	.BYTE 0xA
                 _batt_level_1:
000b2e           	.BYTE 0x1
                 _err_main_1:
000b2f           	.BYTE 0x1
                 _err1_1:
000b30           	.BYTE 0x1
                 _err2_1:
000b31           	.BYTE 0x1
                 _status_1:
000b32           	.BYTE 0x1
                 _batt_level_2:
000b33           	.BYTE 0x1
                 _err_main_2:
000b34           	.BYTE 0x1
                 _err1_2:
000b35           	.BYTE 0x1
                 _err2_2:
000b36           	.BYTE 0x1
                 _status_2:
000b37           	.BYTE 0x1
                 _CRC_H:
000b38           	.BYTE 0x1
                 _CRC_L:
000b39           	.BYTE 0x1
                 _ge_voltage_h:
000b3a           	.BYTE 0x1
                 _ge_voltage_l:
000b3b           	.BYTE 0x1
                 _ge_currunt_h:
000b3c           	.BYTE 0x1
                 _ge_currunt_l:
000b3d           	.BYTE 0x1
                 _ge_err_data:
000b3e           	.BYTE 0x1
                 _voltage_ge:
000b3f           	.BYTE 0x2
                 _currunt_ge:
000b41           	.BYTE 0x2
                 _ge_err_act:
000b43           	.BYTE 0x1
                 _ge_err_latch:
000b44           	.BYTE 0x1
                 _pobit_result:
000b45           	.BYTE 0x1
                 _pbit_result:
000b46           	.BYTE 0x1
                 _batt_charge_1:
000b47           	.BYTE 0x1
                 _batt_charge_2:
000b48           	.BYTE 0x1
                 _batt_discharge_1:
000b49           	.BYTE 0x1
                 _batt_discharge_2:
000b4a           	.BYTE 0x1
                 _err_fan_1:
000b4b           	.BYTE 0x1
                 _err_fan_2:
000b4c           	.BYTE 0x1
                 _time_data_get_act:
000b4d           	.BYTE 0x1
                 _led_flash:
000b4e           	.BYTE 0x1
                 _time_data_get:
000b4f           	.BYTE 0x1
                 _temp_control_1:
000b50           	.BYTE 0x1
                 _temp_control_2:
000b51           	.BYTE 0x1
                 _temp_control_1_:
000b52           	.BYTE 0x1
                 _temp_control_2_:
000b53           	.BYTE 0x1
                 _temp_control_1_old:
000b54           	.BYTE 0x1
                 _temp_control_2_old:
000b55           	.BYTE 0x1
                 _temp_control_sel:
000b56           	.BYTE 0x1
                 _send_to_div_act:
000b57           	.BYTE 0x1
                 _send_to_div_info_act:
000b58           	.BYTE 0x1
                 _dt_err_act_buzzer:
000b59           	.BYTE 0x1
                 _ge_err_act_buzzer:
000b5a           	.BYTE 0x1
                 _batt_err_1_act:
000b5b           	.BYTE 0x1
                 _batt_err_2_act:
000b5c           	.BYTE 0x1
                 _batt_err_1_act_buzzer:
000b5d           	.BYTE 0x1
                 _batt_err_2_act_buzzer:
000b5e           	.BYTE 0x1
                 _power_link1_err_act_buzzer:
000b5f           	.BYTE 0x1
                 _power_link2_err_act_buzzer:
000b60           	.BYTE 0x1
                 _sw_status:
000b61           	.BYTE 0x1
                 _power_link_1:
000b62           	.BYTE 0x1
                 _power_link_2:
000b63           	.BYTE 0x1
                 _power_link1_err:
000b64           	.BYTE 0x1
                 _power_link2_err:
000b65           	.BYTE 0x1
                 _loss_count_a:
000b66           	.BYTE 0x2
                 _loss_count_ge:
000b68           	.BYTE 0x2
                 _link_err_detail:
000b6a           	.BYTE 0x2
                 _div_err_detail:
000b6c           	.BYTE 0x1
                 _power_1_err_detail:
000b6d           	.BYTE 0x1
                 _power_2_err_detail:
000b6e           	.BYTE 0x1
                 _bat_1_err_detail:
000b6f           	.BYTE 0x1
                 _bat_2_err_detail:
000b70           	.BYTE 0x1
                 _gen_err_detail:
000b71           	.BYTE 0x1
                 _power_1_err:
000b72           	.BYTE 0x1
                 _power_2_err:
000b73           	.BYTE 0x1
                 _err_bat1_temp:
000b74           	.BYTE 0x1
                 _err_bat2_temp:
000b75           	.BYTE 0x1
                 _err_bat1_volt:
000b76           	.BYTE 0x1
                 _err_bat2_volt:
000b77           	.BYTE 0x1
                 _err_bat1_curr:
000b78           	.BYTE 0x1
                 _err_bat2_curr:
000b79           	.BYTE 0x1
                 _Common_CheckLink_number:
000b7a           	.BYTE 0x1
                 _Distributor_ShutdownErroResponse_number:
000b7b           	.BYTE 0x1
                 _Distributor_BITBetailResponse_number:
000b7c           	.BYTE 0x1
                 _Distributor_PBIT_number:
000b7d           	.BYTE 0x1
                 _Distributor_TimeSyncAck_number:
000b7e           	.BYTE 0x1
                 _Distributor_ShutdownResponse_number:
000b7f           	.BYTE 0x1
                 _PoBITResult_number:
000b80           	.BYTE 0x1
                 _PoBITResult_number_ack:
000b81           	.BYTE 0x1
                 _Distributor_devicestatus_number:
000b82           	.BYTE 0x1
                 _Common_CHeckLink_act:
000b83           	.BYTE 0x1
                 _Distributor_PBIT_act:
000b84           	.BYTE 0x1
                 _Distributor_ShutdownResponse_act:
000b85           	.BYTE 0x1
                 _Distributor_ShutdownErroResponse_act:
000b86           	.BYTE 0x1
                 _Distributor_TimeSyncAck_act:
000b87           	.BYTE 0x1
                 _Distributor_BITDetailResponse_act:
000b88           	.BYTE 0x1
                 _Distributor_PoBIT_act:
000b89           	.BYTE 0x1
                 _Distributor_PoBIT_act_pre:
000b8a           	.BYTE 0x1
                 _send_to_ge_active:
000b8b           	.BYTE 0x1
                 _po_bit_recive_data_detail:
000b8c           	.BYTE 0x1
                 _ge_data_kind:
000b8d           	.BYTE 0x1
                 _mode_change_and_init:
000b8e           	.BYTE 0x1
                 _mode_change_count:
000b8f           	.BYTE 0x1
                 _buzzer_out_wait:
000b90           	.BYTE 0x1
                 _init_mod_switch:
000b91           	.BYTE 0x1
                 _rx_buffer0:
000b92           	.BYTE 0x8
                 _rx_wr_index0:
000b9a           	.BYTE 0x1
                 _rx_rd_index0:
000b9b           	.BYTE 0x1
                 _rx_counter0:
000b9c           	.BYTE 0x1
                 _rx_buffer1:
000b9d           	.BYTE 0x8
                 _rx_wr_index1:
000ba5           	.BYTE 0x1
                 _rx_rd_index1:
000ba6           	.BYTE 0x1
                 _rx_counter1:
000ba7           	.BYTE 0x1
                 _rx_buffer2:
000ba8           	.BYTE 0x8
                 _rx_wr_index2:
000bb0           	.BYTE 0x1
                 _rx_rd_index2:
000bb1           	.BYTE 0x1
                 _rx_counter2:
000bb2           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
001aac 920a      	ST   -Y,R0
001aad 921a      	ST   -Y,R1
001aae 92fa      	ST   -Y,R15
001aaf 936a      	ST   -Y,R22
001ab0 937a      	ST   -Y,R23
001ab1 938a      	ST   -Y,R24
001ab2 939a      	ST   -Y,R25
001ab3 93aa      	ST   -Y,R26
001ab4 93ba      	ST   -Y,R27
001ab5 93ea      	ST   -Y,R30
001ab6 93fa      	ST   -Y,R31
001ab7 b7ef      	IN   R30,SREG
001ab8 93ea      	ST   -Y,R30
001ab9 931a      	ST   -Y,R17
001aba 930a      	ST   -Y,R16
001abb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:149 WORDS
                 SUBOPT_0x1:
001abc e0b0      	LDI  R27,0
001abd e0e0      	LDI  R30,LOW(256)
001abe e0f1      	LDI  R31,HIGH(256)
001abf 940e 1c7d 	CALL __MULW12
001ac1 01df      	MOVW R26,R30
001ac2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2:
001ac3 e0e0      	LDI  R30,LOW(0)
001ac4 93e0 0a13 	STS  _voltage_1,R30
001ac6 93e0 0a14 	STS  _voltage_1+1,R30
001ac8 93e0 0a15 	STS  _currunt_1,R30
001aca 93e0 0a16 	STS  _currunt_1+1,R30
001acc 93e0 0a08 	STS  _bat_volt_1,R30
001ace 93e0 0a09 	STS  _bat_volt_1+1,R30
001ad0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
001ad1 93e0 0a15 	STS  _currunt_1,R30
001ad3 93f0 0a16 	STS  _currunt_1+1,R31
001ad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
001ad6 e1e0      	LDI  R30,LOW(_hour)
001ad7 e0fa      	LDI  R31,HIGH(_hour)
001ad8 93fa      	ST   -Y,R31
001ad9 93ea      	ST   -Y,R30
001ada e1e1      	LDI  R30,LOW(_minute)
001adb e0fa      	LDI  R31,HIGH(_minute)
001adc 93fa      	ST   -Y,R31
001add 93ea      	ST   -Y,R30
001ade e1a2      	LDI  R26,LOW(_sec)
001adf e0ba      	LDI  R27,HIGH(_sec)
001ae0 940c 1a33 	JMP  _rtc_get_time
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
001ae2 e0e0      	LDI  R30,LOW(0)
001ae3 93e0 0a17 	STS  _voltage_2,R30
001ae5 93e0 0a18 	STS  _voltage_2+1,R30
001ae7 93e0 0a19 	STS  _currunt_2,R30
001ae9 93e0 0a1a 	STS  _currunt_2+1,R30
001aeb 93e0 0a0a 	STS  _bat_volt_2,R30
001aed 93e0 0a0b 	STS  _bat_volt_2+1,R30
001aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
001af0 93e0 0a19 	STS  _currunt_2,R30
001af2 93f0 0a1a 	STS  _currunt_2+1,R31
001af4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x7:
001af5 e0ee      	LDI  R30,LOW(_week)
001af6 e0fa      	LDI  R31,HIGH(_week)
001af7 93fa      	ST   -Y,R31
001af8 93ea      	ST   -Y,R30
001af9 e0ef      	LDI  R30,LOW(_day)
001afa e0fa      	LDI  R31,HIGH(_day)
001afb 93fa      	ST   -Y,R31
001afc 93ea      	ST   -Y,R30
001afd e0ed      	LDI  R30,LOW(_month)
001afe e0fa      	LDI  R31,HIGH(_month)
001aff 93fa      	ST   -Y,R31
001b00 93ea      	ST   -Y,R30
001b01 e0ac      	LDI  R26,LOW(_year)
001b02 e0ba      	LDI  R27,HIGH(_year)
001b03 940c 1a5c 	JMP  _rtc_get_date
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8:
001b05 e0e0      	LDI  R30,LOW(0)
                +
001b06 93e0 0ad5+STS _data_buffer2_temp + ( 13 ) , R30
                 	__PUTB1MN _data_buffer2_temp,13
                +
001b08 93e0 0ad4+STS _data_buffer2_temp + ( 12 ) , R30
                 	__PUTB1MN _data_buffer2_temp,12
                +
001b0a 93e0 0ad3+STS _data_buffer2_temp + ( 11 ) , R30
                 	__PUTB1MN _data_buffer2_temp,11
                +
001b0c 93e0 0ad2+STS _data_buffer2_temp + ( 10 ) , R30
                 	__PUTB1MN _data_buffer2_temp,10
                +
001b0e 93e0 0ad1+STS _data_buffer2_temp + ( 9 ) , R30
                 	__PUTB1MN _data_buffer2_temp,9
                +
001b10 93e0 0ad0+STS _data_buffer2_temp + ( 8 ) , R30
                 	__PUTB1MN _data_buffer2_temp,8
                +
001b12 93e0 0acf+STS _data_buffer2_temp + ( 7 ) , R30
                 	__PUTB1MN _data_buffer2_temp,7
                +
001b14 93e0 0ace+STS _data_buffer2_temp + ( 6 ) , R30
                 	__PUTB1MN _data_buffer2_temp,6
                +
001b16 93e0 0acd+STS _data_buffer2_temp + ( 5 ) , R30
                 	__PUTB1MN _data_buffer2_temp,5
                +
001b18 93e0 0acc+STS _data_buffer2_temp + ( 4 ) , R30
                 	__PUTB1MN _data_buffer2_temp,4
                +
001b1a 93e0 0acb+STS _data_buffer2_temp + ( 3 ) , R30
                 	__PUTB1MN _data_buffer2_temp,3
                +
001b1c 93e0 0aca+STS _data_buffer2_temp + ( 2 ) , R30
                 	__PUTB1MN _data_buffer2_temp,2
                +
001b1e 93e0 0ac9+STS _data_buffer2_temp + ( 1 ) , R30
                 	__PUTB1MN _data_buffer2_temp,1
001b20 93e0 0ac8 	STS  _data_buffer2_temp,R30
001b22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:129 WORDS
                 SUBOPT_0x9:
001b23 e0e0      	LDI  R30,LOW(0)
                +
001b24 93e0 0acf+STS _data_buffer2_temp + ( 7 ) , R30
                 	__PUTB1MN _data_buffer2_temp,7
                +
001b26 93e0 0ace+STS _data_buffer2_temp + ( 6 ) , R30
                 	__PUTB1MN _data_buffer2_temp,6
                +
001b28 93e0 0acd+STS _data_buffer2_temp + ( 5 ) , R30
                 	__PUTB1MN _data_buffer2_temp,5
                +
001b2a 93e0 0acc+STS _data_buffer2_temp + ( 4 ) , R30
                 	__PUTB1MN _data_buffer2_temp,4
                +
001b2c 93e0 0acb+STS _data_buffer2_temp + ( 3 ) , R30
                 	__PUTB1MN _data_buffer2_temp,3
                +
001b2e 93e0 0aca+STS _data_buffer2_temp + ( 2 ) , R30
                 	__PUTB1MN _data_buffer2_temp,2
                +
001b30 93e0 0ac9+STS _data_buffer2_temp + ( 1 ) , R30
                 	__PUTB1MN _data_buffer2_temp,1
001b32 93e0 0ac8 	STS  _data_buffer2_temp,R30
001b34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xA:
001b35 e0e0      	LDI  R30,LOW(0)
                +
001b36 93e0 0ad0+STS _data_buffer2_temp + ( 8 ) , R30
                 	__PUTB1MN _data_buffer2_temp,8
001b38 cfea      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xB:
                +
001b39 91e0 0b25+LDS R30 , _data_buffer_ge_temp + ( 1 )
                 	__GETB1MN _data_buffer_ge_temp,1
001b3b 93e0 0b38 	STS  _CRC_H,R30
001b3d 91e0 0b24 	LDS  R30,_data_buffer_ge_temp
001b3f 93e0 0b39 	STS  _CRC_L,R30
001b41 e0e0      	LDI  R30,LOW(0)
001b42 93e0 0b68 	STS  _loss_count_ge,R30
001b44 93e0 0b69 	STS  _loss_count_ge+1,R30
001b46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xC:
001b47 91ed      	LD   R30,X+
001b48 91fd      	LD   R31,X+
001b49 9631      	ADIW R30,1
001b4a 93fe      	ST   -X,R31
001b4b 93ee      	ST   -X,R30
001b4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
001b4d e0a1      	LDI  R26,LOW(1)
001b4e 940e 0b0d 	CALL _putchar2
001b50 e0a3      	LDI  R26,LOW(3)
001b51 940e 0b0d 	CALL _putchar2
001b53 e2a3      	LDI  R26,LOW(35)
001b54 940c 0b0d 	JMP  _putchar2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
001b56 940e 0b0d 	CALL _putchar2
001b58 e0a0      	LDI  R26,LOW(0)
001b59 940e 0b0d 	CALL _putchar2
001b5b e0a1      	LDI  R26,LOW(1)
001b5c 940c 0b0d 	JMP  _putchar2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
001b5e e7af      	LDI  R26,LOW(127)
001b5f 940e 1a8b 	CALL _putchar
001b61 efae      	LDI  R26,LOW(254)
001b62 940c 1a8b 	JMP  _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x10:
001b64 e0a0      	LDI  R26,LOW(0)
001b65 940e 1a8b 	CALL _putchar
001b67 e0a0      	LDI  R26,LOW(0)
001b68 940e 1a8b 	CALL _putchar
001b6a e0a0      	LDI  R26,LOW(0)
001b6b 940c 1a8b 	JMP  _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
001b6d e0ad      	LDI  R26,LOW(13)
001b6e 940e 1a8b 	CALL _putchar
001b70 e0aa      	LDI  R26,LOW(10)
001b71 940c 1a8b 	JMP  _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12:
001b73 931a      	ST   -Y,R17
001b74 930a      	ST   -Y,R16
001b75 2f1a      	MOV  R17,R26
001b76 810a      	LDD  R16,Y+2
001b77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
001b78 2e4e      	MOV  R4,R30
001b79 2fa0      	MOV  R26,R16
001b7a 940e 0e20 	CALL _num_convert
001b7c 2400      	CLR  R0
001b7d 140b      	CP   R0,R11
001b7e 040c      	CPC  R0,R12
001b7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x14:
001b80 e0eb      	LDI  R30,LOW(11)
001b81 2e4e      	MOV  R4,R30
001b82 e0e5      	LDI  R30,LOW(5)
001b83 2e3e      	MOV  R3,R30
001b84 e0a3      	LDI  R26,LOW(3)
001b85 e0b0      	LDI  R27,0
001b86 940e 0d83 	CALL _fnd_out
001b88 e0ea      	LDI  R30,LOW(10)
001b89 2e4e      	MOV  R4,R30
001b8a e0e3      	LDI  R30,LOW(3)
001b8b 2e3e      	MOV  R3,R30
001b8c e0a3      	LDI  R26,LOW(3)
001b8d e0b0      	LDI  R27,0
001b8e 940e 0d83 	CALL _fnd_out
001b90 e0e9      	LDI  R30,LOW(9)
001b91 2e4e      	MOV  R4,R30
001b92 2433      	CLR  R3
001b93 e0a3      	LDI  R26,LOW(3)
001b94 e0b0      	LDI  R27,0
001b95 940c 0d83 	JMP  _fnd_out
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
001b97 2e4e      	MOV  R4,R30
001b98 e0e1      	LDI  R30,LOW(1)
001b99 2e3e      	MOV  R3,R30
001b9a e0a3      	LDI  R26,LOW(3)
001b9b e0b0      	LDI  R27,0
001b9c 940c 0d83 	JMP  _fnd_out
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
001b9e 93ea      	ST   -Y,R30
001b9f 2dab      	MOV  R26,R11
001ba0 940c 0e6b 	JMP  _digit1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
001ba2 93ea      	ST   -Y,R30
001ba3 2dab      	MOV  R26,R11
001ba4 940c 0e6f 	JMP  _digit2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
001ba6 93ea      	ST   -Y,R30
001ba7 2dab      	MOV  R26,R11
001ba8 940c 0e86 	JMP  _digit4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
001baa 93ea      	ST   -Y,R30
001bab 2dab      	MOV  R26,R11
001bac 940c 0e8a 	JMP  _digit5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1A:
001bae 91a0 0a13 	LDS  R26,_voltage_1
001bb0 91b0 0a14 	LDS  R27,_voltage_1+1
001bb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1B:
001bb3 e0ea      	LDI  R30,LOW(10)
001bb4 e0f0      	LDI  R31,HIGH(10)
001bb5 940e 1c82 	CALL __DIVW21U
001bb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
001bb8 dff5      	RCALL SUBOPT_0x1A
001bb9 e6e4      	LDI  R30,LOW(100)
001bba e0f0      	LDI  R31,HIGH(100)
001bbb 940e 1c82 	CALL __DIVW21U
001bbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
001bbe e6a4      	LDI  R26,LOW(100)
001bbf e0b0      	LDI  R27,HIGH(100)
001bc0 940e 1c75 	CALL __MULW12U
001bc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
001bc3 1bae      	SUB  R26,R30
001bc4 0bbf      	SBC  R27,R31
001bc5 cfed      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
001bc6 e0ea      	LDI  R30,LOW(10)
001bc7 e0f0      	LDI  R31,HIGH(10)
001bc8 940e 1c9a 	CALL __MODW21U
001bca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x20:
001bcb 91a0 0a17 	LDS  R26,_voltage_2
001bcd 91b0 0a18 	LDS  R27,_voltage_2+1
001bcf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
001bd0 dffa      	RCALL SUBOPT_0x20
001bd1 e6e4      	LDI  R30,LOW(100)
001bd2 e0f0      	LDI  R31,HIGH(100)
001bd3 940e 1c82 	CALL __DIVW21U
001bd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x22:
001bd6 91a0 0a15 	LDS  R26,_currunt_1
001bd8 91b0 0a16 	LDS  R27,_currunt_1+1
001bda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
001bdb dffa      	RCALL SUBOPT_0x22
001bdc e6e4      	LDI  R30,LOW(100)
001bdd e0f0      	LDI  R31,HIGH(100)
001bde 940e 1c82 	CALL __DIVW21U
001be0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x24:
001be1 91a0 0a19 	LDS  R26,_currunt_2
001be3 91b0 0a1a 	LDS  R27,_currunt_2+1
001be5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
001be6 dffa      	RCALL SUBOPT_0x24
001be7 e6e4      	LDI  R30,LOW(100)
001be8 e0f0      	LDI  R31,HIGH(100)
001be9 940e 1c82 	CALL __DIVW21U
001beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
001bec 91a0 0a08 	LDS  R26,_bat_volt_1
001bee 91b0 0a09 	LDS  R27,_bat_volt_1+1
001bf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
001bf1 91a0 0a0a 	LDS  R26,_bat_volt_2
001bf3 91b0 0a0b 	LDS  R27,_bat_volt_2+1
001bf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x28:
001bf6 940e 0a2f 	CALL _putchar1
001bf8 e2a8      	LDI  R26,LOW(40)
001bf9 940e 0a2f 	CALL _putchar1
001bfb e2a0      	LDI  R26,LOW(32)
001bfc 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x29:
001bfe 940e 0a2f 	CALL _putchar1
001c00 e2a4      	LDI  R26,LOW(36)
001c01 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A:
001c03 e0a0      	LDI  R26,LOW(0)
001c04 940e 0a2f 	CALL _putchar1
001c06 e0a0      	LDI  R26,LOW(0)
001c07 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
001c09 e0a1      	LDI  R26,LOW(1)
001c0a 940e 0a2f 	CALL _putchar1
001c0c e0a0      	LDI  R26,LOW(0)
001c0d 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2C:
001c0f 940e 0a2f 	CALL _putchar1
001c11 e0a0      	LDI  R26,LOW(0)
001c12 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2D:
001c14 940e 1cb9 	CALL __EEPROMRDB
001c16 2fae      	MOV  R26,R30
001c17 940c 0a2f 	JMP  _putchar1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
001c19 e3a8      	LDI  R26,LOW(56)
001c1a 940e 0a2f 	CALL _putchar1
001c1c e0a1      	LDI  R26,LOW(1)
001c1d cfd8      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x2F:
001c1e 91e0 0b6a 	LDS  R30,_link_err_detail
001c20 91f0 0b6b 	LDS  R31,_link_err_detail+1
001c22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
001c23 d03c      	RCALL __SAVELOCR4
001c24 2f1a      	MOV  R17,R26
001c25 810c      	LDD  R16,Y+4
001c26 813d      	LDD  R19,Y+5
001c27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x31:
001c28 940e 1cdb 	CALL _i2c_start
001c2a eda0      	LDI  R26,LOW(208)
001c2b 940c 1d0f 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
001c2d d030      	RCALL __SAVELOCR6
001c2e 018d      	MOVW R16,R26
                +
001c2f 812e     +LDD R18 , Y + 6
001c30 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                +
001c31 8548     +LDD R20 , Y + 8
001c32 8559     +LDD R21 , Y + 8 + 1
                 	__GETWRS 20,21,8
001c33 cff4      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33:
001c34 940e 1d0f 	CALL _i2c_write
001c36 940e 1cea 	CALL _i2c_stop
001c38 940e 1cdb 	CALL _i2c_start
001c3a eda1      	LDI  R26,LOW(209)
001c3b 940e 1d0f 	CALL _i2c_write
001c3d e0a1      	LDI  R26,LOW(1)
001c3e 940c 1cf4 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
001c40 93ec      	ST   X,R30
001c41 e0a1      	LDI  R26,LOW(1)
001c42 940e 1cf4 	CALL _i2c_read
001c44 2fae      	MOV  R26,R30
001c45 940c 1a95 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
001c47 01d9      	MOVW R26,R18
001c48 93ec      	ST   X,R30
001c49 e0a0      	LDI  R26,LOW(0)
001c4a 940e 1cf4 	CALL _i2c_read
001c4c 2fae      	MOV  R26,R30
001c4d 940c 1a95 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
001c4f 940e 1d0f 	CALL _i2c_write
001c51 2fa1      	MOV  R26,R17
001c52 940e 1aa2 	CALL _bin2bcd
001c54 2fae      	MOV  R26,R30
001c55 940c 1d0f 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
001c57 940e 1d0f 	CALL _i2c_write
001c59 2fa3      	MOV  R26,R19
001c5a 940e 1aa2 	CALL _bin2bcd
001c5c 2fae      	MOV  R26,R30
001c5d 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
001c5e 935a      	ST   -Y,R21
                 __SAVELOCR5:
001c5f 934a      	ST   -Y,R20
                 __SAVELOCR4:
001c60 933a      	ST   -Y,R19
                 __SAVELOCR3:
001c61 932a      	ST   -Y,R18
                 __SAVELOCR2:
001c62 931a      	ST   -Y,R17
001c63 930a      	ST   -Y,R16
001c64 9508      	RET
                 
                 __LOADLOCR6:
001c65 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001c66 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001c67 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001c68 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001c69 8119      	LDD  R17,Y+1
001c6a 8108      	LD   R16,Y
001c6b 9508      	RET
                 
                 __ANEGW1:
001c6c 95f1      	NEG  R31
001c6d 95e1      	NEG  R30
001c6e 40f0      	SBCI R31,0
001c6f 9508      	RET
                 
                 __EQB12:
001c70 17ea      	CP   R30,R26
001c71 e0e1      	LDI  R30,1
001c72 f009      	BREQ __EQB12T
001c73 27ee      	CLR  R30
                 __EQB12T:
001c74 9508      	RET
                 
                 __MULW12U:
001c75 9ffa      	MUL  R31,R26
001c76 2df0      	MOV  R31,R0
001c77 9feb      	MUL  R30,R27
001c78 0df0      	ADD  R31,R0
001c79 9fea      	MUL  R30,R26
001c7a 2de0      	MOV  R30,R0
001c7b 0df1      	ADD  R31,R1
001c7c 9508      	RET
                 
                 __MULW12:
001c7d d02d      	RCALL __CHKSIGNW
001c7e dff6      	RCALL __MULW12U
001c7f f40e      	BRTC __MULW121
001c80 dfeb      	RCALL __ANEGW1
                 __MULW121:
001c81 9508      	RET
                 
                 __DIVW21U:
001c82 2400      	CLR  R0
001c83 2411      	CLR  R1
001c84 e190      	LDI  R25,16
                 __DIVW21U1:
001c85 0faa      	LSL  R26
001c86 1fbb      	ROL  R27
001c87 1c00      	ROL  R0
001c88 1c11      	ROL  R1
001c89 1a0e      	SUB  R0,R30
001c8a 0a1f      	SBC  R1,R31
001c8b f418      	BRCC __DIVW21U2
001c8c 0e0e      	ADD  R0,R30
001c8d 1e1f      	ADC  R1,R31
001c8e c001      	RJMP __DIVW21U3
                 __DIVW21U2:
001c8f 60a1      	SBR  R26,1
                 __DIVW21U3:
001c90 959a      	DEC  R25
001c91 f799      	BRNE __DIVW21U1
001c92 01fd      	MOVW R30,R26
001c93 01d0      	MOVW R26,R0
001c94 9508      	RET
                 
                 __DIVW21:
001c95 d015      	RCALL __CHKSIGNW
001c96 dfeb      	RCALL __DIVW21U
001c97 f40e      	BRTC __DIVW211
001c98 dfd3      	RCALL __ANEGW1
                 __DIVW211:
001c99 9508      	RET
                 
                 __MODW21U:
001c9a dfe7      	RCALL __DIVW21U
001c9b 01fd      	MOVW R30,R26
001c9c 9508      	RET
                 
                 __MODW21:
001c9d 94e8      	CLT
001c9e ffb7      	SBRS R27,7
001c9f c004      	RJMP __MODW211
001ca0 95b1      	NEG  R27
001ca1 95a1      	NEG  R26
001ca2 40b0      	SBCI R27,0
001ca3 9468      	SET
                 __MODW211:
001ca4 fdf7      	SBRC R31,7
001ca5 dfc6      	RCALL __ANEGW1
001ca6 dfdb      	RCALL __DIVW21U
001ca7 01fd      	MOVW R30,R26
001ca8 f40e      	BRTC __MODW212
001ca9 dfc2      	RCALL __ANEGW1
                 __MODW212:
001caa 9508      	RET
                 
                 __CHKSIGNW:
001cab 94e8      	CLT
001cac fff7      	SBRS R31,7
001cad c002      	RJMP __CHKSW1
001cae dfbd      	RCALL __ANEGW1
001caf 9468      	SET
                 __CHKSW1:
001cb0 ffb7      	SBRS R27,7
001cb1 c006      	RJMP __CHKSW2
001cb2 95b1      	NEG  R27
001cb3 95a1      	NEG  R26
001cb4 40b0      	SBCI R27,0
001cb5 f800      	BLD  R0,0
001cb6 9403      	INC  R0
001cb7 fa00      	BST  R0,0
                 __CHKSW2:
001cb8 9508      	RET
                 
                 __EEPROMRDB:
001cb9 99f9      	SBIC EECR,EEWE
001cba cffe      	RJMP __EEPROMRDB
001cbb 93ff      	PUSH R31
001cbc b7ff      	IN   R31,SREG
001cbd 94f8      	CLI
001cbe bda1      	OUT  EEARL,R26
001cbf bdb2      	OUT  EEARH,R27
001cc0 9af8      	SBI  EECR,EERE
001cc1 b5e0      	IN   R30,EEDR
001cc2 bfff      	OUT  SREG,R31
001cc3 91ff      	POP  R31
001cc4 9508      	RET
                 
                 __EEPROMWRB:
001cc5 9bf9      	SBIS EECR,EEWE
001cc6 c002      	RJMP __EEPROMWRB1
001cc7 95a8      	WDR
001cc8 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001cc9 b79f      	IN   R25,SREG
001cca 94f8      	CLI
001ccb bda1      	OUT  EEARL,R26
001ccc bdb2      	OUT  EEARH,R27
001ccd 9af8      	SBI  EECR,EERE
001cce b580      	IN   R24,EEDR
001ccf 17e8      	CP   R30,R24
001cd0 f019      	BREQ __EEPROMWRB0
001cd1 bde0      	OUT  EEDR,R30
001cd2 9afa      	SBI  EECR,EEMWE
001cd3 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001cd4 bf9f      	OUT  SREG,R25
001cd5 9508      	RET
                 
                 	.equ __scl_bit=1
                 	.equ __sda_bit=2
                 	.equ __i2c_port_scl=0x11
                 	.equ __i2c_dir_scl=__i2c_port_scl-1
                 	.equ __i2c_pin_scl=__i2c_port_scl-2
                 	.equ __i2c_port_sda=0x11
                 	.equ __i2c_dir_sda=__i2c_port_sda-1
                 	.equ __i2c_pin_sda=__i2c_port_sda-2
                 
                 _i2c_init:
001cd6 9889      	cbi  __i2c_port_scl,__scl_bit
001cd7 988a      	cbi  __i2c_port_sda,__sda_bit
001cd8 9a81      	sbi  __i2c_dir_scl,__scl_bit
001cd9 9882      	cbi  __i2c_dir_sda,__sda_bit
001cda c015      	rjmp __i2c_delay2
                 _i2c_start:
001cdb 9882      	cbi  __i2c_dir_sda,__sda_bit
001cdc 9881      	cbi  __i2c_dir_scl,__scl_bit
001cdd 27ee      	clr  r30
001cde 0000      	nop
001cdf 9b7a      	sbis __i2c_pin_sda,__sda_bit
001ce0 9508      	ret
001ce1 9b79      	sbis __i2c_pin_scl,__scl_bit
001ce2 9508      	ret
001ce3 d004      	rcall __i2c_delay1
001ce4 9a82      	sbi  __i2c_dir_sda,__sda_bit
001ce5 d002      	rcall __i2c_delay1
001ce6 9a81      	sbi  __i2c_dir_scl,__scl_bit
001ce7 e0e1      	ldi  r30,1
                 __i2c_delay1:
001ce8 e067      	ldi  r22,7
001ce9 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
001cea 9a82      	sbi  __i2c_dir_sda,__sda_bit
001ceb 9a81      	sbi  __i2c_dir_scl,__scl_bit
001cec d003      	rcall __i2c_delay2
001ced 9881      	cbi  __i2c_dir_scl,__scl_bit
001cee dff9      	rcall __i2c_delay1
001cef 9882      	cbi  __i2c_dir_sda,__sda_bit
                 __i2c_delay2:
001cf0 e06e      	ldi  r22,14
                 __i2c_delay2l:
001cf1 956a      	dec  r22
001cf2 f7f1      	brne __i2c_delay2l
001cf3 9508      	ret
                 _i2c_read:
001cf4 e078      	ldi  r23,8
                 __i2c_read0:
001cf5 9881      	cbi  __i2c_dir_scl,__scl_bit
001cf6 dff1      	rcall __i2c_delay1
                 __i2c_read3:
001cf7 9b79      	sbis __i2c_pin_scl,__scl_bit
001cf8 cffe      	rjmp __i2c_read3
001cf9 dfee      	rcall __i2c_delay1
001cfa 9488      	clc
001cfb 997a      	sbic __i2c_pin_sda,__sda_bit
001cfc 9408      	sec
001cfd 9a81      	sbi  __i2c_dir_scl,__scl_bit
001cfe dff1      	rcall __i2c_delay2
001cff 1fee      	rol  r30
001d00 957a      	dec  r23
001d01 f799      	brne __i2c_read0
001d02 2f7a      	mov  r23,r26
001d03 2377      	tst  r23
001d04 f411      	brne __i2c_read1
001d05 9882      	cbi  __i2c_dir_sda,__sda_bit
001d06 c001      	rjmp __i2c_read2
                 __i2c_read1:
001d07 9a82      	sbi  __i2c_dir_sda,__sda_bit
                 __i2c_read2:
001d08 dfdf      	rcall __i2c_delay1
001d09 9881      	cbi  __i2c_dir_scl,__scl_bit
001d0a dfe5      	rcall __i2c_delay2
001d0b 9a81      	sbi  __i2c_dir_scl,__scl_bit
001d0c dfdb      	rcall __i2c_delay1
001d0d 9882      	cbi  __i2c_dir_sda,__sda_bit
001d0e cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
001d0f e078      	ldi  r23,8
                 __i2c_write0:
001d10 0faa      	lsl  r26
001d11 f410      	brcc __i2c_write1
001d12 9882      	cbi  __i2c_dir_sda,__sda_bit
001d13 c001      	rjmp __i2c_write2
                 __i2c_write1:
001d14 9a82      	sbi  __i2c_dir_sda,__sda_bit
                 __i2c_write2:
001d15 dfda      	rcall __i2c_delay2
001d16 9881      	cbi  __i2c_dir_scl,__scl_bit
001d17 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
001d18 9b79      	sbis __i2c_pin_scl,__scl_bit
001d19 cffe      	rjmp __i2c_write3
001d1a dfcd      	rcall __i2c_delay1
001d1b 9a81      	sbi  __i2c_dir_scl,__scl_bit
001d1c 957a      	dec  r23
001d1d f791      	brne __i2c_write0
001d1e 9882      	cbi  __i2c_dir_sda,__sda_bit
001d1f dfc8      	rcall __i2c_delay1
001d20 9881      	cbi  __i2c_dir_scl,__scl_bit
001d21 dfce      	rcall __i2c_delay2
001d22 e0e1      	ldi  r30,1
001d23 997a      	sbic __i2c_pin_sda,__sda_bit
001d24 27ee      	clr  r30
001d25 9a81      	sbi  __i2c_dir_scl,__scl_bit
001d26 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
001d27 9610      	adiw r26,0
001d28 f039      	breq __delay_ms1
                 __delay_ms0:
001d29 95a8      	wdr
                +
001d2a ec8d     +LDI R24 , LOW ( 0xACD )
001d2b e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
001d2c 9701     +SBIW R24 , 1
001d2d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
001d2e 9711      	sbiw r26,1
001d2f f7c9      	brne __delay_ms0
                 __delay_ms1:
001d30 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  26 r1 :  10 r2 :  11 r3 :  28 r4 :  11 r5 :   3 r6 :   3 r7 :  12 
r8 :  12 r9 :   2 r10:   2 r11:  33 r12:   9 r13:   3 r14:   3 r15:   2 
r16:  32 r17:  35 r18:   6 r19:   9 r20:   5 r21:   3 r22:   7 r23:   8 
r24:  33 r25:  12 r26: 975 r27: 181 r28:   6 r29:   1 r30:2087 r31: 346 
x  :  11 y  : 143 z  :  10 
Registers used: 35 out of 35 (100.0%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  55 add   :  60 
adiw  :   7 and   :   0 andi  : 126 asr   :   0 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  79 
brge  :   6 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   5 brmi  :   1 brne  : 270 brpl  :   0 brsh  :  14 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 392 
cbi   :  88 cbr   :   0 clc   :   1 clh   :   0 cli   :   3 cln   :   0 
clr   :  21 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   0 
cp    :  17 cpc   :  55 cpi   : 336 cpse  :   0 dec   :  11 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   7 inc   :   1 jmp   :  82 
ld    :  38 ldd   :  17 ldi   : 717 lds   : 868 lpm   :   7 lsl   :   5 
lsr   :   0 mov   : 103 movw  :  16 mul   :   3 muls  :   0 mulsu :   0 
neg   :   6 nop   :   1 or    :   6 ori   :  47 out   :  40 pop   :   1 
push  :   1 rcall :  93 ret   :  72 reti  :   3 rjmp  : 375 rol   :   4 
ror   :   0 sbc   :   2 sbci  :   6 sbi   :  82 sbic  :  36 sbis  :  41 
sbiw  :  32 sbr   :   1 sbrc  :   4 sbrs  :   7 sec   :   1 seh   :   0 
sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   6 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    : 102 std   :   0 sts   : 812 
sub   :   2 subi  :  46 swap  :   1 tst   :   1 wdr   :   2 
Instructions used: 68 out of 119 (57.1%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x003a62  14894     52  14946  262144   5.7%
[.dseg] 0x000200 0x000bb3      0    435    435    8192   5.3%
[.eseg] 0x000000 0x00000c      0      6      6    4096   0.1%

Assembly complete, 0 errors, 15 warnings
